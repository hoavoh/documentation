{
  "openapi": "3.0.0",
  "info": {
    "version": "2.1.0",
    "title": "MessageMedia",
    "termsOfService": "https://messagemedia.com/au/legal/terms-of-service/",
    "contact": {
      "email": "developers@messagemedia.com",
      "url": "https://developers.messagemedia.com/collaborate/slack/"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://developers.messagemedia.com/wp-content/themes/devportal/dist/images/MM-logo-New.png)"
    },
    "description": "# Introduction\nThe MessageMedia APIs provide powerful business messaging capabilities across sending, receiving, and processing SMS, MMS, and rich messaging. \n\nAll requests to the MessageMedia REST API must be authenticated, this can either be done using Basic Authentication or by signing with a HMAC signature.\n  \n# Credentials\n  \nTo access the API, an API key and secret are required.\n  \n[Sign up for a developer account here to get access](https://developers.messagemedia.com/register/): https://developers.messagemedia.com/register/.\n\n# Features\n###  De-Duplication \nDe-Duplication helps you avoid having to undertake data cleansing before commencing send outs.  \nIt automatically detects and withholds messages deemed to be duplicates through the use of a 24-hour window – if a message is sent to the same number with the same content within a 24hr period, the subsequent message(s) will be withheld and rejected. To enable this, you don't need to make any changes to your application, just an account configuration change by MessageMedia's support team.\n\n###  Social Sending \nSocial Sending permits messages to be sent only during sociable hours - i.e. 8am to 6pm (based on your accounts local time zone - not local time). \nMessages sent outside of these hours are scheduled to be released during the next social time period. This feature helps businesses avoid send-outs during a time that would be deemed unsuitable by the customer. To enable this, you don't need to make any changes to your application, just an account configuration change by MessageMedia's support team.\n\n###  Familiar Sender\nFamiliar Sender ensures all communication sent to a customer are from the same phone number. \nThis allows businesses to build trust and familiarity with their customers and not confuse them by changing outgoing numbers. To enable this, you don't need to make any changes to your application, just an account configuration change by MessageMedia's support team.\n\n### Character Converter\nCharacters in a message may not always fall within the GSM-7 supported characterset, and when this occurs all \noutbound messages will be encoded using UCS-2 leading to the customer being double-charged for the SMS. Character Converter \ncan help you avoid being double-charged for your SMS by converting all characters into the GSM-7 format ensuring you always \nget the maximum characters into an SMS. Bear in my mind, this will downgrade all your unicode characters so for instance, \nyour emojis will be translated into a string of unknown characters (eg: �).  To enable this, you don't need to make any \nchanges to your application, just an account configuration change by MessageMedia's support team.\n"
  },
  "tags": [
    {
      "name": "Basic Authentication",
      "description": "\nEvery request requires an `Authorization` header in the following format:\n```plain\nAuthorization: Basic Base64(api_key:api_secret)\n```\nWhere the header consists of the Basic keyword followed by your Basic Authentication `api_key` and `api_secret` that you have been supplied by support, separated with a colon (:) which is then Base64 encoded.\n### Example request with Basic Authentication\n```plain\nPOST /v1/messages HTTP/1.1\nHost: api.messagemedia.com\nAccept: application/json\nContent-Type: application/json\nAuthorization: Basic dGhpc2lzYWtleTp0aGlzaXNhc2VjcmV0Zm9ybW1iYXNpY2F1dGhyZXN0YXBp\n{\n  \"messages\": [\n    {\n      \"content\": \"Hello World\",\n      \"destination_number\": \"+61491570156\",\n      \"format\": \"SMS\"\n    }\n  ]\n} \n```\n_Note: spaces are used as indentation in the body of the above request._"
    },
    {
      "name": "HMAC Authentication",
      "description": "\nEvery request requires an `Authorization` header in the following formats:\nFor a request with a request body:\n```plain\nAuthorization: hmac username=\"<API KEY>\", algorithm=\"hmac-sha1\", headers  =\"Date Content-MD5 request-line\", signature=\"<SIGNATURE>\"\n```\n\nFor a request _without_ a request body:\n\n```plain\nAuthorization: hmac username=\"<API KEY>\", algorithm=\"hmac-sha1\", headers=\"Date request-line\", signature=\"<SIGNATURE>\"\n```\n### To create this header\n#### Step 1\nAdd a `Date` header to the request using the current date time in [RFC7231 Section 7.1.1.2](http://tools.ietf.org/html/rfc7231#section-7.1.1.2) format\n#### Step 2\nIf the request has a body, add a header called `Content-MD5` where the value of this header is an MD5 hash of the request body, otherwise this header is not required\n#### Step 3\nCreate a signing string by concatenating the `Date` header, the\n`Content-MD5` header (if set) and the request line with line breaks:\n```plain\nDate: Sat, 30 Jul 2016 05:13:23 GMT\\nContent-MD5: 10fd4feab20d38432480c07301e49616\\nPOST /v1/messages HTTP/1.1\n```\nor\n```plain\nDate: Sat, 30 Jul 2016 05:13:23 GMT\\nGET /v1/messages/404b941b-2a29-469f-b114-9ea3e16bbe18 HTTP/1.1\n```\n#### Step 4\nCreate a SHA1 HMAC hash using the signing string and the secret key (both converted to bytes using UTF-8) ```HMAC-SHA1(signing string, secret)```\n#### Step 5\nBase64 encode the HMAC hash and include it as the signature in the ```Authorization``` header\n### Example request with body\n```plain\nPOST /v1/messages HTTP/1.1\nHost: api.messagemedia.com\nAccept: application/json\nContent-Type: application/json\nDate: Sat, 30 Jul 2016 05:18:52 GMT\nAuthorization: hmac username=\"uCXUdoogNfCsehEClbO2\", algorithm=\"hmac-sha1\", headers=\"Date Content-MD5 request-line\", signature=\"Ia4G5lkhH/3NDYpix+8ZHUnp6bA=\"\nContent-MD5: 5407644fa83bec240dede971307e0cad\nContent-Length: 133\n{\n  \"messages\": [\n    {\n      \"content\": \"Hello World\",\n      \"destination_number\": \"+61491570156\",\n    \"format\": \"SMS\"\n    }\n  ]\n}\n```\n_Note: spaces are used as indentation in the body of the above request._\n### Example request without body\n```plain\nGET /v1/messages/404b941b-2a29-469f-b114-9ea3e16bbe18 HTTP/1.1\nHost: api.messagemedia.com\nAccept: application/json\nDate: Sat, 30 Jul 2016 05:18:52 GMT\nAuthorization: hmac username=\"uCXUdoogNfCsehEClbO2\", algorithm=\"hmac-sha1\", headers=\"Date request-line\", signature=\"NTUwMjUwNTVmZGYzZTIxODMyYjc1ZmM3M2EwZWQ1NzA3NzA4ZTZjNw==\" ```"
    },
    {
      "name": "Development Tools",
      "description": "## SDKs\nSoftware Development Kits are available across six languages to assist with integration with the major endpoints. \n\nIn the event an SDK is not available or does not work with your environment, any standard HTTP client library can be used. These are some client libraries we recommend, \nthat include HMAC authentication capability: \n\n### C#\n[RestSharp](http://restsharp.org/) with custom authenticator\n\n### Java\n[Acquia HTTP Request Interceptor](https://github.com/acquia/http-hmac-java) for the Apache HTTP Client\n\n### Javascript\n[Acquia HTTP HMAC Signer for JavaScript](https://github.com/acquia/http-hmac-javascript)\n\n### PHP\n[HTTP HMAC Signer for PHP](https://github.com/acquia/http-hmac-php) Which can be used with [Guzzle](http://docs.guzzlephp.org/en/stable/).\n\n### Python\n[HMAC](https://github.com/guardian/httpie-hmac-auth) auth plugin for [HTTPie](https://github.com/jakubroztocil/httpie).\n\n### Ruby\n[APIAuth](https://github.com/mgomes/api_auth) Ruby Gem \n\n## Postman Collections\n"
    },
    {
      "name": "Messages",
      "description": "The MessageMedia Messages API provides a number of endpoints for building powerful two-way messaging applications. The Messages API provides access to three main resources:\n* Messages - Messages delivered from an application to a handset.\n* Delivery Reports - Real time reports on the delivery status of a message. As a message is processed, it's status may change several times before it is finally delivered to a handset.\n* Replies - Messages sent from a handset to an application. These messages are typically a reply to a previously sent message.\n![Message Flow](https://i.imgur.com/jJeHwf5.png)"
    },
    {
      "name": "Delivery Reports",
      "description": "If a callback URL is specified in the submit message request, then changes to the message status, \nreplies received in response to the message or delivery reports received for the message will be pushed via a HTTP POST request. An alternative to delivery reports via callbacks is custom webhooks using the webhooks management API. \n\nAll notifications are JSON encoded and the request expects to receive a response in the HTTP 200 range. If a valid response isn't received the request will be retried in an exponentially backing off fashion.\n\nDelivery Reports may carry an additional charge. For pricing, please contact your Account Manager or Support Team (support@messagemedia.com).\n\nFor delivery reports or changes in the status of a message, the POST request to the specified URL will be as follows:\n  \n  _Note, multiple delivery report notifications will be recieved for a single message._\n\n```json\n{\n  \"callback_url\":\"http://mockbin.org/bin/ac52ebd4-eca1-4c86-bf38-4dce79633906\",\n  \"delivery_report_id\":\"693e87f2-a553-4281-9ffe-ddf04cbc4bf3\",\n  \"source_number\":\"+61491570156\",\n  \"date_received\":\"2016-11-03T11:49:02.807Z\",\n  \"status\":\"delivered\",\n  \"delay\":0,\n  \"submitted_date\":\"2016-11-03T11:49:01.551Z\",\n  \"original_text\":\"Hello world!\",\n  \"message_id\":\"389dc1a8-62a4-4110-ba61-af94806c006f\",\n  \"vendor_account_id\":{\n    \"vendor_id\":\"MessageMedia\",\n    \"account_id\":\"MyAccount\"\n  },\n  \"error_code\":\"220\",\n  \"metadata\":{\n    \"key\":\"value\"\n  }\n}\n```\n\n\nThe properties included in the notification are as follows:\n\n* **Callback URL**: The URL specified as the callback URL in the original submit message request.\n\n* **Delivery Report ID**: A unique ID for the delivery report that this notification represents.\n\n* **Source Number**: The destination address of the original message.\n\n* **Date Received**: The date and time at which this notification was generated in UTC.\n\n* **Status**: The status of the message as indicated by this delivery report. The status field can be one of the following values:\n\n  * `enroute`: Message has been received by the gateway and is being processed (or waiting to be processed).\n\n  * `submitted`: Message has been submitted to a provider/carrier for delivery.\n\n  * `delivered`: Message delivery has been confirmed by the provider, including to the handset (where possible).\n\n  * `expired`: The message has expired.\n\n  * `rejected`: The message will not be delivered - permanent failure. Reasons may include usage limit exceeded, insufficient credit, number blocked, or content filtered\n\n  * `failed`: The message has failed. Reasons may include no active routes to destination or undeliverable by downstream provider.\n\n* **Delay**: _Deprecated, no longer in use_\n\n* **Submitted Date**: Date time status of the message changed in UTC. For a delivered DR this may indicate the time at which the message was received on the handset.\n\n* **Original Text**: Text of the original message.\n\n* **Message ID**: ID of the original message.\n\n* **Vendor Account ID**: The account used to submit the original message. The vendor will always be `MessageMedia`\n\n* **Error Code**: A status code which provides additional information about the message status:\n\n  * `101`: Message being processed by the gateway.\n  \n  * `102`: Message is being rerouted to a different provider after failing via the first provider.\n  \n  * `151`: Message held for screening.\n  \n  * `200`: Message submitted to downstream provider for delivery.\n  \n  * `210`: Message accepted by downstream provider.\n  \n  * `211`: Message is enroute for delivery by provider.\n  \n  * `212`: Message submitted. Delivery pending.\n  \n  * `213`: Message scheduled for delivery by downstream provider.\n  \n  * `220`: Message delivered.\n  \n  * `221`: Message delivered to the handset.\n  \n  * `320`: Message validity period has expired (prior to submission).\n  \n  * `401`: Message validity period has expired (before delivery).\n  \n  * `301`: Usage threshold reached. Message discarded.\n  \n  * `302`: Destination address blocked. Message discarded.\n  \n  * `303`: Source address blocked. Message discarded.\n  \n  * `304`: Message dropped. Contact support.\n  \n  * `305`: Message discarded due to duplicate detection.\n  \n  * `402`: Message rejected by downstream provider.\n  \n  * `403`: Message skipped by downstream provider.\n  \n  * `410`: Invalid source address.\n  \n  * `411`: Invalid destination address.\n  \n  * `412`: Destination address blocked.\n  \n  * `413`: SMS service unavailable on destination.\n  \n  * `414`: Destination unreachable.\n  \n  * `330`: Gateway failure.\n  \n  * `331`: Message discarded.\n  \n  * `332`: No available route to destination.\n  \n  * `333`: Source address unsupported for this destination.\n  \n  * `400`: Message failed; undeliverable.\n  \n  * `405`: Message cancelled or deleted by provider.\n  \n"
    },
    {
      "name": "Replies",
      "description": ""
    },
    {
      "name": "Lookups",
      "description": "How confident are you in the accuracy of your database? Sending text messages to inactive, invalid or unrecognisable numbers wastes resources on messages that will never be read.\n\nOur Lookups API provides a simple way to keep your database clean. It accesses mobile carrier information about any mobile number, in real-time, anywhere in the world.\n* Identify invalid numbers and reduce the number of failed or undeliverable messages  \n* Separate mobiles and landlines, so you don’t pay for messages that will never be delivered \n* Identify carriers to determine which are low cost\n\nTo learn more about the benefits of the Lookups API, [visit our product page](https://www.messagemedia.com/au/feature/lookups/).\n\n![Lookups](https://developers.messagemedia.com/wp-content/uploads/2017/11/lookups-api.png)\n\nRequired Parameters\n\n`{phone_number} `\nThis should be set to the phone number to be looked up. \n\nBy default, a request will only return the country_code and phone_number properties in the response.\n```json\n{\n  \"country_code\": \"AU\",\n  \"phone_number\": \"+61491570156\",\n}\n```\n\nOptions for Parameters\n\nThe options query parameter can also be used to request additional information about the phone number. \n\n* `carrier` Request details about the carrier.\n* `type` Use as a value of the options parameter\n\n_Note: The `carrier` and the `type` values can be used together using a comma separated list, i.e. carrier,type._ \n\n* `hlr` Request details about the location by including as a value of the options parameter.\n\n_NOTE: The `hlr` value CANNOT be used in conjunction with the other values.\n"
    },
    {
      "name": "Number Authorisation",
      "description": "The number authorisation API allows you to manage your blacklists. MessageMedia automatically adds numbers to your blacklist if people send one of the opt out keywords in response to one of your messages.\nThis is a legal requirement. If you decide to handle the legal compliance yourself, calls to this endpoint will not affect your messages."
    },
    {
      "name": "Dedicated Numbers",
      "description": "The Numbers API allows your to purchase, provision and configure the dedicated numbers assigned to your MessageMedia account. \n\nTo learn more about the benefits of dedicated numbers, and their use cases, visit our [feature page](https://messagemedia.com/au/feature/dedicated-virtual-numbers/).\n\nThis is a paid feature and must be enabled on your account. Please contact [support@messagemedia.com](support@messagemedia.com) or your account manager.\n\n## Concepts\n\nThis API allows you to purchase and assign to your account a number from a pool of dedicated numbers. Dedicated numbers are priced differently according to their classification.\n\nThe following is the system by which we classify dedicated numbers. \n\n| Pattern Type | Gold|  Silver |\n|---|---|---|\n| Same Number  |  Six of same (e.g. 999999) | Five of same (e.g. 999991 or 199999)  | \n| Sequence  |  Six in sequence (e.g. 234567, or 765432) | Five in sequence (e.g. 245678, 456782, or 287654)  |\n|  Triplets |  Two identical (e.g. 123123) or two double (e.g. 444666) | Identical pairs within triplets (e.g. 004008, or 400800), one identical and one in sequence (e.g. 444789, or 345777), or mirror image (e.g. 468864)| \n|Pair|Three identical (e.g. 454545)|Three non-identical (e.g. 447700) or three in sequence (e.g. 232425, or 090807)|\n\nAny numbers that do not meet the criteria for Gold or Silver are classified as Bronze.\n\nFor pricing on dedicated numbers please refer to the Numbers page in our Hub web portal, or speak with your MessageMedia Account Manager.   \n"
    },
    {
      "name": "Messaging Reports",
      "description": "The MessageMedia Reports API provides a number of endpoints for running reports of messages sent and received using Messages API.  Reports can be detailed, a list of all messages and details of each message, or summary reports, which can be aggregated on a number of dimensions."
    },
    {
      "name": "Short Trackable Links Reports",
      "description": "Short Trackable Links is a feature available to [Messaging API](https://developers.messagemedia.com/code/messages-api-documentation/) users whereby it automatically and seamlessly shortens any URL to just 22 characters. Every shortened URL is unique to each recipient.\n\nThe reporting API has endpoints specific to \nthis feature, allowing users to obtain details regarding \nthe number of click-throughs on each URL.\n\nTo enable this feature on your account, contact your account manager or contact support on [support@messagemedia.com](support@messagemedia.com).\n\nTo learn more about the benefits of the Short Trackable Links feature, [visit our feature page](https://messagemedia.com/au/feature/short-urls/).\n"
    },
    {
      "name": "Webhooks Management",
      "description": "Webhooks Management API allows you to manage your webhooks configuration. You can subscribe to one or several events, retrieve the webhooks, update them or even delete them if needed."
    },
    {
      "name": "Enterprise Webhooks",
      "description": "This documentation assumes that you have already created a key pair using the [Signature Key Management API](https://developers.messagemedia.com/code/signature-key-managment-api-documentation/).\n\nOnce you have enabled this feature, all webhooks sent will be signed using the private key created via the Signature Key Management API.\n\n## Headers\n\nEvery signed webhook will have the following additional headers:\n  * `X-MESSAGEMEDIA-KEY-ID`: The uuid of the key used eg: `628fdf4e-bddc-4029-ae59-f9a84a22165c`\n  * `X-MESSAGEMEDIA-CIPHER-TYPE`: Encryption algorithm used for digest encryption eg: `RSA`\n  * `X-MESSAGEMEDIA-DIGEST-TYPE`: The algorithm used for digest eg: `SHA256`\n  * `X-MESSAGEMEDIA-SIGNATURE`: The encrypted digest value which is base64 encoded. This is the signature you will verify against eg: `YdhajTA1p68BrxtWq0hvupEQxA4eliL2rA0tyN5YyuCsJwdYc0tZ8439nQ3KrQCmnsDCoB024lKv3FKhWrWAQldl6tEqpiaabXqJMRAHTAtSph+4R1O3C0tT8WNVNP6wEYOKoPyg1tI43uXOQ8iC4Xr4pIeXaYNkEosPG5I8ZyoiNjy/FW7rdO/QuxtfYcpBqLOE+MG0lHwNTiXkc+JlG0VHQbRg8TmjtmsJEsvB4KGPLqpPBij9v/1fzEagkyLECN+tAHgZY/xjQbhm3xL0cEbMNouYKpK7lg8vyechlkPX5j4hEJMo4u/+5iOw3EFYGPjA9RnneINB6DhbzGM99A==`\n  * `DATE`: Date-Time at which the webhook was sent eg: `Tue, 17 Jul 2018 04:52:31 GMT`\n\n\n## Create the comparison string\n\nTo be able to verify the signature, you need to build a comparison string by combining the following:\n* `Request-Line`: The Request-Line begins with a method token, followed by the Request-URI and the protocol version. This can be found in the first line of the request message. eg: `POST /data HTTP/1.1`\n* `Date`: This Date is the one sent in the header eg: `Tue, 17 Jul 2018 04:52:31 GMT`\n* `Body`: This is the the body of the request that is sent back when the webhook is triggered eg: ```{\"vendor_account_id\":{\"vendor_id\":\"MessageMedia\",\"account_id\":\"MessageMediaM123\"},\"callback_url\":\"https://webhook.site/25f79a05-00cf-4997-a127-c55a889eb97a\",\"delivery_report_id\":\"6737fda5-bb86-4fdb-8b62-d7ea49863801\",\"source_number\":\"+61439123036\",\"date_received\":\"2018-07-26T23:39:25.387Z\",\"status\":\"enroute\",\"delay\":0,\"submitted_date\":\"2018-07-26T23:39:25.382Z\",\"original_text\":\"Hey there!\",\"message_id\":\"a0589035-df10-4f3a-92a5-5beac2d100c3\",\"error_code\":\"101\",\"metadata\":{}}```\n\nThe order of concatentation would be `Request-Line` + `Date` + `Body` without any spaces in between. This order must be maintained to build a valid comparison string. \n\n\n## Verifying using public key\n\nOnce you've created the comparison string, you need to use your public key to verify it against the signature (`X-MESSAGEMEDIA-SIGNATURE`) using RSA and the digest type of your key. \nThe way of doing this can vary depending on the language you are coding in. Below are some suggestions on which built-in functions or libraries you can use for each language:\n* PHP - [Openssl_verify](http://php.net/manual/en/function.openssl-verify.php)\n* Python - [Pycrypto](https://gist.github.com/lkdocs/6519372)\n* Node.js - [Crypto](https://nodejs.org/api/crypto.html#crypto_class_verify)\n* C# - [Bouncy castle](http://www.bouncycastle.org/csharp/)\n* Java - [Signature](https://docs.oracle.com/javase/tutorial/security/apisign/vstep4.html)\n* Ruby - [Verify](http://ruby-doc.org/stdlib-2.5.1/libdoc/openssl/rdoc/OpenSSL/PKey/PKey.html#method-i-verify)\n"
    },
    {
      "name": "Signature Key Management",
      "description": "As MessageMedia's customer, you want to be able to ensure that callbacks are coming from MessageMedia and not from a 3rd party. Since \nthese are calls to your own system, you should be provided with an extra level of security \nwhen calling your resources.\n\nThe MessageMedia Signature Key API provides a number of endpoints \nfor managing key used to sign each unique request to ensure security \nand the requests can't (easily) be spoofed. This is similar to using \nHMAC in your outbound messaging (rather than HTTP Basic).\n\nThe Signature Key API provides seven main endpoints:\n- ```Create signature key``` Create a new signature key for signature verification in callbacks.\n- ```Get signature key detail``` Retrieve the current detail of a signature key using the key_id returned in the ```create signature key``` endpoint.\n- ```Delete signature key``` Delete a signature key using the key_id returned in the ```create signature key``` endpoint.\n- ```Get signature key list``` Retrieve the paginated list of signature keys.\n- ```Enable signature key``` Enable a signature key using the key_id returned in the ```create signature key``` endpoint.\n- ```Get enabled signature key``` Retrieve the current enabled signature key.\n- ```Disable an enabled signature key``` Disable the current enabled signature key.\n"
    },
    {
      "name": "Mobile Landing Pages (beta)",
      "description": "The mobile landing pages (MLP) API provides the facilities to create mobile landing pages and sends them to recipients. This API is currently in beta.\n\n## Concepts\n\nThe approach to creating mobile landing pages involves creating a _Campaign_ and sending them to one or more _Recipients_.  A campaign consists of the baseline configuration of a mobile landing page and message that will be generated and sent to each recipient.\n\n## Parameters\n\nCampaign and Recipients can contain parameters.  These parameters are used to customise the generated landing page and the message that is to be sent to each user.  Campaign and Recipient parameters are merged to form a complete set when processing a recipient.\n\nWhen resolving parameters sets, Recipient parameters override Campaign parameters with the same name.\n\nParameter names used within the template have an associated type, which will be validated when creating the Campaign or sending it to Recipients.  You are free to define additional parameters for your own uses, such as when specifying the message.\n\nThe SMS message that is to be sent to each user is defined at the Campaign level. \n\nThe message itself can consist of parameter references surrounded in `${...}`, for example:\n\n```Hello ${firstName} ${lastName}, this is your message.```\n\n## Sending Mobile Landing Pages \n\nFrom end to end, sending a Mobile Landing Pages involves the following steps: \n\n### Step 1: Create a campaign\n\nChoose a template from the template catalogue, and work out what you are going to specify for the required parameters for that template. You will then use the `Create new campaign` endpoint to create the campaign. The following example \nspecifies the desired parameters for the template_id and sets up a message template:\n\n```\n{\n    \"template_id\": \"ac895f01-3149-4bf8-a8fe-01d3b8a9ba97\",\n    \"parameters\": {\n      \"pageTitle\": \"The page title\",\n      \"pageText\": \"The body text\",\n      \"imageUrl\": \"https://example.com/image.jpg\",\n      \"secondaryImageUrl\": \"https://www.example.com/optional_secondary_image.jpg\",\n      \"buttonLink\": \"https://example.com/\",\n      \"buttonText\": \"Call to Action Button Text\",\n      \"secondaryButtonLink\": \"https://example.com/optional_secondary_button\",\n      \"secondaryButtonText\": \"Secondary Call to Action Button\"\n    },\n    \"message\": {\n      \"content\": \"Hello ${firstName} ${lastName}, this is the SMS message body\",\n      \"metadata\": {\n        \"key\": \"value\"\n      }\n    }\n}\n```\n\nInside the message content the `{}` curly braces indicate template placeholders. These are the names of the parameters you will need to specify for the message when you send to your recipients.\n\n### Step 2: Send to recipients\n\nUsing the `Send campaign to recipients` endpoint, you can specify the id of your campaign in the path and a array of recipients as the payload. Each recipient will include an E.164 formatted \n(international) phone number, an optional scheduled time, and values of any recipient scoped template parameters you may have created. In the following example the recipients have been scoped with the template parameters above: \n\n```\n{\n  \"recipients\": [\n    {\n      \"number\": \"+6140000000\",\n      \"parameters\": { \"firstName\":\"Joe\", \"lastName\",\"Bloe\" }\n    },\n    {\n      \"number\": \"+6141111111\",\n      \"parameters\": { \"firstName\":\"Jane\", \"lastName\",\"Doe\" }\n    }\n  ]\n}\n```\n\n## Landing Page Store\n\nThe Landing Page Store is used by the Hub portal to store landing page templates that have been configured using the visual interface. This means that you can \noptionally use this data store to programatically send landing pages that have been designed and configured in the hub.\n\nIf you have made a landing page in the hub, use the `Get landing pages` endpoint to find the landing pages you have made, along with the template and parameters that have been configured. \nYou will then need to copy those template and parameters into a campaign. \n\n## Template Parameters\n\nEach template will have different required parameters, shown in the Templates section. The following is a description of the requirements of each parameter when included in a template.\n\n| Parameter | Required | Tyep|Description |\n|------------------|-------------|-----------|-----------|\n| imageBackgroundUrl | Optional - depends on MLP template. |image| Width: 750 pixels, height: 1624 pixels, size: less than 300 kB, type: png, gif, or jpg|\n| barcodeValue | Optional - depends on MLP template. |text| Alphanumeric string. We will use CODE-128 format 1-D barcode. |\n| barcodeDisplayValue | Optional - defaults to true. Otherwise, use false |text| Indicates whether the barcode value is shown below the barcode image|\n| barcodeHeight| Optional| text||\n| barcodeMargin| Optional| text||\n| barcodeWidth| Optional| text||\n| barcodeLineColor|Optional - each template has it's own default value| text|  Indicate the color of bar code. Use a color name(eg. 'red', 'green'), or a hex value(eg. '#F0F8FF') |\n| pageText | |html| For personalisation, use the following format: “Hi ${firstName}, thanks for visiting…”|\n| pageTextColor|Optional - each template has it's own default value| text|  Indicate the color of page text. Use a color name(eg. 'red', 'green'), or a hex value(eg. '#F0F8FF') |\n| imageHeaderUrl | Optional - depends on MLP template |image| Width: 750 pixels, height: 375 pixels, size: less than 300 kB, type: png, gif, or jpg.|\n| headline | |text| For personalisation, use the following format: “Hi ${firstName}, thanks for visiting…”. Specifications: 60 characters or less recommended|\n| headlineColor|Optional - each template has it's own default value| text|  Indicate the color of headline. Use a color name(eg. 'red', 'green'), or a hex value(eg. '#F0F8FF') |\n| pageTitle | |text| HTML page title shown on browser tab. Specifications: 60 characters or less recommended.|\n| imageLogoUrl |Optional |image| Specifications: width: 300 pixels, height: 120 pixels, size: less than 300 kB, type: png, gif, or jpg|\n| logoLink | Optional|url| For personalisation, use the following format: “https://example.com/?cid=${customerId}”|\n| primaryButtonLink | |url| For personalisation, use the following format: “https://example.com/?cid=${customerId}”|\n| primaryButtonText | |text| For personalisation, use the following format: “${firstName}, shop now”. Specifications: 36 characters or less recommended |\n| primaryButtonTextColor|Optional - each template has it's own default value| text|  Indicate the color of primary button text. Use a color name(eg. 'red', 'green'), or a hex value(eg. '#F0F8FF') |\n| primaryButtonBackgroundColor|Optional - each template has it's own default value| text|  Indicate the background color of primary button. Use a color name(eg. 'red', 'green'), or a hex value(eg. '#F0F8FF') |\n| secondaryButtonLink | Optional - depends on MLP template |url| For personalisation, use the following format: “https://example.com/?cid=${customerId}”|\n| secondaryButtonText | Optional - depends on MLP template |text| For personalisation, use the following format: “Hi ${firstName}, thanks for visiting…”. Specifications: 36 characters or less recommended |\n| secondaryButtonTextColor|Optional - each template has it's own default value| text|  Indicate the color of the secondary button text. Use a color name(eg. 'red', 'green'), or a hex value(eg. '#F0F8FF') |\n| secondaryButtonBackgroundColor|Optional - each template has it's own default value| text|  Indicate the background color of secondary button. Use a color name(eg. 'red', 'green'), or a hex value(eg. '#F0F8FF') |\n| fontFamilyURL1 | Optional - each template has it's own default value|url| Indicate the url of font family, those font family can be used in other property(eg. `headlineFontFamily`)|\n| fontFamilyURL2 | Optional - each template has it's own default value|url| Indicate the url of font family, those font family can be used in other property(eg. `headlineFontFamily`)|\n| fontFamilyURL3 | Optional - each template has it's own default value|url| Indicate the url of font family, those font family can be used in other property(eg. `headlineFontFamily`)|\n| pageTextFontFamily | |text| Specify the font family of page text |\n| headlineFontFamily | |text| Specify the font family of headline text |\n| buttonFontFamily | |text| Specify the font family of button text |\n\n## Template Catalogue\n\n| Name and preview | Template ID |\n|-------------------|-------------|\n| ![](Https://developers.messagemedia.com/wp-content/templates/Template1.png) | 7614456e-844f-4d83-bdfe-20c17ce0f97c |\n| ![](Https://developers.messagemedia.com/wp-content/templates/Template2.png) | f56b5806-f732-4693-b87a-90b66a7d7bfc |\n|![](Https://developers.messagemedia.com/wp-content/templates/template3.png) | c9d7ce1d-20c4-4228-9ba1-6da2a3b4e5e0 |\n"
    }
  ],
  "servers": [
    {
      "url": "https://api.messagemedia.com/"
    }
  ],
  "paths": {
    "/v1/messages/{messageId}": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Get message status",
        "description": "Retrieve the current status of a message using the message ID returned\nin the send messages end point.\n\nA successful request to the get message status endpoint will return a\nresponse body as follows:\n\n```json\n\n{\n    \"format\": \"SMS\",\n    \"content\": \"My first message!\",\n    \"metadata\": {\n        \"key1\": \"value1\",\n        \"key2\": \"value2\"\n    },\n    \"message_id\": \"877c19ef-fa2e-4cec-827a-e1df9b5509f7\",\n    \"callback_url\": \"https://my.callback.url.com\",\n    \"delivery_report\": true,\n    \"destination_number\": \"+61401760575\",\n    \"scheduled\": \"2016-11-03T11:49:02.807Z\",\n    \"source_number\": \"+61491570157\",\n    \"source_number_type\": \"INTERNATIONAL\",\n    \"message_expiry_timestamp\": \"2016-11-03T11:49:02.807Z\",\n    \"status\": \"enroute\"\n}\n\n```\n\nThe status property of the response indicates the current status of the\nmessage. See the Delivery Reports section of this documentation for more information on message\nstatues.\n\n*Note: If an invalid or non existent message ID parameter is specified\nin the request, then a HTTP 404 Not Found response will be returned*\n",
        "operationId": "GetMessageStatus",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "36 character UUID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The submitted message including the status of the message",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getmessagestatusresponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "string messageId = \"messageId2\";\n\ntry \n{\n    GetMessageStatusResponse result = messages.GetMessageStatusAsync(messageId).Result;\n}\ncatch (APIException e){};"
          },
          {
            "lang": "Java",
            "source": "String messageId = \"messageId2\";\n\nmessagesController.getMessageStatusAsync(messageId, new APICallBack<GetMessageStatusResponse>() {\n    public void onSuccess(HttpContext context, GetMessageStatusResponse response) {\n        // TODO success callback handler\n    }\n    public void onFailure(HttpContext context, Throwable error) {\n        // TODO failure callback handler\n    }\n});"
          },
          {
            "lang": "JavaScript",
            "source": "let messageId = 'messageId2';\n\nconst promise = controller.getMessageStatus(messageId);\npromise.then((response) => {\n    // this block will be executed on successful endpoint call\n    // `response` will be of type 'GetMessageStatusResponse'\n}, (err) => {\n    // this block will be executed on endpoint call failure\n    // `err` is an 'object' containing more information about the error\n});"
          },
          {
            "lang": "PHP",
            "source": "$messageId = 'messageId2';\n\n$result = $messagesController->getMessageStatus($messageId);"
          },
          {
            "lang": "Python",
            "source": "message_id = 'messageId2'\n\nresult = messages_controller.get_message_status(message_id)"
          },
          {
            "lang": "Ruby",
            "source": "string messageId = \"messageId2\";\n\ntry \n{\n    GetMessageStatusResponse result = messages.GetMessageStatusAsync(messageId).Result;\n}\ncatch (APIException e){};"
          }
        ]
      },
      "put": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Cancel scheduled message",
        "description": "Cancel a scheduled message that has not yet been delivered.\n\nA scheduled message can be cancelled by updating the status of a message\nfrom ```scheduled``` to ```cancelled```. This is done by submitting a PUT request to the\nmessages endpoint using the message ID as a parameter (the same endpoint used above to retrieve\nthe status of a message).\n\nThe body of the request simply needs to contain a ```status``` property with the value set to ```cancelled```.\n\n```json\n\n{\n    \"status\": \"cancelled\"\n}\n\n```\n\n*Note: Only messages with a status of scheduled can be cancelled. If an invalid or non existent message ID parameter is specified in the request, then a HTTP 404 Not Found response will be returned*\n",
        "operationId": "CancelScheduledMessage",
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "36 character UUID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parameters of a message to change.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cancelscheduledmessagerequest"
              },
              "example": {
                "status": "cancelled"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Message status updated successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400response"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "string messageId = \"messageId2\";\nCancelScheduledMessageRequest body = new CancelScheduledMessageRequest();\nbody.Status = \"cancelled\";\n\ntry \n{\n    dynamic result = messages.CancelScheduledMessageAsync(messageId, body).Result;\n}\ncatch (APIException e){};"
          },
          {
            "lang": "Java",
            "source": "String messageId = \"messageId2\";\nCancelScheduledMessageRequest body = new CancelScheduledMessageRequest();\nbody.setStatus(\"cancelled\");\n\nmessagesController.cancelScheduledMessageAsync(messageId, body, new APICallBack<DynamicResponse>() {\n    public void onSuccess(HttpContext context, DynamicResponse response) {\n        // TODO success callback handler\n    }\n    public void onFailure(HttpContext context, Throwable error) {\n        // TODO failure callback handler\n    }\n});"
          },
          {
            "lang": "JavaScript",
            "source": "let messageId = 'messageId2';\nlet body = new lib.CancelScheduledMessageRequest();\nbody.status = 'cancelled';\n\nconst promise = controller.cancelScheduledMessage(messageId, body);\npromise.then((response) => {\n    // this block will be executed on successful endpoint call\n    // `response` will be of type 'mixed'\n}, (err) => {\n    // this block will be executed on endpoint call failure\n    // `err` is an 'object' containing more information about the error\n});"
          },
          {
            "lang": "PHP",
            "source": "$messageId = 'messageId2';\n$body = new Models\\CancelScheduledMessageRequest;\n$body->status = 'cancelled';\n\n$result = $messagesController->cancelScheduledMessage($messageId, $body);"
          },
          {
            "lang": "Python",
            "source": "message_id = 'messageId2'\nbody = CancelScheduledMessageRequest()\nbody.status = 'cancelled'\n\nresult = messages_controller.cancel_scheduled_message(message_id, body)"
          },
          {
            "lang": "Ruby",
            "source": "string messageId = \"messageId2\";\nCancelScheduledMessageRequest body = new CancelScheduledMessageRequest();\nbody.Status = \"cancelled\";\n\ntry \n{\n    dynamic result = messages.CancelScheduledMessageAsync(messageId, body).Result;\n}\ncatch (APIException e){};"
          }
        ]
      }
    },
    "/v1/messages": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Send messages",
        "description": "Submit one or more (up to 100 per request) SMS, MMS or text to voice\nmessages for delivery.\n\nThe most basic message has the following structure:\n\n```json\n\n{\n    \"messages\": [\n        {\n            \"content\": \"My first message!\",\n            \"destination_number\": \"+61491570156\"\n        }\n    ]\n}\n\n```\n\nMore advanced delivery features can be specified by setting the\nfollowing properties in a message:\n\n- ```callback_url``` A URL can be included with each message to which\nWebhooks will be pushed to via a HTTP POST request. Webhooks will be sent if and when the status of the message changes as it is processed (if the delivery report property of the request is set to ```true```) and when replies are received. Specifying a callback URL is optional.\n\n- ```content``` The content of the message. This can be a Unicode string, up to 5,000 characters long.\n  Message content is required.\n\n- ```delivery_report``` Delivery reports can be requested with each\nmessage. If delivery reports are requested, a webhook will be submitted to the ```callback_url``` property specified for the message (or to the webhooks)\n  specified for the account every time the status of the message changes as it is processed. The\n  current status of the message can also be retrieved via the Delivery Reports endpoint of the\n  Messages API. Delivery reports are optional and by default will not be requested.\n\n- ```destination_number``` The destination number the message should be\ndelivered to. This should be specified in E.164\n  international format. For information on E.164, please refer to http://en.wikipedia.org/wiki/E.164.\n  A destination number is required.\n\n- ```format``` The format specifies which format the message will be\nsent as, ```SMS``` (text message), ```MMS``` (multimedia message)\n  or ```TTS``` (text to speech). With ```TTS``` format, we will call the destination number and read out the\n  message using a computer generated voice. Specifying a format is optional, by default ```SMS``` will be used.\n\n- ```source_number``` A source number may be specified for the message,\nthis will be the number that\n  the message appears from on the handset. By default this feature is _not_ available and will be ignored\n  in the request. Please contact <support@messagemedia.com> for more information. Specifying a source\n  number is optional and a by default a source number will be assigned to the message.\n\n- ```media``` The media is used to specify a list of URLs of the media file(s) that you are trying to send. \nSupported file formats include png, jpeg and gif. ```format``` parameter must be set to ```MMS``` for this to\nwork.\n\n- ```subject``` The subject field is used to denote subject of the MMS\nmessage and has a maximum size of 64 characters long. Specifying a\nsubject is optional.\n\n- ```source_number_type``` If a source number is specified, the type of\nsource number may also be\n  specified. This is recommended when using a source address type that is not an internationally\n  formatted number, available options are ```INTERNATIONAL```, ```ALPHANUMERIC``` or ```SHORTCODE```. Specifying a\n  source number type is only valid when the ```source_number``` parameter is specified and is optional.\n  If a source number is specified and no source number type is specified, the source number type will be\n  inferred from the source number, however this may be inaccurate.\n\n- ```scheduled``` A message can be scheduled for delivery in the future\nby setting the scheduled property.\n  The scheduled property expects a date time specified in ISO 8601 format. The scheduled time must be\n  provided in UTC and is optional. If no scheduled property is set, the message will be delivered immediately.\n\n- ```message_expiry_timestamp``` A message expiry timestamp can be\nprovided to specify the latest time\n  at which the message should be delivered. If the message cannot be delivered before the specified\n  message expiry timestamp elapses, the message will be discarded. Specifying a message expiry \n  timestamp is optional.\n\n- ```metadata``` Metadata can be included with the message which will\nthen be included with any delivery\n  reports or replies matched to the message. This can be used to create powerful two-way messaging\n  applications without having to store persistent data in the application. Up to 10 key / value metadata data\n  pairs can be specified in a message. Each key can be up to 100 characters long, and each value up to \n  256 characters long. Specifying metadata for a message is optional.\n\nThe response body of a successful POST request to the messages endpoint\nwill include a ```messages``` property which contains a list of all messages submitted. The list of\nmessages submitted will reflect the list of messages included in the request, but each message\nwill also contain two new properties, ```message_id``` and ```status```. The returned message ID\nwill be a 36 character UUID which can be used to check the status of the message via the Get Message\nStatus endpoint. The status of the message which reflect the status of the message at submission\ntime which will always be ```queued```. See the Delivery Reports section of this documentation for\nmore information on message statues.\n\n*Note: when sending multiple messages in a request, all messages must be valid for the request \nto be successful. If any messages in the request are invalid, no messages will be sent.*\n",
        "operationId": "SendMessages",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sendmessagesrequest"
              },
              "example": {
                "messages": [
                  {
                    "callback_url": "https://my.callback.url.com",
                    "content": "My first message",
                    "destination_number": "+61491570156",
                    "delivery_report": true,
                    "format": "SMS",
                    "message_expiry_timestamp": "2016-11-03T11:49:02.807Z",
                    "metadata": {
                      "key1": "value1",
                      "key2": "value2"
                    },
                    "scheduled": "2016-11-03T11:49:02.807Z",
                    "source_number": "+61491570157",
                    "source_number_type": "INTERNATIONAL"
                  },
                  {
                    "callback_url": "https://my.callback.url.com",
                    "content": "My second message",
                    "destination_number": "+61491570158",
                    "delivery_report": true,
                    "format": "MMS",
                    "subject": "This is an MMS message",
                    "media": [
                      "https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg"
                    ],
                    "message_expiry_timestamp": "2016-11-03T11:49:02.807Z",
                    "metadata": {
                      "key1": "value1",
                      "key2": "value2"
                    },
                    "scheduled": "2016-11-03T11:49:02.807Z",
                    "source_number": "+61491570159",
                    "source_number_type": "INTERNATIONAL"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Messages were accepted for processing",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sendmessagesresponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400response"
                },
                "example": {
                  "message": "Something went wrong. Please try again later."
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "SendMessagesRequest body = new SendMessagesRequest();\nbody.Messages = new List<Message>();\n\nMessage body_messages_0 = new Message();\nbody_messages_0.CallbackUrl = \"https://my.callback.url.com\";\nbody_messages_0.Content = \"My first message\";\nbody_messages_0.DestinationNumber = \"+61491570156\";\nbody_messages_0.DeliveryReport = true;\nbody_messages_0.Format = Format.SMS;\nbody_messages_0.MessageExpiryTimestamp = DateTime.Parse(\"2016-11-03T11:49:02.807Z\");\nbody_messages_0.Metadata = APIHelper.JsonDeserialize<Object>(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\");\nbody_messages_0.Scheduled = DateTime.Parse(\"2016-11-03T11:49:02.807Z\");\nbody_messages_0.SourceNumber = \"+61491570157\";\nbody_messages_0.SourceNumberType = SourceNumberType.INTERNATIONAL;\nbody.Messages.Add(body_messages_0);\n\nMessage body_messages_1 = new Message();\nbody_messages_1.CallbackUrl = \"https://my.callback.url.com\";\nbody_messages_1.Content = \"My second message\";\nbody_messages_1.DestinationNumber = \"+61491570158\";\nbody_messages_1.DeliveryReport = true;\nbody_messages_1.Format = Format.MMS;\nbody_messages_1.MessageExpiryTimestamp = DateTime.Parse(\"2016-11-03T11:49:02.807Z\");\nbody_messages_1.Metadata = APIHelper.JsonDeserialize<Object>(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\");\nbody_messages_1.Scheduled = DateTime.Parse(\"2016-11-03T11:49:02.807Z\");\nbody_messages_1.SourceNumber = \"+61491570159\";\nbody_messages_1.SourceNumberType = SourceNumberType.INTERNATIONAL;\nbody_messages_1.Media = new List<string>();\nbody_messages_1.Media.Add(\"https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg\");\nbody_messages_1.Subject = \"This is an MMS message\";\nbody.Messages.Add(body_messages_1);\n\n\ntry \n{\n    SendMessagesResponse result = messages.SendMessagesAsync(body).Result;\n}\ncatch (APIException e){};"
          },
          {
            "lang": "Java",
            "source": "SendMessagesRequest body = new SendMessagesRequest();\nbody.setMessages(new LinkedList<Message>());\n\nMessage body_messages_0 = new Message();\nbody_messages_0.setCallbackUrl(\"https://my.callback.url.com\");\nbody_messages_0.setContent(\"My first message\");\nbody_messages_0.setDestinationNumber(\"+61491570156\");\nbody_messages_0.setDeliveryReport(true);\nbody_messages_0.setFormat(FormatEnum.SMS);\nbody_messages_0.setMessageExpiryTimestamp(new DateTime(\"2016-11-03T11:49:02.807Z\", DateTimeZone.UTC));\nbody_messages_0.setMetadata(com.messagemedia.messages.APIHelper.deserialize(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\"));\nbody_messages_0.setScheduled(new DateTime(\"2016-11-03T11:49:02.807Z\", DateTimeZone.UTC));\nbody_messages_0.setSourceNumber(\"+61491570157\");\nbody_messages_0.setSourceNumberType(SourceNumberTypeEnum.INTERNATIONAL);\nbody.getMessages().add(body_messages_0);\n\nMessage body_messages_1 = new Message();\nbody_messages_1.setCallbackUrl(\"https://my.callback.url.com\");\nbody_messages_1.setContent(\"My second message\");\nbody_messages_1.setDestinationNumber(\"+61491570158\");\nbody_messages_1.setDeliveryReport(true);\nbody_messages_1.setFormat(FormatEnum.MMS);\nbody_messages_1.setMessageExpiryTimestamp(new DateTime(\"2016-11-03T11:49:02.807Z\", DateTimeZone.UTC));\nbody_messages_1.setMetadata(com.messagemedia.messages.APIHelper.deserialize(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\"));\nbody_messages_1.setScheduled(new DateTime(\"2016-11-03T11:49:02.807Z\", DateTimeZone.UTC));\nbody_messages_1.setSourceNumber(\"+61491570159\");\nbody_messages_1.setSourceNumberType(SourceNumberTypeEnum.INTERNATIONAL);\nbody_messages_1.setMedia(new LinkedList<String>());\nbody_messages_1.getMedia().add(\"https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg\");\nbody_messages_1.setSubject(\"This is an MMS message\");\nbody.getMessages().add(body_messages_1);\n\n\nmessagesController.sendMessagesAsync(body, new APICallBack<SendMessagesResponse>() {\n    public void onSuccess(HttpContext context, SendMessagesResponse response) {\n        // TODO success callback handler\n    }\n    public void onFailure(HttpContext context, Throwable error) {\n        // TODO failure callback handler\n    }\n});\n"
          },
          {
            "lang": "JavaScript",
            "source": "let body = new lib.SendMessagesRequest();\nbody.messages = [];\n\nbody.messages[0] = new lib.Message();\nbody.messages[0].callbackUrl = 'https://my.callback.url.com';\nbody.messages[0].content = 'My first message';\nbody.messages[0].destinationNumber = '+61491570156';\nbody.messages[0].deliveryReport = true;\nbody.messages[0].format = lib.FormatEnum.SMS;\nbody.messages[0].messageExpiryTimestamp = moment('2016-11-03T11:49:02.807Z').parseZone('2016-11-03T11:49:02.807Z');\nbody.messages[0].metadata = JSON.parse('{\"key1\":\"value1\",\"key2\":\"value2\"}');\nbody.messages[0].scheduled = moment('2016-11-03T11:49:02.807Z').parseZone('2016-11-03T11:49:02.807Z');\nbody.messages[0].sourceNumber = '+61491570157';\nbody.messages[0].sourceNumberType = lib.SourceNumberTypeEnum.INTERNATIONAL;\n\nbody.messages[1] = new lib.Message();\nbody.messages[1].callbackUrl = 'https://my.callback.url.com';\nbody.messages[1].content = 'My second message';\nbody.messages[1].destinationNumber = '+61491570158';\nbody.messages[1].deliveryReport = true;\nbody.messages[1].format = lib.FormatEnum.MMS;\nbody.messages[1].messageExpiryTimestamp = moment('2016-11-03T11:49:02.807Z').parseZone('2016-11-03T11:49:02.807Z');\nbody.messages[1].metadata = JSON.parse('{\"key1\":\"value1\",\"key2\":\"value2\"}');\nbody.messages[1].scheduled = moment('2016-11-03T11:49:02.807Z').parseZone('2016-11-03T11:49:02.807Z');\nbody.messages[1].sourceNumber = '+61491570159';\nbody.messages[1].sourceNumberType = lib.SourceNumberTypeEnum.INTERNATIONAL;\nbody.messages[1].media = ['https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg'];\nbody.messages[1].subject = 'This is an MMS message';\n\n\nconst promise = controller.sendMessages(body);\npromise.then((response) => {\n    // this block will be executed on successful endpoint call\n    // `response` will be of type 'SendMessagesResponse'\n}, (err) => {\n    // this block will be executed on endpoint call failure\n    // `err` is an 'object' containing more information about the error\n});"
          },
          {
            "lang": "PHP",
            "source": "$body = new Models\\SendMessagesRequest;\n$body->messages = array();\n\n$body->messages[0] = new Models\\Message;\n$body->messages[0]->callbackUrl = 'https://my.callback.url.com';\n$body->messages[0]->content = 'My first message';\n$body->messages[0]->destinationNumber = '+61491570156';\n$body->messages[0]->deliveryReport = true;\n$body->messages[0]->format = Models\\FormatEnum::SMS;\n$body->messages[0]->messageExpiryTimestamp = DateTimeHelper::fromRfc3339DateTime('2016-11-03T11:49:02.807Z');\n$body->messages[0]->metadata = MessageMediaMessagesLib\\APIHelper::deserialize('{\"key1\":\"value1\",\"key2\":\"value2\"}');\n$body->messages[0]->scheduled = DateTimeHelper::fromRfc3339DateTime('2016-11-03T11:49:02.807Z');\n$body->messages[0]->sourceNumber = '+61491570157';\n$body->messages[0]->sourceNumberType = Models\\SourceNumberTypeEnum::INTERNATIONAL;\n\n$body->messages[1] = new Models\\Message;\n$body->messages[1]->callbackUrl = 'https://my.callback.url.com';\n$body->messages[1]->content = 'My second message';\n$body->messages[1]->destinationNumber = '+61491570158';\n$body->messages[1]->deliveryReport = true;\n$body->messages[1]->format = Models\\FormatEnum::MMS;\n$body->messages[1]->messageExpiryTimestamp = DateTimeHelper::fromRfc3339DateTime('2016-11-03T11:49:02.807Z');\n$body->messages[1]->metadata = MessageMediaMessagesLib\\APIHelper::deserialize('{\"key1\":\"value1\",\"key2\":\"value2\"}');\n$body->messages[1]->scheduled = DateTimeHelper::fromRfc3339DateTime('2016-11-03T11:49:02.807Z');\n$body->messages[1]->sourceNumber = '+61491570159';\n$body->messages[1]->sourceNumberType = Models\\SourceNumberTypeEnum::INTERNATIONAL;\n$body->messages[1]->media = array('https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg');\n$body->messages[1]->subject = 'This is an MMS message';\n\n\n$result = $messagesController->sendMessages($body);"
          },
          {
            "lang": "Python",
            "source": "body = SendMessagesRequest()\nbody.messages = []\n\nbody.messages.append(Message())\nbody.messages[0].callback_url = 'https://my.callback.url.com'\nbody.messages[0].content = 'My first message'\nbody.messages[0].destination_number = '+61491570156'\nbody.messages[0].delivery_report = True\nbody.messages[0].format = FormatEnum.SMS\nbody.messages[0].message_expiry_timestamp = dateutil.parser.parse('2016-11-03T11:49:02.807Z')\nbody.messages[0].metadata = jsonpickle.decode('{\"key1\":\"value1\",\"key2\":\"value2\"}')\nbody.messages[0].scheduled = dateutil.parser.parse('2016-11-03T11:49:02.807Z')\nbody.messages[0].source_number = '+61491570157'\nbody.messages[0].source_number_type = SourceNumberTypeEnum.INTERNATIONAL\n\nbody.messages.append(Message())\nbody.messages[1].callback_url = 'https://my.callback.url.com'\nbody.messages[1].content = 'My second message'\nbody.messages[1].destination_number = '+61491570158'\nbody.messages[1].delivery_report = True\nbody.messages[1].format = FormatEnum.MMS\nbody.messages[1].message_expiry_timestamp = dateutil.parser.parse('2016-11-03T11:49:02.807Z')\nbody.messages[1].metadata = jsonpickle.decode('{\"key1\":\"value1\",\"key2\":\"value2\"}')\nbody.messages[1].scheduled = dateutil.parser.parse('2016-11-03T11:49:02.807Z')\nbody.messages[1].source_number = '+61491570159'\nbody.messages[1].source_number_type = SourceNumberTypeEnum.INTERNATIONAL\nbody.messages[1].media = ['https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg']\nbody.messages[1].subject = 'This is an MMS message'\n\n\nresult = messages_controller.send_messages(body)"
          },
          {
            "lang": "Ruby",
            "source": "SendMessagesRequest body = new SendMessagesRequest();\nbody.Messages = new List<Message>();\n\nMessage body_messages_0 = new Message();\nbody_messages_0.CallbackUrl = \"https://my.callback.url.com\";\nbody_messages_0.Content = \"My first message\";\nbody_messages_0.DestinationNumber = \"+61491570156\";\nbody_messages_0.DeliveryReport = true;\nbody_messages_0.Format = Format.SMS;\nbody_messages_0.MessageExpiryTimestamp = DateTime.Parse(\"2016-11-03T11:49:02.807Z\");\nbody_messages_0.Metadata = APIHelper.JsonDeserialize<Object>(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\");\nbody_messages_0.Scheduled = DateTime.Parse(\"2016-11-03T11:49:02.807Z\");\nbody_messages_0.SourceNumber = \"+61491570157\";\nbody_messages_0.SourceNumberType = SourceNumberType.INTERNATIONAL;\nbody.Messages.Add(body_messages_0);\n\nMessage body_messages_1 = new Message();\nbody_messages_1.CallbackUrl = \"https://my.callback.url.com\";\nbody_messages_1.Content = \"My second message\";\nbody_messages_1.DestinationNumber = \"+61491570158\";\nbody_messages_1.DeliveryReport = true;\nbody_messages_1.Format = Format.MMS;\nbody_messages_1.MessageExpiryTimestamp = DateTime.Parse(\"2016-11-03T11:49:02.807Z\");\nbody_messages_1.Metadata = APIHelper.JsonDeserialize<Object>(\"{\\\"key1\\\":\\\"value1\\\",\\\"key2\\\":\\\"value2\\\"}\");\nbody_messages_1.Scheduled = DateTime.Parse(\"2016-11-03T11:49:02.807Z\");\nbody_messages_1.SourceNumber = \"+61491570159\";\nbody_messages_1.SourceNumberType = SourceNumberType.INTERNATIONAL;\nbody_messages_1.Media = new List<string>();\nbody_messages_1.Media.Add(\"https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg\");\nbody_messages_1.Subject = \"This is an MMS message\";\nbody.Messages.Add(body_messages_1);\n\n\ntry \n{\n    SendMessagesResponse result = messages.SendMessagesAsync(body).Result;\n}\ncatch (APIException e){};"
          }
        ]
      }
    },
    "/v1/delivery_reports": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Delivery Reports"
        ],
        "summary": "Check delivery reports",
        "description": "Check for any delivery reports that have been received.\nDelivery reports are a notification of the change in status of a message as it is being processed.\nEach request to the check delivery reports endpoint will return any delivery reports received that\nhave not yet been confirmed using the confirm delivery reports endpoint. A response from the check\ndelivery reports endpoint will have the following structure:\n```json\n{\n    \"delivery_reports\": [\n        {\n            \"callback_url\": \"https://my.callback.url.com\",\n            \"delivery_report_id\": \"01e1fa0a-6e27-4945-9cdb-18644b4de043\",\n            \"source_number\": \"+61491570157\",\n            \"date_received\": \"2017-05-20T06:30:37.642Z\",\n            \"status\": \"enroute\",\n            \"delay\": 0,\n            \"submitted_date\": \"2017-05-20T06:30:37.639Z\",\n            \"original_text\": \"My first message!\",\n            \"message_id\": \"d781dcab-d9d8-4fb2-9e03-872f07ae94ba\",\n            \"vendor_account_id\": {\n                \"vendor_id\": \"MessageMedia\",\n                \"account_id\": \"MyAccount\"\n            },\n            \"metadata\": {\n                \"key1\": \"value1\",\n                \"key2\": \"value2\"\n            }\n        },\n        {\n            \"callback_url\": \"https://my.callback.url.com\",\n            \"delivery_report_id\": \"0edf9022-7ccc-43e6-acab-480e93e98c1b\",\n            \"source_number\": \"+61491570158\",\n            \"date_received\": \"2017-05-21T01:46:42.579Z\",\n            \"status\": \"enroute\",\n            \"delay\": 0,\n            \"submitted_date\": \"2017-05-21T01:46:42.574Z\",\n            \"original_text\": \"My second message!\",\n            \"message_id\": \"fbb3b3f5-b702-4d8b-ab44-65b2ee39a281\",\n            \"vendor_account_id\": {\n                \"vendor_id\": \"MessageMedia\",\n                \"account_id\": \"MyAccount\"\n            },\n            \"metadata\": {\n                \"key1\": \"value1\",\n                \"key2\": \"value2\"\n            }\n        }\n    ]\n}\n```\nEach delivery report will contain details about the message, including any metadata specified\nand the new status of the message (as each delivery report indicates a change in status of a\nmessage) and the timestamp at which the status changed. Every delivery report will have a \nunique delivery report ID for use with the confirm delivery reports endpoint.\n*Note: The source number and destination number properties in a delivery report are the inverse of\nthose specified in the message that the delivery report relates to. The source number of the\ndelivery report is the destination number of the original message.*\nSubsequent requests to the check delivery reports endpoint will return the same delivery reports\nand a maximum of 100 delivery reports will be returned in each request. Applications should use the\nconfirm delivery reports endpoint in the following pattern so that delivery reports that have been\nprocessed are no longer returned in subsequent check delivery reports requests.\n1. Call check delivery reports endpoint\n2. Process each delivery report\n3. Confirm all processed delivery reports using the confirm delivery reports endpoint\n*Note: It is recommended to use the Webhooks feature to receive reply messages rather than\npolling the check delivery reports endpoint.*",
        "operationId": "CheckDeliveryReports",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Unconfirmed reports",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checkdeliveryreportsresponse"
                },
                "example": {
                  "delivery_reports": [
                    {
                      "callback_url": "https://my.callback.url.com",
                      "delivery_report_id": "01e1fa0a-6e27-4945-9cdb-18644b4de043",
                      "source_number": "+61491570157",
                      "date_received": "2017-05-20T06:30:37.642Z",
                      "status": "enroute",
                      "delay": 0,
                      "submitted_date": "2017-05-20T06:30:37.639Z",
                      "original_text": "My first message!",
                      "message_id": "d781dcab-d9d8-4fb2-9e03-872f07ae94ba",
                      "vendor_account_id": {
                        "vendor_id": "MessageMedia",
                        "account_id": "MyAccount"
                      },
                      "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                      }
                    },
                    {
                      "callback_url": "https://my.callback.url.com",
                      "delivery_report_id": "0edf9022-7ccc-43e6-acab-480e93e98c1b",
                      "source_number": "+61491570158",
                      "date_received": "2017-05-21T01:46:42.579Z",
                      "status": "submitted",
                      "delay": 0,
                      "submitted_date": "2017-05-21T01:46:42.574Z",
                      "original_text": "My second message!",
                      "message_id": "fbb3b3f5-b702-4d8b-ab44-65b2ee39a281",
                      "vendor_account_id": {
                        "vendor_id": "MessageMedia",
                        "account_id": "MyAccount"
                      },
                      "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": "deliveryReportsController.checkDeliveryReportsAsync(new APICallBack<CheckDeliveryReportsResponse>() {\n    public void onSuccess(HttpContext context, CheckDeliveryReportsResponse response) {\n        // TODO success callback handler\n    }\n    public void onFailure(HttpContext context, Throwable error) {\n        // TODO failure callback handler\n    }\n});"
          },
          {
            "lang": "JavaScript",
            "source": "const promise = controller.checkDeliveryReports();\npromise.then((response) => {\n    // this block will be executed on successful endpoint call\n    // `response` will be of type 'CheckDeliveryReportsResponse'\n}, (err) => {\n    // this block will be executed on endpoint call failure\n    // `err` is an 'object' containing more information about the error\n});"
          },
          {
            "lang": "PHP",
            "source": "$result = $deliveryReportsController->checkDeliveryReports();"
          },
          {
            "lang": "Python",
            "source": "result = delivery_reports_controller.check_delivery_reports()\n"
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/delivery_reports/confirmed": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Delivery Reports"
        ],
        "summary": "Confirm delivery reports as received",
        "description": "Mark a delivery report as confirmed so it is no longer return in check delivery reports requests.\nThe confirm delivery reports endpoint is intended to be used in conjunction with the check delivery\nreports endpoint to allow for robust processing of delivery reports. Once one or more delivery\nreports have been processed, they can then be confirmed using the confirm delivery reports endpoint so they\nare no longer returned in subsequent check delivery reports requests.\nThe confirm delivery reports endpoint takes a list of delivery report IDs as follows:\n```json\n{\n    \"delivery_report_ids\": [\n        \"011dcead-6988-4ad6-a1c7-6b6c68ea628d\",\n        \"3487b3fa-6586-4979-a233-2d1b095c7718\",\n        \"ba28e94b-c83d-4759-98e7-ff9c7edb87a1\"\n    ]\n}\n```\nUp to 100 delivery reports can be confirmed in a single confirm delivery reports request.",
        "operationId": "ConfirmDeliveryReportsAsReceived",
        "parameters": [],
        "requestBody": {
          "description": "Delivery reports to confirm as received.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Confirmdeliveryreportsasreceivedrequest"
              },
              "example": {
                "delivery_report_ids": [
                  "011dcead-6988-4ad6-a1c7-6b6c68ea628d",
                  "3487b3fa-6586-4979-a233-2d1b095c7718",
                  "ba28e94b-c83d-4759-98e7-ff9c7edb87a1"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Requested delivery reports will be marked as confirmed",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "description": "Requested delivery reports will be marked as confirmed"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400response"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": "ConfirmDeliveryReportsAsReceivedRequest body = new ConfirmDeliveryReportsAsReceivedRequest();\nbody.setDeliveryReportIds(new LinkedList<String>());\nbody.getDeliveryReportIds().add(\"011dcead-6988-4ad6-a1c7-6b6c68ea628d\");\nbody.getDeliveryReportIds().add(\"3487b3fa-6586-4979-a233-2d1b095c7718\");\nbody.getDeliveryReportIds().add(\"ba28e94b-c83d-4759-98e7-ff9c7edb87a1\");\n\ndeliveryReportsController.confirmDeliveryReportsAsReceivedAsync(body, new APICallBack<DynamicResponse>() {\n    public void onSuccess(HttpContext context, DynamicResponse response) {\n        // TODO success callback handler\n    }\n    public void onFailure(HttpContext context, Throwable error) {\n        // TODO failure callback handler\n    }\n});"
          },
          {
            "lang": "JavaScript",
            "source": "let body = new lib.ConfirmDeliveryReportsAsReceivedRequest();\nbody.deliveryReportIds = ['011dcead-6988-4ad6-a1c7-6b6c68ea628d', '3487b3fa-6586-4979-a233-2d1b095c7718', 'ba28e94b-c83d-4759-98e7-ff9c7edb87a1'];\n\nconst promise = controller.confirmDeliveryReportsAsReceived(body);\npromise.then((response) => {\n    // this block will be executed on successful endpoint call\n    // `response` will be of type 'mixed'\n}, (err) => {\n    // this block will be executed on endpoint call failure\n    // `err` is an 'object' containing more information about the error\n});"
          },
          {
            "lang": "PHP",
            "source": "$body = new Models\\ConfirmDeliveryReportsAsReceivedRequest;\n$body->deliveryReportIds = array('011dcead-6988-4ad6-a1c7-6b6c68ea628d', '3487b3fa-6586-4979-a233-2d1b095c7718', 'ba28e94b-c83d-4759-98e7-ff9c7edb87a1');\n\n$result = $deliveryReportsController->confirmDeliveryReportsAsReceived($body);"
          },
          {
            "lang": "Python",
            "source": "body = ConfirmDeliveryReportsAsReceivedRequest()\nbody.delivery_report_ids = ['011dcead-6988-4ad6-a1c7-6b6c68ea628d', '3487b3fa-6586-4979-a233-2d1b095c7718', 'ba28e94b-c83d-4759-98e7-ff9c7edb87a1']\n\nresult = delivery_reports_controller.confirm_delivery_reports_as_received(body)"
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/replies": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Check replies",
        "description": "Check for any replies that have been received.\nReplies are messages that have been sent from a handset in response to a message sent by an\napplication or messages that have been sent from a handset to a inbound number associated with\nan account, known as a dedicated inbound number (contact <support@messagemedia.com> for more\ninformation on dedicated inbound numbers).\nEach request to the check replies endpoint will return any replies received that have not yet\nbeen confirmed using the confirm replies endpoint. A response from the check replies endpoint\nwill have the following structure:\n```json\n{\n    \"replies\": [\n        {\n            \"metadata\": {\n                \"key1\": \"value1\",\n                \"key2\": \"value2\"\n            },\n            \"message_id\": \"877c19ef-fa2e-4cec-827a-e1df9b5509f7\",\n            \"reply_id\": \"a175e797-2b54-468b-9850-41a3eab32f74\",\n            \"date_received\": \"2016-12-07T08:43:00.850Z\",\n            \"callback_url\": \"https://my.callback.url.com\",\n            \"destination_number\": \"+61491570156\",\n            \"source_number\": \"+61491570157\",\n            \"vendor_account_id\": {\n                \"vendor_id\": \"MessageMedia\",\n                \"account_id\": \"MyAccount\"\n            },\n            \"content\": \"My first reply!\"\n        },\n        {\n            \"metadata\": {\n                \"key1\": \"value1\",\n                \"key2\": \"value2\"\n            },\n            \"message_id\": \"8f2f5927-2e16-4f1c-bd43-47dbe2a77ae4\",\n            \"reply_id\": \"3d8d53d8-01d3-45dd-8cfa-4dfc81600f7f\",\n            \"date_received\": \"2016-12-07T08:43:00.850Z\",\n            \"callback_url\": \"https://my.callback.url.com\",\n            \"destination_number\": \"+61491570157\",\n            \"source_number\": \"+61491570158\",\n            \"vendor_account_id\": {\n                \"vendor_id\": \"MessageMedia\",\n                \"account_id\": \"MyAccount\"\n            },\n            \"content\": \"My second reply!\"\n        }\n    ]\n}\n```\nEach reply will contain details about the reply message, as well as details of the message the reply was sent\nin response to, including any metadata specified. Every reply will have a reply ID to be used with the\nconfirm replies endpoint.\n*Note: The source number and destination number properties in a reply are the inverse of those\nspecified in the message the reply is in response to. The source number of the reply message is the\nsame as the destination number of the original message, and the destination number of the reply\nmessage is the same as the source number of the original message. If a source number\nwasn't specified in the original message, then the destination number property will not be present\nin the reply message.*\nSubsequent requests to the check replies endpoint will return the same reply messages and a maximum\nof 100 replies will be returned in each request. Applications should use the confirm replies endpoint\nin the following pattern so that replies that have been processed are no longer returned in\nsubsequent check replies requests.\n1. Call check replies endpoint\n2. Process each reply message\n3. Confirm all processed reply messages using the confirm replies endpoint\n*Note: It is recommended to use the Webhooks feature to receive reply messages rather than polling\nthe check replies endpoint.*",
        "operationId": "CheckReplies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Unconfirmed replies",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checkrepliesresponse"
                },
                "example": {
                  "replies": [
                    {
                      "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                      },
                      "message_id": "877c19ef-fa2e-4cec-827a-e1df9b5509f7",
                      "reply_id": "a175e797-2b54-468b-9850-41a3eab32f74",
                      "date_received": "2016-12-07T08:43:00.850Z",
                      "callback_url": "https://my.callback.url.com",
                      "destination_number": "+61491570156",
                      "source_number": "+61491570157",
                      "vendor_account_id": {
                        "vendor_id": "MessageMedia",
                        "account_id": "MyAccount"
                      },
                      "content": "My first reply!"
                    },
                    {
                      "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                      },
                      "message_id": "8f2f5927-2e16-4f1c-bd43-47dbe2a77ae4",
                      "reply_id": "3d8d53d8-01d3-45dd-8cfa-4dfc81600f7f",
                      "date_received": "2016-12-07T08:43:00.850Z",
                      "callback_url": "https://my.callback.url.com",
                      "destination_number": "+61491570157",
                      "source_number": "+61491570158",
                      "vendor_account_id": {
                        "vendor_id": "MessageMedia",
                        "account_id": "MyAccount"
                      },
                      "content": "My second reply!"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": "repliesController.checkRepliesAsync(new APICallBack<CheckRepliesResponse>() {\n    public void onSuccess(HttpContext context, CheckRepliesResponse response) {\n        // TODO success callback handler\n    }\n    public void onFailure(HttpContext context, Throwable error) {\n        // TODO failure callback handler\n    }\n});"
          },
          {
            "lang": "JavaScript",
            "source": "const promise = controller.checkReplies();\npromise.then((response) => {\n    // this block will be executed on successful endpoint call\n    // `response` will be of type 'CheckRepliesResponse'\n}, (err) => {\n    // this block will be executed on endpoint call failure\n    // `err` is an 'object' containing more information about the error\n});"
          },
          {
            "lang": "PHP",
            "source": "$result = $repliesController->checkReplies();"
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/replies/confirmed": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Confirm replies as received",
        "description": "Mark a reply message as confirmed so it is no longer returned in check replies requests.\nThe confirm replies endpoint is intended to be used in conjunction with the check replies endpoint\nto allow for robust processing of reply messages. Once one or more reply messages have been processed\nthey can then be confirmed using the confirm replies endpoint so they are no longer returned in\nsubsequent check replies requests.\nThe confirm replies endpoint takes a list of reply IDs as follows:\n```json\n{\n    \"reply_ids\": [\n        \"011dcead-6988-4ad6-a1c7-6b6c68ea628d\",\n        \"3487b3fa-6586-4979-a233-2d1b095c7718\",\n        \"ba28e94b-c83d-4759-98e7-ff9c7edb87a1\"\n    ]\n}\n```\nUp to 100 replies can be confirmed in a single confirm replies request.",
        "operationId": "ConfirmRepliesAsReceived",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Confirmrepliesasreceivedrequest"
              },
              "example": {
                "reply_ids": [
                  "011dcead-6988-4ad6-a1c7-6b6c68ea628d",
                  "3487b3fa-6586-4979-a233-2d1b095c7718",
                  "ba28e94b-c83d-4759-98e7-ff9c7edb87a1"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Requested replies will be marked as confirmed",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "description": "Requested replies will be marked as confirmed"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400response"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": "ConfirmRepliesAsReceivedRequest body = new ConfirmRepliesAsReceivedRequest();\nbody.setReplyIds(new LinkedList<String>());\nbody.getReplyIds().add(\"011dcead-6988-4ad6-a1c7-6b6c68ea628d\");\nbody.getReplyIds().add(\"3487b3fa-6586-4979-a233-2d1b095c7718\");\nbody.getReplyIds().add(\"ba28e94b-c83d-4759-98e7-ff9c7edb87a1\");\n\nrepliesController.confirmRepliesAsReceivedAsync(body, new APICallBack<DynamicResponse>() {\n    public void onSuccess(HttpContext context, DynamicResponse response) {\n        // TODO success callback handler\n    }\n    public void onFailure(HttpContext context, Throwable error) {\n        // TODO failure callback handler\n    }\n});"
          },
          {
            "lang": "JavaScript",
            "source": "let body = new lib.ConfirmRepliesAsReceivedRequest();\nbody.replyIds = ['011dcead-6988-4ad6-a1c7-6b6c68ea628d', '3487b3fa-6586-4979-a233-2d1b095c7718', 'ba28e94b-c83d-4759-98e7-ff9c7edb87a1'];\n\nconst promise = controller.confirmRepliesAsReceived(body);\npromise.then((response) => {\n    // this block will be executed on successful endpoint call\n    // `response` will be of type 'mixed'\n}, (err) => {\n    // this block will be executed on endpoint call failure\n    // `err` is an 'object' containing more information about the error\n});"
          },
          {
            "lang": "PHP",
            "source": "$body = new Models\\ConfirmRepliesAsReceivedRequest;\n$body->replyIds = array('011dcead-6988-4ad6-a1c7-6b6c68ea628d', '3487b3fa-6586-4979-a233-2d1b095c7718', 'ba28e94b-c83d-4759-98e7-ff9c7edb87a1');\n\n$result = $repliesController->confirmRepliesAsReceived($body);"
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/lookups/phone/{phone_number}": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Lookups"
        ],
        "summary": "Lookup a phone number",
        "description": "Use the Lookups API to find information about a phone number.\n\nA request to the lookups API has the following format:\n\n```/v1/lookups/phone/{phone_number}?options={x}```\n\nwhere `{x}` is an individual value or a combination of values. \n\nThe `{phone_number}` parameter is a required field and should be set to the phone number to be looked up.\n\nThe options query parameter can also be used to request additional information about the phone number.\n\nBy default, a request will only return the `country_code` and `phone_number` properties in the response.\n\n```json\n{  \"country_code\": \"AU\", \"phone_number\": \"+61491570156\"}\n```\n\nTo request details about the the carrier, include `carrier` as a value of the options parameter and to \nrequest details about the type, include `type` as a value of the options parameter. The `carrier` and\nthe `type` values can be used together using a comma separated list, i.e. `carrier,type`.\n\nTo request details about the location, include `hlr` as a value of the options parameter. \n\nNOTE: The `hlr` value CANNOT be used in conjuction with the other values.\n\nA successful request to the lookups endpoint with `carrier` and `type` as values will \n\nreturn a response body as follows:\n\n```json\n{  \n  \"country_code\": \"AU\",\n  \"phone_number\": \"+61491570156\",\n  \"type\": \"mobile\",  \"carrier\": {\"name\": \"Telstra\"  }\n}\n```\n\nA successful request to the lookups endpoint with `hlr` as the value will return a response body as follows:\n\n```json\n{\"result\": \"OK\",    \"imsi\": 24008,    \"location\": 46}\n```\nEach property in the response body is defined as follows:- ```country_code``` ISO ALPHA 2 country code of the phone number\n- ```phone_number``` E.164 formatted phone number\n- ```type``` The type of number. This can be ```\"mobile\"``` or ```\"landline\"```\n- ```carrier``` Holds information about the specific carrier (if available)  \n- ```name``` The carrier's name as reported by the network\n- `imsi` A unique number identifying a GSM subscriber\n- `location` The location of the mobile number\"\n",
        "operationId": "LookupAPhoneNumber",
        "parameters": [
          {
            "name": "phone_number",
            "in": "path",
            "description": "The phone number to be looked up",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": 61491570156
            }
          },
          {
            "name": "options",
            "in": "query",
            "description": "The options query parameter can also be used to request additional information about the phone number.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "\"carrier,type\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Number was looked up successfully",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lookupaphonenumberresponse"
                },
                "example": {
                  "country_code": "AU",
                  "phone_number": 61491570156,
                  "type": "mobile",
                  "carrier": {
                    "name": "Telstra"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400response"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lookupaphonenumber404response"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/number_authorisation/mt/blacklist": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Number Authorisation"
        ],
        "summary": "List all blocked numbers",
        "description": "This endpoint returns a list of 100 numbers that are on the blacklist.  There is a pagination token to retrieve the next 100 numbers\n\nIn the example response the numbers `+61491570156` and `+61491570157` are on the blacklist and therefore will never receive any messages from you.",
        "operationId": "ListAllBlockedNumbers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Number authorisation blacklist was returned succesfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getnumberauthorisationblacklistresponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                }
              }
            }
          }
        },
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Number Authorisation"
        ],
        "summary": "Add one or more numbers to your backlist",
        "description": "This endpoint allows you to add one or more numbers to your blacklist. You can add up to 10 numbers in one request.\nNOTE: numbers need to be in international format and therefore start with a +",
        "operationId": "AddOneOrMoreNumbersToYourBacklist",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Addoneormorenumberstoyourbacklistrequest"
              },
              "example": {
                "numbers": [
                  61491570156,
                  61491570157
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "If all the numbers are already on the blacklist, then a 200 is returned.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Addoneormorenumberstoyourbacklistresponse"
                },
                "example": {
                  "uri": "/v1/number_authorisation/mt/blacklist",
                  "numbers": [
                    61491570156,
                    61491570157
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/number_authorisation/mt/blacklist/{number}": {
      "delete": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Number Authorisation"
        ],
        "summary": "Remove a number from the blacklist",
        "description": "This endpoint allows you to remove a number from the blacklist.  Only one number can be deleted per request.\nIn the example +61491570157 will be removed from the blacklist.\nNOTE:  numbers need to be in international format and therefore start with a +",
        "operationId": "RemoveANumberFromTheBlacklist",
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "a number in international format e.g. ```+61491570156```"
          }
        ],
        "responses": {
          "200": {
            "description": "The number has been successfully deleted.",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "The number has been successfully deleted.",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/number_authorisation/is_authorised/{numbers}": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Number Authorisation"
        ],
        "summary": "Check if one or several numbers are currently blacklisted",
        "description": "This endpoints lists for each requested number if you are authorised (which means the number is not blacklisted) to send to this number.\nIn the example given +61491570157 is on the blacklist.\nNOTE: We do this call for you internally no matter what. Use this endpoint only if you want to have some indication upfront. If you send a message which is on the blacklist, we issue a delivery receipt with the appropriate status code.",
        "operationId": "CheckIfOneOrSeveralNumbersAreCurrentlyBlacklisted",
        "parameters": [
          {
            "in": "path",
            "name": "numbers",
            "required": true,
            "schema": {
              "type": "array",
              "minimum": 1,
              "items": {
                "type": "string"
              }
            },
            "description": "one or more numbers in international format seperate by a comma, e.g. ```+61491570156,+61491570157```"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checkifoneorseveralnumbersarecurrentlyblacklistedresponse"
                },
                "example": {
                  "uri": "/v1/number_authorisation/is_authorised/+61491570156,+61491570157",
                  "numbers": [
                    {
                      "number": 61491570156,
                      "authorised": true
                    },
                    {
                      "number": 61491570157,
                      "authorised": false
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/messaging/numbers/dedicated/": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Dedicated Numbers"
        ],
        "summary": "Get numbers",
        "description": "Get a list of available dedicated numbers, filtered by requirements.",
        "operationId": "GetNumbers",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "description": "ISO_3166 country code, 2 character code to filter available numbers by country",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "AU"
            }
          },
          {
            "name": "matching",
            "in": "query",
            "description": "filters results by a pattern of digits contained within the number",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": 223344
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "number of results returned per page, default 50",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3
            }
          },
          {
            "name": "service_types",
            "in": "query",
            "description": "filter results to include numbers with certain capabilities",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/service_types"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "In paginated data the original request will return with a \"next_token\" attribute. This token must be entered into subsequent call in the \"token\" query parameter to obtain the next set of records.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "example"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/NumbersListResponse"
                },
                "example": {
                  "pagination": {
                    "next_token": "0428d673-0f75-4063-9493-e89d75f13438",
                    "page_size": 5
                  },
                  "data": [
                    {
                      "id": "03cf54ad-a4a3-4cd1-afd5-e0ca2cf158a3",
                      "phone_number": 61436489205,
                      "country": "AU",
                      "type": "MOBILE",
                      "classification": "BRONZE",
                      "available_after": "2019-08-06T23:56:15.633Z",
                      "capabilities": [
                        "SMS"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                },
                "example": {
                  "message": "Invalid authentication credentials"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/messaging/numbers/dedicated/{id}": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Dedicated Numbers"
        ],
        "summary": "Get number by ID",
        "description": "Get details about a specific dedicated number.",
        "operationId": "GetNumberById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "unique identifier",
            "required": true,
            "style": "simple",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "e2014bc7-5fed-4e27-bd8c-XXXXXXXXXXX"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json;charset=UTF-8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Number"
                },
                "example": {
                  "id": "be3cb602-7c00-4c87-ae4b-b8defc04f179",
                  "phone_number": 614111111111,
                  "country": "AU",
                  "type": "MOBILE",
                  "classification": "SILVER",
                  "available_after": "2019-06-21T04:04:31.707Z",
                  "capabilities": [
                    "SMS",
                    "MMS"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                },
                "example": {
                  "message": "Invalid authentication credentials"
                }
              }
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/messaging/numbers/dedicated/{numberId}/assignment": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Dedicated Numbers"
        ],
        "summary": "Get assignment",
        "description": "Use this endpoint to view details of the assignment including the label and metadata.",
        "operationId": "GetAssignment",
        "parameters": [
          {
            "name": "numberId",
            "in": "path",
            "description": "unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "e2014bc7-5fed-4e27-bd8c-XXXXXXXXXXX"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json;charset=UTF-8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                },
                "example": {
                  "metadata": {
                    "key1": "value1"
                  },
                  "label": "LabelTest0",
                  "id": "be3cb602-7c00-4c87-ae4b-b8defc04f179",
                  "number_id": "b9ee3fe8-2c20-47b1-96e9-c5d12d7ed985"
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                },
                "example": {
                  "message": "Invalid authentication credentials"
                }
              }
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Dedicated Numbers"
        ],
        "summary": "Create assignment",
        "description": "Assign the specified number to the authenticated account. \nUse the body of the request to specify a label or metadata \nfor this number assignment.\n\nIf you receive a *conflict* error then the number that you have selected is unavailable for assignment. \nThis means that the number is either already assigned to another account, \nor has an available_after date in the future. Should this occur, perform \nanother search and select a different number.",
        "operationId": "CreateAssignment",
        "parameters": [
          {
            "name": "numberId",
            "in": "path",
            "description": "unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "e2014bc7-5fed-4e27-bd8c-XXXXXXXXXXX"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json;charset=UTF-8"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAssignmentrequest"
              },
              "example": {
                "label": "ExampleLabel",
                "metadata": {
                  "Key1": "value1",
                  "Key2": "value2"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                },
                "example": {
                  "label": "cillum irure",
                  "number_id": "et pariatur"
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                },
                "example": {
                  "message": "Invalid authentication credentials"
                }
              }
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404response"
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "delete": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Dedicated Numbers"
        ],
        "summary": "Delete assignment",
        "description": "Release the dedicated number from your account.",
        "operationId": "DeleteAssignment",
        "parameters": [
          {
            "name": "numberId",
            "in": "path",
            "description": "unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "e2014bc7-5fed-4e27-bd8c-XXXXXXXXXXX"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json;charset=UTF-8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {},
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "string",
                  "description": "No Content",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                },
                "example": {
                  "message": "Invalid authentication credentials"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "patch": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Dedicated Numbers"
        ],
        "summary": "Update assignment",
        "description": "Retain the dedicated number assignment, and edit or add additional metadata or title information. You can exclude any data from the body of this request that you do not want updated.",
        "operationId": "UpdateAssignment",
        "parameters": [
          {
            "name": "numberId",
            "in": "path",
            "description": "unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "e2014bc7-5fed-4e27-bd8c-XXXXXXXXXXX"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json;charset=UTF-8"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAssignmentrequest"
              },
              "example": {
                "label": "ExampleLabel",
                "metadata": {
                  "Key1": "value1",
                  "Key2": "value2"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                },
                "example": {
                  "id": "b06387c0-f4d9-4333-8657-c819bede79c3",
                  "number_id": "073fb6bd-f054-4644-aada-8fb204145d77"
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                },
                "example": {
                  "message": "Invalid authentication credentials"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/messaging/numbers/dedicated/assignments": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Dedicated Numbers"
        ],
        "summary": "Get assigned numbers",
        "description": "",
        "operationId": "GetAssignedNumbers",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results returned per page, default 50",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 3
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "In paginated data the original request will return with a \"next_token\" attribute. This token must be entered into subsequent call in the \"token\" query parameter to obtain the next set of records.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "example"
            }
          },
          {
            "name": "number_id",
            "in": "query",
            "description": "Unique identifier of a specific number",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "examples"
            }
          },
          {
            "name": "matching",
            "in": "query",
            "description": "Filters results by a pattern of digits contained within the number",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": 223344
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter results by ISO_3166 country code, 2 character code to filter available numbers by country",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "AU"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter results by Number type",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Type"
            }
          },
          {
            "name": "classification",
            "in": "query",
            "description": "Filter results by Number Classification",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/Classification"
            }
          },
          {
            "name": "service_types",
            "in": "query",
            "description": "Filter results by capabilities",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/service_types"
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "Filter results by a matching label",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "examples"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort results by property",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/sort_by"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Sort direction",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/sort_direction"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json;charset=UTF-8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/AssignedNumberListResponse"
                },
                "example": {
                  "pagination": {
                    "next_token": "0428d673-0f75-4063-9493-e89d75f13438",
                    "page_size": 5
                  },
                  "data": [
                    {
                      "assignment": {
                        "metadata": {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/Metadata"
                          }
                        },
                        "label": "LabelTest0",
                        "id": "be3cb602-7c00-4c87-ae4b-b8defc04f179",
                        "number_id": "b9ee3fe8-2c20-47b1-96e9-c5d12d7ed985"
                      },
                      "number": {
                        "id": "03cf54ad-a4a3-4cd1-afd5-e0ca2cf158a3",
                        "phone_number": 61436489205,
                        "country": "AU",
                        "type": "MOBILE",
                        "classification": "BRONZE",
                        "available_after": "2019-08-06T23:56:15.633Z",
                        "capabilities": [
                          "SMS"
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unauthorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403response"
                },
                "example": {
                  "message": "Invalid authentication credentials"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/{messageType}/metadata/keys": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Get metadata keys",
        "description": "Returns a list of metadata keys",
        "operationId": "GetMetadataKeys",
        "parameters": [
          {
            "name": "messageType",
            "in": "path",
            "description": "Message type. Possible values are sent messages and received messages.",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/message_type"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-10T13:30:00.000Z"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-12T13:30:00.000Z"
            }
          },
          {
            "name": "accounts",
            "in": "query",
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all metadata keys used in the specified time window",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataKeysResponse"
                },
                "example": {
                  "data": [],
                  "properties": {
                    "end_date": "2017-02-10T13:30:00.000Z",
                    "start_date": "2017-02-12T13:30:00.000Z",
                    "accounts": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/async_reports": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Get async reports",
        "description": "Lists asynchronous reports.",
        "operationId": "GetAsyncReports",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for paging through paginated result sets.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return in a page for paginated result sets.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of requested asynchronous reports.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAsyncReportsResponse"
                },
                "example": {
                  "data": [
                    {
                      "created_datetime": "2017-02-12T13:30:00.000Z",
                      "last_modified_datetime": "2017-02-12T13:30:00.000Z"
                    }
                  ],
                  "pagination": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/async_reports/{report_id}": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Get async report by Id",
        "description": "Gets a single asynchronous report.",
        "operationId": "GetAsyncReportById",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "description": "Unique ID of the async report",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The asynchronous report.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReport"
                },
                "example": {
                  "created_datetime": "2017-02-12T13:30:00.000Z",
                  "last_modified_datetime": "2017-02-12T13:30:00.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          },
          "404": {
            "description": "The requested report was not found."
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/async_reports/{report_id}/data": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Get async report data by Id",
        "description": "Gets the data of an asynchronous report.",
        "operationId": "GetAsyncReportDataById",
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "description": "Unique ID of the async report",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "binary": {
                "schema": {
                  "type": "string",
                  "example": "The asynchronous report data as a download."
                },
                "example": "The asynchronous report data as a download."
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          },
          "404": {
            "description": "Report not found or not finished."
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/received_messages/detail/async": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Submit received messages detail",
        "description": "Submits a request to generate an async detail report",
        "operationId": "SubmitReceivedMessagesDetail",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/asyncreceivedmessagesdetailrequest"
              },
              "example": {
                "end_date": "2017-02-10T13:30:00.000Z",
                "start_date": "2017-02-12T13:30:00.000Z",
                "period": "TODAY",
                "sort_by": "ACCOUNT",
                "sort_direction": "ASCENDING",
                "timezone": "Australia/Melbourne",
                "accounts": [],
                "delivery_options": [
                  {
                    "delivery_type": "EMAIL",
                    "delivery_addresses": [],
                    "delivery_format": "CSV"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The identifier of the async report request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                },
                "example": {
                  "id": "b8ffd5b3-050a-46b9-9192-fbd7c20a22ec"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/received_messages/detail": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Get received messages detail",
        "description": "Returns a list message received",
        "operationId": "GetReceivedMessagesDetail",
        "parameters": [
          {
            "name": "end_date",
            "in": "query",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-10T13:30:00.000Z"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-12T13:30:00.000Z"
            }
          },
          {
            "name": "accounts",
            "in": "query",
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "Filter results by the action that was invoked for this message.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/action"
            }
          },
          {
            "name": "destination_address_country",
            "in": "query",
            "description": "Filter results by destination address country.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_address",
            "in": "query",
            "description": "Filter results by destination address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_format",
            "in": "query",
            "description": "Filter results by message format.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/format"
            }
          },
          {
            "name": "metadata_key",
            "in": "query",
            "description": "Filter results for messages that include a metadata key.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadata_value",
            "in": "query",
            "description": "Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for paging through paginated result sets.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return in a page for paginated result sets.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Field to sort results set by",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/sort_by"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Order to sort results by.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/sort_direction"
            }
          },
          {
            "name": "source_address_country",
            "in": "query",
            "description": "Filter results by source address country.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source_address",
            "in": "query",
            "description": "Filter results by source address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all messages received in the specified time window",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceivedMessages"
                },
                "example": {
                  "data": [
                    {
                      "account": "MyAccount001",
                      "action": "MyAccount001",
                      "content": "Hello back",
                      "destination_address": 61491570156,
                      "destination_address_country": "AU",
                      "format": "AU",
                      "source_address": 61491570156,
                      "source_address_country": "AU",
                      "timestamp": "2017-02-12T13:30:00.000Z"
                    }
                  ],
                  "pagination": {},
                  "properties": {
                    "end_date": "2017-02-10T13:30:00.000Z",
                    "start_date": "2017-02-12T13:30:00.000Z",
                    "sorting": {},
                    "filters": {
                      "accounts": []
                    },
                    "timezone": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/sent_messages/detail/async": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Submit sent messages detail",
        "description": "Submits a request to generate an async detail report",
        "operationId": "SubmitSentMessagesDetail",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/asyncsentmessagesdetailrequest"
              },
              "example": {
                "end_date": "2017-02-10T13:30:00.000Z",
                "start_date": "2017-02-12T13:30:00.000Z",
                "period": "TODAY",
                "sort_by": "DELIVERY_REPORT",
                "sort_direction": "ASCENDING",
                "timezone": "Australia/Melbourne",
                "accounts": [],
                "statuses": [
                  "CANCELLED"
                ],
                "delivery_options": [
                  {
                    "delivery_type": "EMAIL",
                    "delivery_addresses": [],
                    "delivery_format": "CSV"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The identifier of the async report request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                },
                "example": {
                  "id": "b8ffd5b3-050a-46b9-9192-fbd7c20a22ec"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/sent_messages/detail": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Get sent messages detail",
        "description": "Returns a list of message sent",
        "operationId": "GetSentMessagesDetail",
        "parameters": [
          {
            "name": "end_date",
            "in": "query",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-10T13:30:00.000Z"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-12T13:30:00.000Z"
            }
          },
          {
            "name": "accounts",
            "in": "query",
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "delivery_report",
            "in": "query",
            "description": "Filter results by delivery report.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "destination_address_country",
            "in": "query",
            "description": "Filter results by destination address country.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_address",
            "in": "query",
            "description": "Filter results by destination address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_format",
            "in": "query",
            "description": "Filter results by message format.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/format"
            }
          },
          {
            "name": "metadata_key",
            "in": "query",
            "description": "Filter results for messages that include a metadata key.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadata_value",
            "in": "query",
            "description": "Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status_code",
            "in": "query",
            "description": "Filter results by message status code.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter results by message status. Can't be combined with statuses.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/status"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Filter results by message status. Can't be combined with status.{array}",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/statuses"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for paging through paginated result sets.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return in a page for paginated result sets.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Field to sort results set by",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/sort_by"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Order to sort results by.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/sort_direction"
            }
          },
          {
            "name": "source_address_country",
            "in": "query",
            "description": "Filter results by source address country.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source_address",
            "in": "query",
            "description": "Filter results by source address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all messages sent in the specified time window",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentMessages"
                },
                "example": {
                  "data": [
                    {
                      "account": "MyAccount001",
                      "content": "Hello world!",
                      "delivered_timestamp": "2017-02-12T13:30:00.000Z",
                      "destination_address": 61491570156,
                      "destination_address_country": "AU",
                      "format": "AU",
                      "source_address": 61491570156,
                      "source_address_country": "AU",
                      "units": 2,
                      "timestamp": "2017-02-12T13:30:00.000Z"
                    }
                  ],
                  "pagination": {},
                  "properties": {
                    "end_date": "2017-02-10T13:30:00.000Z",
                    "start_date": "2017-02-12T13:30:00.000Z",
                    "sorting": {},
                    "filters": {
                      "accounts": []
                    },
                    "timezone": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/received_messages/summary/async": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Submit received messages summary",
        "description": "Submits a summarised report of received messages",
        "operationId": "SubmitReceivedMessagesSummary",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/asyncreceivedmessagessummaryrequest"
              },
              "example": {
                "end_date": "2017-02-10T13:30:00.000Z",
                "start_date": "2017-02-12T13:30:00.000Z",
                "summary_by": "COUNT",
                "summary_field": "MESSAGE_ID",
                "group_by": [
                  "DAY"
                ],
                "period": "THIS_WEEK",
                "timezone": "Australia/Melbourne",
                "accounts": [],
                "delivery_options": [
                  {
                    "delivery_type": "EMAIL",
                    "delivery_addresses": [],
                    "delivery_format": "CSV"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The identifier of the async report request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                },
                "example": {
                  "id": "b8ffd5b3-050a-46b9-9192-fbd7c20a22ec"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          },
          "501": {
            "description": "The group_by combination is not currently implemented"
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/received_messages/summary": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Get received messages summary",
        "description": "Returns a summarised report of messages received",
        "operationId": "GetReceivedMessagesSummary",
        "parameters": [
          {
            "name": "end_date",
            "in": "query",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-10T13:30:00.000Z"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-12T13:30:00.000Z"
            }
          },
          {
            "name": "group_by",
            "in": "query",
            "description": "List of fields to group results set by{array}",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/group_by"
            }
          },
          {
            "name": "accounts",
            "in": "query",
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "destination_address_country",
            "in": "query",
            "description": "Filter results by destination address country.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_address",
            "in": "query",
            "description": "Filter results by destination address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message_format",
            "in": "query",
            "description": "Filter results by message format.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/format"
            }
          },
          {
            "name": "metadata_key",
            "in": "query",
            "description": "Filter results for messages that include a metadata key.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadata_value",
            "in": "query",
            "description": "Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "summary_by",
            "in": "query",
            "description": "Function to apply when summarising results",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/summary_by"
            }
          },
          {
            "name": "summary_field",
            "in": "query",
            "description": "Field to summarise results by",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/summary_field"
            }
          },
          {
            "name": "source_address_country",
            "in": "query",
            "description": "Filter results by source address country.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source_address",
            "in": "query",
            "description": "Filter results by source address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A summarised report of all messages received in the specified time, grouped by by the specified grouping parameter",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SummaryReport"
                },
                "example": {
                  "properties": {
                    "end_date": "2017-02-10T13:30:00.000Z",
                    "start_date": "2017-02-12T13:30:00.000Z",
                    "timezone": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
                  },
                  "data": [
                    {}
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          },
          "501": {
            "description": "The group_by combination is not currently implemented"
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/sent_messages/summary/async": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Submit sent messages summary",
        "description": "Submits a summarised report of sent messages",
        "operationId": "SubmitSentMessagesSummary",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/asyncsentmessagesrequest"
              },
              "example": {
                "end_date": "2017-02-10T13:30:00.000Z",
                "start_date": "2017-02-12T13:30:00.000Z",
                "group_by": [
                  "DAY"
                ],
                "period": "YESTERDAY",
                "timezone": "Australia/Melbourne",
                "accounts": [],
                "delivery_options": [
                  {
                    "delivery_type": "EMAIL",
                    "delivery_addresses": [],
                    "delivery_format": "CSV"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The identifier of the async report request",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                },
                "example": {
                  "id": "b8ffd5b3-050a-46b9-9192-fbd7c20a22ec"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          },
          "501": {
            "description": "The group_by combination is not currently implemented"
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/sent_messages/summary": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Messaging Reports"
        ],
        "summary": "Get sent messages summary",
        "description": "Returns a summarised report of messages sent",
        "operationId": "GetSentMessagesSummary",
        "parameters": [
          {
            "name": "end_date",
            "in": "query",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-10T13:30:00.000Z"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2017-02-12T13:30:00.000Z"
            }
          },
          {
            "name": "group_by",
            "in": "query",
            "description": "List of fields to group results set by{array}",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/group_by"
            }
          },
          {
            "name": "accounts",
            "in": "query",
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "delivery_report",
            "in": "query",
            "description": "Filter results by delivery report.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "destination_address_country",
            "in": "query",
            "description": "Filter results by destination address country.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination_address",
            "in": "query",
            "description": "Filter results by destination address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "summary_by",
            "in": "query",
            "description": "Function to apply when summarising results",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/summary_by"
            }
          },
          {
            "name": "summary_field",
            "in": "query",
            "description": "Field to summarise results by",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/summary_field"
            }
          },
          {
            "name": "message_format",
            "in": "query",
            "description": "Filter results by message format.",
            "style": "form",
            "explode": true,
            "schema": {
              "$ref": "#/components/schemas/format"
            }
          },
          {
            "name": "metadata_key",
            "in": "query",
            "description": "Filter results for messages that include a metadata key.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadata_value",
            "in": "query",
            "description": "Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status_code",
            "in": "query",
            "description": "Filter results by message status code.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source_address_country",
            "in": "query",
            "description": "Filter results by source address country.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source_address",
            "in": "query",
            "description": "Filter results by source address.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A summarised report of all messages received in the specified time, grouped by by the specified grouping parameter",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SummaryReport"
                },
                "example": {
                  "properties": {
                    "end_date": "2017-02-10T13:30:00.000Z",
                    "start_date": "2017-02-12T13:30:00.000Z",
                    "timezone": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
                  },
                  "data": [
                    {}
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Check the json response for more details on what went wrong."
          },
          "501": {
            "description": "The group_by combination is not currently implemented"
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/links/summary": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Short Trackable Links Reports"
        ],
        "summary": "Log summary",
        "description": "Clicks summary report for metadata key value pair, long url and short url.",
        "operationId": "LogSummary",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipient",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSummaryResult"
                },
                "example": {
                  "total_clicks": 3,
                  "unique_clicks": 1,
                  "total_views": 2,
                  "unique_views": 1,
                  "short_urls_generated": 1,
                  "short_urls": [
                    {
                      "click_count": 3,
                      "view_count": 2,
                      "message_id": "00000000-0000-0000-0000-000000000000",
                      "long_url": "https://developers.messagemedia.com",
                      "short_url": "https://nxt.to/abc1234",
                      "destination_number": 61491570157
                    }
                  ],
                  "pagination": {
                    "page": 1,
                    "page_size": 100,
                    "page_count": 3
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid data provided"
          },
          "404": {
            "description": "Data cannot be found"
          },
          "500": {
            "description": "System Error"
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/reporting/links/detail": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Short Trackable Links Reports"
        ],
        "summary": "Log detail",
        "description": "Detailed clicks report for a hashcode.",
        "operationId": "LogDetail",
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogsDetailResult"
                },
                "example": {
                  "message_id": "00000000-0000-0000-0000-000000000000",
                  "long_url": "https://developers.messagemedia.com",
                  "short_url": "https://nxt.to/abc1234",
                  "destination_number": 61491570157,
                  "click_count": 3,
                  "view_count": 2,
                  "clicks": [
                    {
                      "dt": "2018-09-18T01:22:17.071Z",
                      "user_agent": "Mozilla/5.0 (Windows NT...",
                      "ip": "127.0.0.1"
                    }
                  ],
                  "views": [
                    {
                      "dt": "2018-09-18T01:22:17.071Z",
                      "user_agent": "Mozilla/5.0 (Windows NT...",
                      "ip": "127.0.0.1"
                    }
                  ],
                  "pagination": {
                    "page": 1,
                    "page_size": 100,
                    "page_count": 3
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid data provided"
          },
          "404": {
            "description": "Data cannot be found"
          },
          "500": {
            "description": "System Error"
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/webhooks/messages": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Webhooks Management"
        ],
        "summary": "Retrieve webhook",
        "description": "Retrieve all the webhooks created for the connected account.\nA successful request to the retrieve webhook endpoint will return a response body as follows:\n\n```\n{\n    \"page\": 0,\n    \"pageSize\": 100,\n    \"pageData\": [\n        {\n            \"url\": \"https://webhook.com\",\n            \"method\": \"POST\",\n            \"id\": \"8805c9d8-bef7-41c7-906a-69ede93aa024\",\n            \"encoding\": \"JSON\",\n            \"events\": [\n                \"RECEIVED_SMS\"\n            ],\n            \"headers\": {},\n            \"template\": \"{\\\"id\\\":\\\"$mtId\\\", \\\"status\\\":\\\"$statusCode\\\"}\"\n        }\n    ]\n}\n```\n\n*Note: Response 400 is returned when the `page` query parameter is not valid or the `pageSize` query parameter is not valid.*",
        "operationId": "RetrieveWebhook",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWebhook400response"
                },
                "example": {
                  "message": "Something went wrong. Please try again later."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Webhooks Management"
        ],
        "summary": "Create webhook",
        "description": "Create a webhook for one or more of the specified events.\n\nA webhook would typically have the following structure:\n\n```\n{ \n  \"url\": \"http://webhook.com\",\n  \"method\": \"POST\",\n  \"encoding\": \"JSON\",  \n  \"headers\": {\"Account\": \"DeveloperPortal7000\"  },  \n  \"events\": [\"RECEIVED_SMS\"  ],\n  \"template\": {\n    \"id\":\"$mtId\",\n    \"status\":\"$statusCode\"}\n  }\n\n```\n\nA valid webhook must consist of the following properties:\n\n- ```url``` The configured URL which will trigger the webhook when a selected event occurs.\n\n- ```method``` The methods to map CRUD (create, retrieve, update, delete) operations to HTTP requests.\n\n- ```encoding``` Webhooks can be delivered using different content types. You can choose from ```JSON```, ```FORM_ENCODED``` or ```XML```. This will automatically add the Content-Type header for you so you don't have to add it again in the `headers` property.\n\n- ```headers``` HTTP header fields which provide required information about the request or response, or about the object sent in the message body. This should NOT include the `Content-Type` header.\n\n- ```events``` Event or events that will trigger the webhook. Atleast one event should be present.\n\n- ```template``` The structure of the payload that will be returned. You can format this in JSON or XML.\n\n#### Types of Events\n\nYou can select all of the events (listed below) or combine them in whatever way you like but atleast one event must be used. Otherwise, the webhook won't be created.\n\nA webhook will be triggered when any one or more of the events occur:\n\n+ **SMS** \n  + `RECEIVED_SMS` Receive an SMS\n  + `OPT_OUT_SMS` Opt-out occured\n+ **MMS**\n  + `RECEIVED_MMS` Receive an MMS\n+ **DR (Delivery Reports)**\n  + `ENROUTE_DR` Message is enroute\n  + `EXPIRED_DR` Message has expired\n  + `REJECTED_DR` Message is rejected\n  + `FAILED_DR` Message has failed\n  + `DELIVERED_DR` Message is delivered\n  + `SUBMITTED_DR` Message is submitted\n\n#### Template Parameters\n\nYou can choose what to include in the data that will be sent as the payload via the Webhook. It's upto you to choose what format you would like the payload to be returned. You can choose between JSON or XML.\n\nKeep in my mind, if you've chosen JSON as the format, you must escape the JSON in the template value (see example above).\n\nThe table illustrates a list of all the parameters that can be included in the template and which event types it can be applied to.\n\n| Data  | Parameter Name | Example | Event Type |\n|:--|--|--|--:|\n| **Service Type**  | $type| `SMS` | `DR` `MO` `MO MMS` |\n| **Message ID**  | $mtId, $messageId| `877c19ef-fa2e-4cec-827a-e1df9b5509f7` | `DR` `MO` `MO MMS`|\n| **Delivery Report ID** |$drId, $reportId| `01e1fa0a-6e27-4945-9cdb-18644b4de043` | `DR` |\n| **Reply ID**| $moId, $replyId| `a175e797-2b54-468b-9850-41a3eab32f74` | `MO` `MO MMS` |\n| **Account ID**  | $accountId| `DeveloperPortal7000` | `DR` `MO` `MO MMS` |\n| **Message Timestamp**  | $submittedTimestamp| `2016-12-07T08:43:00.850Z` | `DR` `MO` `MO MMS` |\n| **Provider Timestamp**  | $receivedTimestamp| `2016-12-07T08:44:00.850Z` | `DR` `MO` `MO MMS` |\n| **Message Status** | $status| `enroute` | `DR` |\\n| **Status Code**  | $statusCode| `200` | `DR` |\n| **External Metadata** | $metadata.get('key')| `name` | `DR` `MO` `MO MMS` |\n| **Source Address**| $sourceAddress| `+61491570156` | `DR` `MO` `MO MMS` |\n| **Destination Address**| $destinationAddress| `+61491593156` | `MO` `MO MMS` |\n| **Message Content**| $mtContent, $messageContent, $esc.json($!mtContent) *- when used in `JSON` encoded `template`*| `Hi Derp` | `DR` `MO` `MO MMS` |\n| **Reply Content**| $moContent, $replyContent, $esc.json($!moContent) *- when used in `JSON` encoded `template`*| `Hello Derpina` | `MO` `MO MMS` |\n| **Retry Count**| $retryCount| `1` | `DR` `MO` `MO MMS` |\n\n*Note: A 400 response will be returned if the `url` is invalid, the `events`, `encoding` or `method` is null or the `headers` has a Content-Type  attribute.*\n",
        "operationId": "CreateWebhook",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookrequest"
              },
              "example": {
                "url": "http://webhook.com",
                "method": "POST",
                "encoding": "JSON",
                "headers": {
                  "Account": "DeveloperPortal7000"
                },
                "events": [
                  "ENROUTE_DR",
                  "DELIVERED_DR"
                ],
                "template": "{\"id\":\"$mtId\",\"status\":\"$statusCode\"}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Webhook successfully created",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "description": "Webhook successfully created"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWebhook400response"
                },
                "example": {
                  "message": "Something went wrong. Please try again later."
                }
              }
            }
          },
          "409": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWebhook400response"
                },
                "example": {
                  "message": "A webhook with the given url and method already exists."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/webhooks/messages/{webhookId}": {
      "delete": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Webhooks Management"
        ],
        "summary": "Delete webhook",
        "description": "Delete a webhook that was previously created for the connected account.\nA webhook can be cancelled by appending the UUID of the webhook to the endpoint and submitting a DELETE request to the /webhooks/messages endpoint.\n\nA successful request to the retrieve webhook endpoint will return a null response.\n\n*Note: Only pre-created webhooks can be deleted. If an invalid or non existent webhook ID parameter is specified in the request, then a HTTP 404 Not Found response will be returned.*",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a7f11bb0-f299-4861-a5ca-9b29d04bc5ad"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook deleted successfully",
            "headers": {}
          },
          "404": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "patch": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Webhooks Management"
        ],
        "summary": "Update webhook",
        "description": "Update a webhook. You can update individual attributes or all of them by submitting a PATCH request to the /webhooks/messages endpoint (the same endpoint used above to delete a webhook)\n\nA successful request to the retrieve webhook endpoint will return a response body as follows:\n\n```\n{\n    \"url\": \"https://webhook.com\",\n    \"method\": \"POST\",\n    \"id\": \"04442623-0961-464e-9cbc-ec50804e0413\",\n    \"encoding\": \"JSON\",\n    \"events\": [\n        \"RECEIVED_SMS\"\n    ],\n    \"headers\": {},\n    \"template\": \"{\\\"id\\\":\\\"$mtId\\\", \\\"status\\\":\\\"$statusCode\\\"}\"\n}\n```\n\n*Note: Only pre-created webhooks can be deleted. If an invalid or non existent webhook ID parameter is specified in the request, then a HTTP 404 Not Found response will be returned.*",
        "operationId": "UpdateWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "a7f11bb0-f299-4861-a5ca-9b29d04bc5ad"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebhookrequest"
              },
              "example": {
                "url": "https://myurl.com",
                "method": "POST",
                "encoding": "FORM_ENCODED",
                "events": [
                  "ENROUTE_DR"
                ],
                "template": "{\"id\":\"$mtId\", \"status\":\"$statusCode\"}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Webhook updated successfully",
            "headers": {},
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "description": "Webhook updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWebhook400response"
                },
                "example": {
                  "message": "Something went wrong. Please try again later."
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/iam/signature_keys": {
      "get": {
        "tags": [
          "Signature Key Management"
        ],
        "summary": "Get signature key list",
        "description": "Retrieve the paginated list of signature keys.\n\nA successful request for the ```get signature key list``` endpoint will return a response body as follows:\n\n```json\n[\n  {\n    \"key_id\": \"7ca628a8-08b0-4e42-aeb8-960b37049c31\",\n    \"cipher\": \"RSA\",\n    \"digest\": \"SHA224\",\n    \"created\": \"2018-01-18T10:16:12.364Z\",\n    \"enabled\": false\n  }\n]\n```",
        "operationId": "GetSignatureKeyList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of signature keys.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Getsignaturekeylistresponse"
                  },
                  "description": "The list of signature keys."
                },
                "example": [
                  {
                    "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
                    "cipher": "RSA",
                    "digest": "SHA224",
                    "created": "2018-01-18T10:16:12.364Z",
                    "enabled": true
                  },
                  {
                    "key_id": "6a0108cf-3659-435e-800e-004beb910fd1",
                    "cipher": "RSA",
                    "digest": "SHA224",
                    "created": "2018-01-18T10:15:31.035Z",
                    "enabled": false
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enablesignaturekey400response"
                },
                "example": {
                  "message": "Bad Request",
                  "details": [
                    "page property value is invalid"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "This feature has not been enabled in your account."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "post": {
        "tags": [
          "Signature Key Management"
        ],
        "summary": "Create signature key",
        "description": "This will create a key pair:\n\n- The ```private key``` stored in MessageMedia is used to create the signature.\n\n- The ```public key``` is returned and stored at your side to verify the signature in callbacks.\n\nYou need to enable your signature key after creating.\n\nThe most basic body has the following structure:\n\n```json\n{\n    \"digest\": \"SHA224\",\n    \"cipher\": \"RSA\"\n}\n```\n\n- ```digest``` is used to hash the message. The valid values for digest type are: SHA224, SHA256, SHA512\n\n- ```cipher``` is used to encrypt the hashed message. The valid value for cipher type is: RSA\n\nA successful request for the ```create signature key``` endpoint will return a response body as follows:\n\n```json\n{\n    \"key_id\": \"7ca628a8-08b0-4e42-aeb8-960b37049c31\",\n    \"public_key\": \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCTIxtRyT5CuOD74r7UCT+AKzWNxvaAP9myjAqR7+vBnJKEvoPnmbKTnm6uLlxutnMbjKrnCCWnQ9vtBVnnd+ElhwLDPADfMcJoOqwi7mTcxucckeEbBsfsgYRfdacxgSZL8hVD1hLViQr3xwjEIkJcx1w3x8npvwMuTY0uW8+PjwIDAQAB\",\n    \"cipher\": \"RSA\",\n    \"digest\": \"SHA224\",\n    \"created\": \"2018-01-18T10:16:12.364Z\",\n    \"enabled\": false\n}\n```\n\nThe response body of a successful POST request to the ```create signature key``` endpoint will contain six properties:\n\n- ```key_id``` will be a 36 character UUID which can be used to enable, delete or get the details.\n\n- ```public_key``` is used to decrypt the signature.\n\n- ```cipher``` same as cipher in request body.\n\n- ```digest``` same as digest in request body.\n\n- ```created``` is the created date.\n\n- ```enabled``` is false for the new signature key. You can use the ```enable signature key``` endpoint to set this field to true.",
        "operationId": "CreateSignatureKey",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Createsignaturekeyrequest"
              },
              "example": {
                "digest": "SHA224",
                "cipher": "RSA"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The new signature key has been created.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Createsignaturekeyresponse"
                },
                "example": {
                  "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
                  "public_key": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCTIxtRyT5CuOD74r7UCT+AKzWNxvaAP9myjAqR7+vBnJKEvoPnmbKTnm6uLlxutnMbjKrnCCWnQ9vtBVnnd+ElhwLDPADfMcJoOqwi7mTcxucckeEbBsfsgYRfdacxgSZL8hVD1hLViQr3xwjEIkJcx1w3x8npvwMuTY0uW8+PjwIDAQAB",
                  "cipher": "RSA",
                  "digest": "SHA224",
                  "created": "2018-01-18T10:16:12.364Z",
                  "enabled": false
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enablesignaturekey400response"
                },
                "example": {
                  "message": "Bad Request",
                  "details": [
                    "/cipher: [RA] is invalid"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "This feature has not been enabled in your account."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/iam/signature_keys/{key_id}": {
      "get": {
        "tags": [
          "Signature Key Management"
        ],
        "summary": "Get signature key detail",
        "description": "Retrieve the current detail of a signature key using the key_id returned in the ```create signature key``` endpoint.\n\nA successful request for the ```get signature key detail``` endpoint will return a response body as follows:\n\n```json\n{\n    \"key_id\": \"7ca628a8-08b0-4e42-aeb8-960b37049c31\",\n    \"cipher\": \"RSA\",\n    \"digest\": \"SHA224\",\n    \"created\": \"2018-01-18T10:16:12.364Z\",\n    \"enabled\": false\n}\n```\n\n*Note: If an invalid or non-existent key_id parameter is specified in the request, then an HTTP 404 Not Found response will be returned*",
        "operationId": "GetSignatureKeyDetail",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The detail of signature key.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getsignaturekeydetailresponse"
                },
                "example": {
                  "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
                  "cipher": "RSA",
                  "digest": "SHA224",
                  "created": "2018-01-18T10:16:12.364Z",
                  "enabled": false
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enablesignaturekey400response"
                },
                "example": {
                  "message": "Bad Request",
                  "details": [
                    "key_id property value is invalid"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "This feature has not been enabled in your account."
                }
              }
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "Entity not found"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "delete": {
        "tags": [
          "Signature Key Management"
        ],
        "summary": "Delete signature key",
        "description": "Delete a signature key using the key_id returned in the ```create signature key``` endpoint.\n\nA successful request for the ```delete signature key``` endpoint will return an empty response body.\n\n*Note: If an invalid or non-existent key_id parameter is specified in the request, then an HTTP 404 Not Found response will be returned*",
        "operationId": "DeleteSignatureKey",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The signature key has been deleted.",
            "headers": {}
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "This feature has not been enabled in your account."
                }
              }
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "Entity not found"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/v1/iam/signature_keys/enabled": {
      "patch": {
        "tags": [
          "Signature Key Management"
        ],
        "summary": "Enable signature key",
        "description": "Enable a signature key using the key_id returned in the ```create signature key``` endpoint.\nThere is only one signature key is enabled at the one moment in time. So if you enable the new signature key, the old one will be disabled.\n\nThe most basic body has the following structure:\n\n```json\n{\n    \"key_id\": \"7ca628a8-08b0-4e42-aeb8-960b37049c31\"\n}\n```\n\nThe response body of a successful PATCH request to ```enable signature key``` endpoint will contain the ```enabled``` properties with the value is true as follows:\n\n```json\n{\n    \"key_id\": \"7ca628a8-08b0-4e42-aeb8-960b37049c31\",\n    \"cipher\": \"RSA\",\n    \"digest\": \"SHA224\",\n    \"created\": \"2018-01-18T10:16:12.364Z\",\n    \"enabled\": true\n}\n```\n\n*Note: If an invalid or non-existent key_id parameter is specified in the request, then an HTTP 404 Not Found response will be returned*",
        "operationId": "EnableSignatureKey",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Enablesignaturekeyrequest"
              },
              "example": {
                "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The enabled signature key.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enablesignaturekeyresponse"
                },
                "example": {
                  "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
                  "cipher": "RSA",
                  "digest": "SHA224",
                  "created": "2018-01-18T10:16:12.364Z",
                  "enabled": true
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enablesignaturekey400response"
                },
                "example": {
                  "message": "Bad Request",
                  "details": [
                    "/key_id: Key id cannot be null"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "This feature has not been enabled in your account."
                }
              }
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "Entity not found"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "get": {
        "tags": [
          "Signature Key Management"
        ],
        "summary": "Get enabled signature key",
        "description": "Retrieve the currently enabled signature key.\n\nA successful request for the ```get enabled signature key``` endpoint will return a response body as follows:\n\n```json\n{\n    \"key_id\": \"7ca628a8-08b0-4e42-aeb8-960b37049c31\",\n    \"cipher\": \"RSA\",\n    \"digest\": \"SHA224\",\n    \"created\": \"2018-01-18T10:16:12.364Z\",\n    \"enabled\": true\n}\n```\n\n*Note: If there is no enabled signature key, then an HTTP 404 Not Found response will be returned*",
        "operationId": "GetEnabledSignatureKey",
        "responses": {
          "200": {
            "description": "The detail of signature key.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getenabledsignaturekeyresponse"
                },
                "example": {
                  "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
                  "cipher": "RSA",
                  "digest": "SHA224",
                  "created": "2018-01-18T10:16:12.364Z",
                  "enabled": true
                }
              }
            }
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "This feature has not been enabled in your account."
                }
              }
            }
          },
          "404": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "Currently no key is enabled"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      },
      "delete": {
        "tags": [
          "Signature Key Management"
        ],
        "summary": "Disable the current enabled signature key.",
        "description": "Disable the current enabled signature key.\n\nA successful request for the ```disable the current enabled signature key.``` endpoint will return no content when successful.\nIf there is an enabled key, it will be disabled; and the 204 status code is returned.\nIf there is no key or no enabled key, the 204 status code is also returned.",
        "operationId": "DisableTheCurrentEnabledSignatureKey.",
        "responses": {
          "204": {
            "description": "",
            "headers": {}
          },
          "403": {
            "description": "Unexpected error in API call. See HTTP response body for details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Disablethecurrentenabledsignaturekey.403response"
                },
                "example": {
                  "message": "This feature has not been enabled in your account."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-code-samples": [
          {
            "lang": "C#",
            "source": ""
          },
          {
            "lang": "Java",
            "source": ""
          },
          {
            "lang": "JavaScript",
            "source": ""
          },
          {
            "lang": "PHP",
            "source": ""
          },
          {
            "lang": "Python",
            "source": ""
          },
          {
            "lang": "Ruby",
            "source": ""
          }
        ]
      }
    },
    "/beta/smsplus/campaigns": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Create New Campaign",
        "description": "Mobile Landing Pages Campaigns belonging to the user.Create a new campaign.",
        "operationId": "CreateNewCampaign",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              },
              "example": {
                "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
                "parameters": {
                  "pageTitle": "The page title",
                  "pageText": "The body text",
                  "imageUrl": "https://example.com/image.jpg",
                  "secondaryImageUrl": "https://www.example.com/optional_secondary_image.jpg",
                  "buttonLink": "https://example.com/",
                  "buttonText": "Call to Action Button Text",
                  "secondaryButtonLink": "https://example.com/optional_secondary_button",
                  "secondaryButtonText": "Secondary Call to Action Button"
                },
                "message": {
                  "content": "Hello ${firstName} ${lastName}, this is the SMS message body",
                  "metadata": {
                    "key": "value"
                  }
                }
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Campaign was successfully created.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateNewCampaignresponse"
                },
                "example": {
                  "id": "a94041bb-704b-48fa-ba0b-6f1538fc502f",
                  "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
                  "parameters": {
                    "title": "This is a title",
                    "bodyText": "This is some body text",
                    "callToAction": "http://www.example.com/"
                  },
                  "message": {
                    "content": "This is the message.",
                    "metadata": {
                      "key": "value"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "402": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/campaigns/{id}": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Get Campaign",
        "description": "A single campaign, identified by a unique identifier.Returns the details of a single campaign.",
        "operationId": "GetCampaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignresponse"
                },
                "example": {
                  "id": "a94041bb-704b-48fa-ba0b-6f1538fc502f",
                  "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
                  "parameters": {
                    "title": "This is a title",
                    "bodyText": "This is some body text",
                    "callToAction": "http://www.example.com/"
                  },
                  "message": {
                    "content": "This is the message.",
                    "metadata": {
                      "key": "value"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/campaigns/{id}/recipients": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Send Campaign To Recipients",
        "description": "Sends a campaign message to a group of recipients.",
        "operationId": "SendCampaignToRecipients",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendCampaignToRecipientsrequest"
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "202": {
            "description": "The message recipients have successfully been queued for delivery.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendCampaignToRecipientsresponse"
                },
                "example": {
                  "recipients": [
                    {
                      "id": "05f81030-95fb-4c17-8736-ac73948e8b82",
                      "number": 61491570156,
                      "parameters": {
                        "firstName": "John",
                        "lastName": "English"
                      }
                    },
                    {
                      "id": "01261663-9428-4a1d-9798-e8a1877cc29d",
                      "number": 61491570158,
                      "parameters": {
                        "firstName": "Mary",
                        "lastName": "Example"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/landing_pages": {
      "post": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Create a Landing Page",
        "description": "The Landing Page datastore makes it easier to create Campiangs based on the saved data.Create a Landing Page.",
        "operationId": "CreateaLandingPage",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLandingPage"
              },
              "example": {
                "name": " My Landing Page",
                "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
                "parameters": {
                  "pageTitle": "The page title",
                  "pageText": "The body text",
                  "imageUrl": "https://example.com/image.jpg"
                },
                "fields": {
                  "title": {
                    "type": "TEXT"
                  },
                  "bodyText": {
                    "type": "TEXT"
                  },
                  "ctaUrl": {
                    "type": "URL"
                  }
                }
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "201": {
            "description": "Landing Page was successfully created.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateaLandingPageresponse"
                },
                "example": {
                  "id": "a94041bb-704b-48fa-ba0b-6f1538fc502f",
                  "name": " My Landing Page",
                  "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
                  "parameters": {
                    "title": "This is a ${title}",
                    "bodyText": "This is some ${bodyText}",
                    "callToAction": "${ctaUrl}"
                  },
                  "fields": {
                    "title": {
                      "type": "TEXT"
                    },
                    "bodyText": {
                      "type": "TEXT"
                    },
                    "ctaUrl": {
                      "type": "URL"
                    }
                  },
                  "created_timestamp": "2019-11-03T11:49:02.807Z",
                  "modified_timestamp": "2019-11-03T11:49:02.807Z"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "402": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Get Landing Pages",
        "description": "The Landing Page datastore makes it easier to create Campiangs based on the saved data.Returns a paginated list of Landing Pages for your account. ```sort_by``` and ```sort_direction``` must both be specified or neither at all (the default sort options are ```DESCENDING``` ```MODIFIED_TIMESTAMP```).",
        "operationId": "GetLandingPages",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Page size between 5 and 100 (default 20)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Token to fetch the next page",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Can be `CREATED_TIMESTAMP` or `UPDATED_TIMESTAMP`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Can be `ASCENDING` or `DESCENDING`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "402": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/landing_pages/{id}": {
      "patch": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Update a Landing Page",
        "description": "The Landing Page datastore makes it easier to create Campiangs based on the saved data.Update a Landing Page.",
        "operationId": "UpdateaLandingPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLandingPage"
              },
              "example": {
                "parameters": {
                  "pageTitle": "The new page title",
                  "pageText": "The new body text",
                  "imageUrl": "https://example.com/image.jpg"
                }
              }
            }
          },
          "required": true,
          "x-send-file-in-body": false
        },
        "responses": {
          "202": {
            "description": "Landing Page was successfully updated.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateaLandingPageresponse"
                },
                "example": {
                  "id": "a94041bb-704b-48fa-ba0b-6f1538fc502f",
                  "name": " My Landing Page",
                  "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
                  "parameters": {
                    "pageTitle": "The new page title",
                    "pageText": "The new body text",
                    "callToAction": "${ctaUrl}"
                  },
                  "fields": {
                    "title": {
                      "type": "TEXT"
                    },
                    "bodyText": {
                      "type": "TEXT"
                    },
                    "ctaUrl": {
                      "type": "URL"
                    }
                  },
                  "created_timestamp": "2019-11-03T11:49:02.807Z",
                  "modified_timestamp": "2019-11-04T11:49:02.807Z"
                }
              }
            }
          },
          "400": {
            "description": ""
          },
          "402": {
            "description": ""
          }
        },
        "deprecated": false
      },
      "delete": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Delete a Landing Page",
        "description": "The Landing Page datastore makes it easier to create Campiangs based on the saved data.Delete a Landing Page.",
        "operationId": "DeleteaLandingPage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Landing Page deleted.",
            "headers": {}
          },
          "402": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/reporting/{campaign_id}/summary": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Get Campaign Summary",
        "description": "The reporting endpoint provides access to the reporting analytics.\n\n### Events Types\n\nThe campaign report consists of a series of events, that were generated by recipients when\ninteracting with the generated mobile landing page.  The set of events that are currently supported\nare as follows:\n\n| Event Type        | Event Source | Description                                    |\n|:------------------|:-------------|:-----------------------------------------------|\n| `PAGE_OPEN`       | n/a          | The page was opened in a browser.              |\n| `BUTTON_CLICKED`  | Button label | One of the Call to Action buttons was clicked. |\n| `FORM_SUBMITTED`  | n/a          | A form has been submitted with the captured data stored in the 'data' field. |Returns the breakdown of events and recipients of a particular campaign.\n\nThis will contain the following bits of information:\n\n- The total number of events recorded for the particular campaign.\n\n- The number of unique engagements.  This is the number of recipients for which there exists at least one recorded event.\n\n- A breakdown of the number of the total number of events grouped by the event type and event source\n\nThe event breakdown will return the following information for each event and source type:\n\n- The total number of recorded events of that type and source\n\n- The number of unique recipients for which that event and source was recorded for at least once\n\nFor example, if a recipient opened the landing page three times, the number of recorded events will be 3 but the number of unique recipients will be 1.",
        "operationId": "GetCampaignSummary",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The campaign ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignSummary"
                },
                "example": {
                  "total_events": 24,
                  "unique_engagements": 9,
                  "event_summary": [
                    {
                      "event": "PAGE_OPEN",
                      "total_events": 8,
                      "unique_recipients": 6
                    },
                    {
                      "event": "BUTTON_CLICK",
                      "source": "OK",
                      "total_events": 12,
                      "unique_recipients": 8
                    },
                    {
                      "event": "BUTTON_CLICK",
                      "source": "Cancel",
                      "total_events": 4,
                      "unique_recipients": 1
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/reporting/{campaign_id}/events": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Get Campaign Events",
        "description": "The reporting endpoint provides access to the reporting analytics.\n\n### Events Types\n\nThe campaign report consists of a series of events, that were generated by recipients when\ninteracting with the generated mobile landing page.  The set of events that are currently supported\nare as follows:\n\n| Event Type        | Event Source | Description                                    |\n|:------------------|:-------------|:-----------------------------------------------|\n| `PAGE_OPEN`       | n/a          | The page was opened in a browser.              |\n| `BUTTON_CLICKED`  | Button label | One of the Call to Action buttons was clicked. |\n| `FORM_SUBMITTED`  | n/a          | A form has been submitted with the captured data stored in the 'data' field. |Returns a list of events that have occurred for a particular campaign.\n\nAt this stage, the events are returned in reverse chronological order.",
        "operationId": "GetCampaignEvents",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The campaign ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to retrieve.  If unspecified, defaults to 0.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The size of each page.  Must be between 5 and 100.  Defaults to 25.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCampaignEventPage"
                }
              }
            }
          },
          "402": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/reporting/{campaign_id}/events/async": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Export Campaign Events Async",
        "description": "The reporting endpoint provides access to the reporting analytics.\n\n### Events Types\n\nThe campaign report consists of a series of events, that were generated by recipients when\ninteracting with the generated mobile landing page.  The set of events that are currently supported\nare as follows:\n\n| Event Type        | Event Source | Description                                    |\n|:------------------|:-------------|:-----------------------------------------------|\n| `PAGE_OPEN`       | n/a          | The page was opened in a browser.              |\n| `BUTTON_CLICKED`  | Button label | One of the Call to Action buttons was clicked. |\n| `FORM_SUBMITTED`  | n/a          | A form has been submitted with the captured data stored in the 'data' field. |Produces an unpaginated CSV file of events that have occurred for a particular campaign and emails them to the specified address(es).\n\nAt this stage, the events are returned in reverse chronological order.",
        "operationId": "ExportCampaignEventsAsync",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The campaign ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "headers": {}
          },
          "402": {
            "description": ""
          },
          "404": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/templates": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Get Templates",
        "description": "Returns a paginated list of Template.",
        "operationId": "GetTemplates",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Page size between 5 and 100 (default 20)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "description": "Token to fetch the next page",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplatesresponse"
                },
                "example": {
                  "templates": [
                    {
                      "id": "c9d7ce1d-20c4-4228-9ba1-6da2a3b4e5e0",
                      "name": "Header image and 1 or 2 CTA"
                    },
                    {
                      "id": "f56b5806-f732-4693-b87a-90b66a7d7bfc",
                      "name": "Header Image and 1 CTA"
                    },
                    {
                      "id": "7614456e-844f-4d83-bdfe-20c17ce0f97c",
                      "name": "Background image and 0 or 1 CTA"
                    }
                  ],
                  "pagination": {
                    "next_page_token": "qwerty123",
                    "page_size": 5
                  }
                }
              }
            }
          },
          "402": {
            "description": ""
          }
        },
        "deprecated": false
      }
    },
    "/beta/smsplus/templates/{id}/fields": {
      "get": {
        "security": [
          {
            "basic_auth": []
          },
          {
            "hmac_auth": []
          }
        ],
        "tags": [
          "Mobile Landing Pages (beta)"
        ],
        "summary": "Get Templates Fields Defination",
        "description": "Returns a list of Template Field Definition.",
        "operationId": "GetTemplatesFieldsDefination",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Template Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of template parameters required in this template",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplatesFieldsDefinationresponse"
                },
                "example": {
                  "fields": {
                    "fontFamilyURL1": {
                      "type": "TEXT"
                    },
                    "secondaryButtonTextColor": {
                      "type": "TEXT"
                    },
                    "fontFamilyURL3": {
                      "type": "TEXT"
                    },
                    "pageTitle": {
                      "type": "TEXT"
                    },
                    "fontFamilyURL2": {
                      "type": "TEXT"
                    },
                    "pageTextColor": {
                      "type": "TEXT"
                    },
                    "barcodeHeight": {
                      "type": "TEXT"
                    },
                    "imageHeaderUrl": {
                      "type": "IMAGE"
                    },
                    "barcodeMargin": {
                      "type": "TEXT"
                    },
                    "logoLink": {
                      "type": "TEXT"
                    },
                    "primaryButtonLink": {
                      "type": "TEXT"
                    },
                    "primaryButtonBackgroundColor": {
                      "type": "TEXT"
                    },
                    "secondaryButtonLink": {
                      "type": "TEXT"
                    },
                    "barcodeWidth": {
                      "type": "TEXT"
                    },
                    "primaryButtonText": {
                      "type": "TEXT"
                    },
                    "headline": {
                      "type": "TEXT"
                    },
                    "headlineColor": {
                      "type": "TEXT"
                    },
                    "pageText": {
                      "type": "TEXT"
                    },
                    "secondaryButtonBackgroundColor": {
                      "type": "TEXT"
                    },
                    "imageLinkPreviewUrl": {
                      "type": "TEXT"
                    },
                    "pageTextFontFamily": {
                      "type": "TEXT"
                    },
                    "secondaryButtonText": {
                      "type": "TEXT"
                    },
                    "headlineFontFamily": {
                      "type": "TEXT"
                    },
                    "barcodeLineColor": {
                      "type": "TEXT"
                    },
                    "barcodeValue": {
                      "type": "TEXT"
                    },
                    "primaryButtonTextColor": {
                      "type": "TEXT"
                    },
                    "imageLogoUrl": {
                      "type": "TEXT"
                    },
                    "barcodeDisplayValue": {
                      "type": "TEXT"
                    },
                    "buttonFontFamily": {
                      "type": "TEXT"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Account is not postpaid, or does not have Mobile Landing Pages Enabled."
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "Confirmdeliveryreportsasreceivedrequest": {
        "title": "Confirmeliveryreportsasreceivedrequest",
        "required": [
          "delivery_report_ids"
        ],
        "type": "object",
        "properties": {
          "delivery_report_ids": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of unique IDs for the delivery report that this notification represents"
          }
        },
        "example": {
          "delivery_report_ids": [
            "011dcead-6988-4ad6-a1c7-6b6c68ea628d",
            "3487b3fa-6586-4979-a233-2d1b095c7718",
            "ba28e94b-c83d-4759-98e7-ff9c7edb87a1"
          ]
        }
      },
      "Checkdeliveryreportsresponse": {
        "title": "Checkdeliveryreportsresponse",
        "type": "object",
        "properties": {
          "delivery_reports": {
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveryReport"
            },
            "description": "The oldest 100 unconfirmed delivery reports"
          }
        },
        "example": {
          "delivery_reports": [
            {
              "callback_url": "https://my.callback.url.com",
              "delivery_report_id": "01e1fa0a-6e27-4945-9cdb-18644b4de043",
              "source_number": "+61491570157",
              "date_received": "2017-05-20T06:30:37.642Z",
              "status": "enroute",
              "delay": 0,
              "submitted_date": "2017-05-20T06:30:37.639Z",
              "original_text": "My first message!",
              "message_id": "d781dcab-d9d8-4fb2-9e03-872f07ae94ba",
              "vendor_account_id": {
                "vendor_id": "MessageMedia",
                "account_id": "MyAccount"
              },
              "metadata": {
                "key1": "value1",
                "key2": "value2"
              }
            },
            {
              "callback_url": "https://my.callback.url.com",
              "delivery_report_id": "0edf9022-7ccc-43e6-acab-480e93e98c1b",
              "source_number": "+61491570158",
              "date_received": "2017-05-21T01:46:42.579Z",
              "status": "submitted",
              "delay": 0,
              "submitted_date": "2017-05-21T01:46:42.574Z",
              "original_text": "My second message!",
              "message_id": "fbb3b3f5-b702-4d8b-ab44-65b2ee39a281",
              "vendor_account_id": {
                "vendor_id": "MessageMedia",
                "account_id": "MyAccount"
              },
              "metadata": {
                "key1": "value1",
                "key2": "value2"
              }
            }
          ]
        }
      },
      "Confirmrepliesasreceivedrequest": {
        "title": "Confirmrepliesasreceivedrequest",
        "required": [
          "reply_ids"
        ],
        "type": "object",
        "properties": {
          "reply_ids": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The UUID of the *reply* to be confirmed (note: not the UUID of the message it is in response to)"
          }
        },
        "example": {
          "reply_ids": [
            "011dcead-6988-4ad6-a1c7-6b6c68ea628d",
            "3487b3fa-6586-4979-a233-2d1b095c7718",
            "ba28e94b-c83d-4759-98e7-ff9c7edb87a1"
          ]
        }
      },
      "VendorAccountId": {
        "title": "VendorAccountId",
        "type": "object",
        "properties": {
          "vendor_id": {
            "type": "string",
            "example": "MessageMedia"
          },
          "account_id": {
            "type": "string",
            "description": "The account used to submit the original message.",
            "example": "MyAccount001"
          }
        }
      },
      "Checkrepliesresponse": {
        "title": "Checkrepliesresponse",
        "type": "object",
        "properties": {
          "replies": {
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reply"
            },
            "description": "The oldest 100 unconfirmed replies"
          }
        },
        "example": {
          "replies": [
            {
              "metadata": {
                "key1": "value1",
                "key2": "value2"
              },
              "message_id": "877c19ef-fa2e-4cec-827a-e1df9b5509f7",
              "reply_id": "a175e797-2b54-468b-9850-41a3eab32f74",
              "date_received": "2016-12-07T08:43:00.850Z",
              "callback_url": "https://my.callback.url.com",
              "destination_number": "+61491570156",
              "source_number": "+61491570157",
              "vendor_account_id": {
                "vendor_id": "MessageMedia",
                "account_id": "MyAccount"
              },
              "content": "My first reply!"
            },
            {
              "metadata": {
                "key1": "value1",
                "key2": "value2"
              },
              "message_id": "8f2f5927-2e16-4f1c-bd43-47dbe2a77ae4",
              "reply_id": "3d8d53d8-01d3-45dd-8cfa-4dfc81600f7f",
              "date_received": "2016-12-07T08:43:00.850Z",
              "callback_url": "https://my.callback.url.com",
              "destination_number": "+61491570157",
              "source_number": "+61491570158",
              "vendor_account_id": {
                "vendor_id": "MessageMedia",
                "account_id": "MyAccount"
              },
              "content": "My second reply!"
            }
          ]
        }
      },
      "SourceNumberType": {
        "title": "SourceNumberType",
        "enum": [
          "INTERNATIONAL",
          "ALPHANUMERIC",
          "SHORTCODE"
        ],
        "type": "string",
        "description": "Type of source address specified, this can be INTERNATIONAL, ALPHANUMERIC or SHORTCODE",
        "example": "INTERNATIONAL"
      },
      "Cancelscheduledmessagerequest": {
        "title": "Cancelscheduledmessagerequest",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "cancelled",
            "description": "Must be set to ```cancelled```."
          }
        },
        "example": {
          "status": "cancelled"
        }
      },
      "400response": {
        "title": "Bad request",
        "required": [
          "message",
          "details"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "message": "Request failed to parse correctly. Please ensure input is valid and try again.",
          "details": [
            "Failed to parse message body."
          ]
        }
      },
      "Sendmessagesrequest": {
        "title": "Sendmessagesrequest",
        "required": [
          "messages"
        ],
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": ""
          }
        },
        "example": {
          "messages": [
            {
              "callback_url": "https://my.callback.url.com",
              "content": "My first message",
              "destination_number": "+61491570156",
              "delivery_report": true,
              "format": "SMS",
              "message_expiry_timestamp": "2016-11-03T11:49:02.807Z",
              "metadata": {
                "key1": "value1",
                "key2": "value2"
              },
              "scheduled": "2016-11-03T11:49:02.807Z",
              "source_number": "+61491570157",
              "source_number_type": "INTERNATIONAL"
            },
            {
              "callback_url": "https://my.callback.url.com",
              "content": "My second message",
              "destination_number": "+61491570158",
              "delivery_report": true,
              "format": "MMS",
              "subject": "This is an MMS message",
              "media": [
                "https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg"
              ],
              "message_expiry_timestamp": "2016-11-03T11:49:02.807Z",
              "metadata": {
                "key1": "value1",
                "key2": "value2"
              },
              "scheduled": "2016-11-03T11:49:02.807Z",
              "source_number": "+61491570159",
              "source_number_type": "INTERNATIONAL"
            }
          ]
        }
      },
      "Reply": {
        "title": "Reply",
        "type": "object",
        "properties": {
          "callback_url": {
            "type": "string",
            "description": "The URL specified as the callback URL in the original submit message request",
            "example": "https://my.url.com"
          },
          "content": {
            "maxLength": 5000,
            "minLength": 1,
            "type": "string",
            "description": "Content of the reply",
            "example": "Hello back"
          },
          "date_received": {
            "type": "string",
            "description": "Date time when the reply was received",
            "format": "date-time",
            "example": "11/3/2016 11:49:02 AM"
          },
          "destination_number": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string",
            "description": "Address from which this reply was sent to",
            "example": "+61491570156"
          },
          "message_id": {
            "type": "string",
            "description": "Unique ID of the original message",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "description": "Any metadata that was included in the original submit message request"
          },
          "reply_id": {
            "type": "string",
            "description": "Unique ID of this reply",
            "format": "uuid"
          },
          "source_number": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string",
            "description": "Address from which this reply was received from",
            "example": "+61491570156"
          },
          "vendor_account_id": {
            "$ref": "#/components/schemas/VendorAccountId"
          }
        }
      },
      "DeliveryReport": {
        "title": "DeliveryReport",
        "type": "object",
        "properties": {
          "callback_url": {
            "type": "string",
            "description": "The URL specified as the callback URL in the original submit message request",
            "example": "https://my.url.com"
          },
          "date_received": {
            "type": "string",
            "description": "The date and time at which this delivery report was generated in UTC.",
            "format": "date-time",
            "example": "11/3/2016 11:49:02 AM"
          },
          "delay": {
            "type": "integer",
            "description": "Deprecated, no longer in use",
            "format": "int32",
            "example": 0
          },
          "delivery_report_id": {
            "type": "string",
            "description": "Unique ID for this delivery report",
            "format": "uuid"
          },
          "message_id": {
            "type": "string",
            "description": "Unique ID of the original message",
            "format": "uuid"
          },
          "metadata": {
            "type": "object",
            "description": "Any metadata that was included in the original submit message request"
          },
          "original_text": {
            "type": "string",
            "description": "Text of the original message.",
            "example": "Hello back"
          },
          "source_number": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string",
            "description": "Address from which this delivery report was received",
            "example": "+61491570156"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "submitted_date": {
            "type": "string",
            "description": "The date and time when the message status changed in UTC. For a delivered DR this may indicate the time at which the message was received on the handset.",
            "format": "date-time",
            "example": "11/3/2016 11:49:02 AM"
          },
          "vendor_account_id": {
            "$ref": "#/components/schemas/VendorAccountId"
          }
        }
      },
      "Getmessagestatusresponse": {
        "title": "Getmessagestatusresponse",
        "type": "object",
        "properties": {
          "callback_url": {
            "type": "string",
            "description": "URL replies and delivery reports to this message will be pushed to",
            "example": "https://my.url.com"
          },
          "content": {
            "maxLength": 5000,
            "minLength": 1,
            "type": "string",
            "description": "Content of the message",
            "example": "Hello world!"
          },
          "destination_number": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string",
            "description": "Destination number of the message",
            "example": "+61491570156"
          },
          "delivery_report": {
            "type": "boolean",
            "description": "Request a delivery report for this message",
            "example": false
          },
          "format": {
            "$ref": "#/components/schemas/Format"
          },
          "message_expiry_timestamp": {
            "type": "string",
            "description": "Date time after which the message expires and will not be sent",
            "format": "date-time",
            "example": "11/3/2016 11:49:02 AM"
          },
          "metadata": {
            "type": "object",
            "description": "Metadata for the message specified as a set of key value pairs, each key can be up to 100 characters long and each value can be up to 256 characters long\n```\n{\n   \"myKey\": \"myValue\",\n   \"anotherKey\": \"anotherValue\"\n}\n```"
          },
          "scheduled": {
            "type": "string",
            "description": "Scheduled delivery date time of the message",
            "format": "date-time",
            "example": "11/3/2016 11:49:02 AM"
          },
          "source_number": {
            "type": "string",
            "example": "+61491570156"
          },
          "source_number_type": {
            "$ref": "#/components/schemas/SourceNumberType"
          },
          "message_id": {
            "type": "string",
            "description": "Unique ID of this message",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        }
      },
      "Getnumberauthorisationblacklistresponse": {
        "title": "Getnumberauthorisationblacklistresponse",
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "description": "URL of the current API call, used to show the current pagination token for calls subsequent to the first one in the case of paginated data.",
            "example": "/v1/number_authorisation/mt/blacklist\""
          },
          "numbers": {
            "type": "array",
            "description": "List of numbers belonging to the blacklist.",
            "items": {
              "type": "string"
            },
            "example": [
              "+61491570156",
              "+61491570157"
            ]
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationNumberAuth"
          }
        }
      },
      "404response": {
        "title": "Resource not found",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Resource not found."
        }
      },
      "Status": {
        "title": "Status",
        "enum": [
          "enroute",
          "submitted",
          "delivered",
          "expired",
          "rejected",
          "undeliverable",
          "queued",
          "processed",
          "cancelled",
          "scheduled",
          "failed"
        ],
        "type": "string",
        "description": "The status of the message",
        "example": "enroute"
      },
      "Message": {
        "title": "Message",
        "required": [
          "content",
          "destination_number"
        ],
        "type": "object",
        "properties": {
          "callback_url": {
            "type": "string",
            "description": "URL replies and delivery reports to this message will be pushed to",
            "example": "https://my.url.com"
          },
          "content": {
            "maxLength": 5000,
            "minLength": 1,
            "type": "string",
            "description": "Content of the message",
            "example": "Hello world!"
          },
          "destination_number": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string",
            "description": "Destination number of the message",
            "example": "+61491570156"
          },
          "delivery_report": {
            "type": "boolean",
            "description": "Request a delivery report for this message",
            "example": false
          },
          "format": {
            "$ref": "#/components/schemas/Format"
          },
          "message_expiry_timestamp": {
            "type": "string",
            "description": "Date time after which the message expires and will not be sent",
            "format": "date-time",
            "example": "11/3/2016 11:49:02 AM"
          },
          "metadata": {
            "type": "object",
            "description": "Metadata for the message specified as a set of key value pairs, each key can be up to 100 characters long and each value can be up to 256 characters long\n```\n{\n   \"myKey\": \"myValue\",\n   \"anotherKey\": \"anotherValue\"\n}\n```"
          },
          "scheduled": {
            "type": "string",
            "description": "Scheduled delivery date time of the message",
            "format": "date-time",
            "example": "11/3/2016 11:49:02 AM"
          },
          "source_number": {
            "type": "string",
            "example": "+61491570156"
          },
          "source_number_type": {
            "$ref": "#/components/schemas/SourceNumberType"
          },
          "message_id": {
            "type": "string",
            "description": "Unique ID of this message",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "media": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The media is used to specify a list of URLs of the media file(s) that you are trying to send. Supported file formats include png, jpeg and gif. format parameter must be set to MMS for this to work.",
            "example": [
              "https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg"
            ]
          },
          "subject": {
            "type": "string",
            "description": "The subject field is used to denote subject of the MMS message and has a maximum size of 64 characters long"
          }
        }
      },
      "Sendmessagesresponse": {
        "title": "Sendmessagesresponse",
        "type": "object",
        "properties": {
          "messages": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": ""
          }
        }
      },
      "Format": {
        "title": "Format",
        "enum": [
          "SMS",
          "TTS",
          "MMS"
        ],
        "type": "string",
        "description": "Format of message, SMS or TTS (Text To Speech).",
        "example": "SMS"
      },
      "Lookupaphonenumberresponse": {
        "title": "Lookupaphonenumberresponse",
        "required": [
          "country_code",
          "phone_number",
          "type",
          "carrier",
          "result",
          "imsi",
          "location"
        ],
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "carrier": {
            "$ref": "#/components/schemas/Carrier"
          },
          "result": {
            "type": "string",
            "example": "\"OK\""
          },
          "imsi": {
            "type": "integer",
            "description": "A unique number identifying a GSM subscriber",
            "format": "int64",
            "example": 24008
          },
          "location": {
            "type": "integer",
            "description": "The location of the mobile number",
            "format": "int32",
            "example": 46
          }
        },
        "example": {
          "country_code": "AU",
          "phone_number": 61491570156,
          "type": "mobile",
          "carrier": {
            "name": "Telstra"
          }
        }
      },
      "Carrier": {
        "title": "Carrier",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Lookupaphonenumber404response": {
        "title": "Lookupaphonenumber404response",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "The number could not be found or is invalid."
        }
      },
      "MetadataKeysResponse": {
        "title": "MetadataKeysResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "properties": {
            "$ref": "#/components/schemas/Properties"
          }
        },
        "description": "Metadata key response",
        "example": {
          "data": [],
          "properties": {
            "end_date": "2017-02-10T13:30:00.000Z",
            "start_date": "2017-02-12T13:30:00.000Z",
            "accounts": []
          }
        }
      },
      "Properties": {
        "title": "Properties",
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-10T13:30:00.000Z"
          },
          "start_date": {
            "type": "string",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of accounts that were considered when fetching the metadata keys."
          }
        }
      },
      "deliveryOptionsBody": {
        "title": "deliveryOptionsBody",
        "type": "object",
        "properties": {
          "delivery_type": {
            "type": "string",
            "description": "How to deliver the report.",
            "example": "EMAIL"
          },
          "delivery_addresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of email addresses to use as the recipient of the email. Only works for EMAIL delivery type"
          },
          "delivery_format": {
            "type": "string",
            "description": "Format of the report.",
            "example": "CSV"
          }
        },
        "description": "A delivery option"
      },
      "PaginationNumberAuth": {
        "title": "Pagination",
        "type": "object",
        "properties": {
          "page": {
            "type": "string",
            "description": "The pagination token of the next set of results.",
            "example": "0"
          },
          "next_uri": {
            "type": "string",
            "description": "The uri pointing to the next set of results.",
            "example": "/v1/number_authorisation/mt/blacklist?token=0"
          }
        }
      },
      "Pagination": {
        "title": "Pagination",
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "description": "The current page of results"
          },
          "page_size": {
            "type": "number",
            "description": "The amount of results returned per page"
          },
          "total_count": {
            "type": "number",
            "description": "The total number of results in the results set"
          },
          "page_count": {
            "type": "number",
            "description": "The total number of pages in the results set"
          },
          "next_uri": {
            "type": "string",
            "description": "Link to the next page of results"
          },
          "previous_uri": {
            "type": "string",
            "description": "Link to the previous page of results"
          }
        }
      },
      "ReportingDetailProperties": {
        "title": "ReportingDetailProperties",
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-10T13:30:00.000Z"
          },
          "start_date": {
            "type": "string",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "timezone": {
            "type": "string",
            "example": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
          }
        }
      },
      "Sorting": {
        "title": "Sorting",
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/field"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          }
        }
      },
      "Filters": {
        "title": "Filters",
        "type": "object",
        "properties": {
          "delivery_report": {
            "type": "string"
          },
          "destination_address_country": {
            "type": "string"
          },
          "destination_address": {
            "type": "string"
          },
          "message_format": {
            "type": "string"
          },
          "metadata_key": {
            "type": "string"
          },
          "metadata_value": {
            "type": "string"
          },
          "source_address_country": {
            "type": "string"
          },
          "source_address": {
            "type": "string"
          },
          "status_code": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of accounts that were used to generate this report"
          }
        }
      },
      "AsyncReport": {
        "title": "AsyncReport",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for this reply"
          },
          "message_type": {
            "$ref": "#/components/schemas/message_type"
          },
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "report_status": {
            "$ref": "#/components/schemas/report_status"
          },
          "created_datetime": {
            "type": "string",
            "description": "Date time at which this report was created.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "last_modified_datetime": {
            "type": "string",
            "description": "Date time at which this report was last modified.",
            "example": "2017-02-12T13:30:00.000Z"
          }
        },
        "example": {
          "created_datetime": "2017-02-12T13:30:00.000Z",
          "last_modified_datetime": "2017-02-12T13:30:00.000Z"
        }
      },
      "ReceivedMessage": {
        "title": "ReceivedMessage",
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Account associated with this message",
            "example": "MyAccount001"
          },
          "action": {
            "$ref": "#/components/schemas/action"
          },
          "content": {
            "type": "string",
            "description": "Content of the message",
            "example": "Hello back"
          },
          "destination_address": {
            "type": "string",
            "description": "Address this message was delivered to. If this message was received in response to a sent message, this is the source address of the sent message",
            "example": 61491570156
          },
          "destination_address_country": {
            "type": "string",
            "description": "Country associated with the destination address",
            "example": "AU"
          },
          "format": {
            "$ref": "#/components/schemas/format"
          },
          "id": {
            "type": "string",
            "description": "Unique ID for this reply"
          },
          "in_response_to": {
            "type": "string",
            "description": "If this message was received in response to a sent message, this is the ID of the sent message"
          },
          "metadata": {
            "type": "object",
            "description": "If this message was received in response to a sent message, this is the metadata associated with the sent message"
          },
          "source_address": {
            "type": "string",
            "description": "Address this message was received from. If this message was received in response to a sent message, this is the destination address of the sent message.",
            "example": 61491570156
          },
          "source_address_country": {
            "type": "string",
            "description": "Country associated with the source address",
            "example": "AU"
          },
          "timestamp": {
            "type": "string",
            "description": "Date time at which this message was received",
            "example": "2017-02-12T13:30:00.000Z"
          }
        },
        "description": "A message received for the account specified. This message may be in response to a sent message, or it may be an unsolicited message, matched to the account by the destination address."
      },
      "ReceivedMessages": {
        "title": "ReceivedMessages",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReceivedMessage"
            },
            "description": "List of received messages"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "properties": {
            "$ref": "#/components/schemas/ReportingDetailProperties"
          }
        },
        "example": {
          "data": [
            {
              "account": "MyAccount001",
              "action": "MyAccount001",
              "content": "Hello back",
              "destination_address": 61491570156,
              "destination_address_country": "AU",
              "format": "AU",
              "source_address": 61491570156,
              "source_address_country": "AU",
              "timestamp": "2017-02-12T13:30:00.000Z"
            }
          ],
          "pagination": {},
          "properties": {
            "end_date": "2017-02-10T13:30:00.000Z",
            "start_date": "2017-02-12T13:30:00.000Z",
            "sorting": {},
            "filters": {
              "accounts": []
            },
            "timezone": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
          }
        }
      },
      "SentMessage": {
        "title": "SentMessage",
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Account associated with this message",
            "example": "MyAccount001"
          },
          "content": {
            "type": "string",
            "description": "Content of the message",
            "example": "Hello world!"
          },
          "delivered_timestamp": {
            "type": "string",
            "description": "If a delivery report was requested for this message, this is the time at which the message was delivered (or failed to be delivered) to the destination address.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "delivery_report": {
            "type": "boolean",
            "description": "Indicates if a delivery report was requested for this message"
          },
          "destination_address": {
            "type": "string",
            "description": "Address this message was delivered to",
            "example": 61491570156
          },
          "destination_address_country": {
            "type": "string",
            "description": "Country associated with the destination address",
            "example": "AU"
          },
          "format": {
            "$ref": "#/components/schemas/format"
          },
          "id": {
            "type": "string",
            "description": "Unique ID for this message"
          },
          "in_response_to": {
            "type": "string",
            "description": "If this message was sent in response to a received message (an auto response message for example) this is the ID of the received message."
          },
          "metadata": {
            "type": "object",
            "description": "Metadata associated with this message"
          },
          "source_address": {
            "type": "string",
            "description": "Address this message was sent from",
            "example": 61491570156
          },
          "source_address_country": {
            "type": "string",
            "description": "Country associated with the source address",
            "example": "AU"
          },
          "units": {
            "type": "number",
            "description": "The total number of calculated SMS units this message cost. 1 SMS unit is defined as 160 GSM characters, or 153 GSM characters for multi-part messages as some characters are used to concatenate the message on the receiving handset.\n\nMessages with one or more non-GSM characters will be submitted using UCS-2 encoding. UCS-2 encoding means the message has a maximum of 70 characters per SMS, or 67 characters for multi-part messages.",
            "example": 2
          },
          "timestamp": {
            "type": "string",
            "description": "Date time at which this message was submitted to the API, refer to the delivered timestamp for the time at which the message was delivered (or failed to be delivered) to the destination address.",
            "example": "2017-02-12T13:30:00.000Z"
          }
        }
      },
      "SentMessages": {
        "title": "SentMessages",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SentMessage"
            },
            "description": "List of sent messages"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "properties": {
            "$ref": "#/components/schemas/ReportingDetailProperties"
          }
        },
        "example": {
          "data": [
            {
              "account": "MyAccount001",
              "content": "Hello world!",
              "delivered_timestamp": "2017-02-12T13:30:00.000Z",
              "destination_address": 61491570156,
              "destination_address_country": "AU",
              "format": "AU",
              "source_address": 61491570156,
              "source_address_country": "AU",
              "units": 2,
              "timestamp": "2017-02-12T13:30:00.000Z"
            }
          ],
          "pagination": {},
          "properties": {
            "end_date": "2017-02-10T13:30:00.000Z",
            "start_date": "2017-02-12T13:30:00.000Z",
            "sorting": {},
            "filters": {
              "accounts": []
            },
            "timezone": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
          }
        }
      },
      "AsyncReportResponse": {
        "title": "AsyncReportResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier for this async report",
            "example": "b8ffd5b3-050a-46b9-9192-fbd7c20a22ec"
          }
        },
        "example": {
          "id": "b8ffd5b3-050a-46b9-9192-fbd7c20a22ec"
        }
      },
      "SummaryReport": {
        "title": "SummaryReport",
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/Properties33"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SummaryReportItem"
            },
            "description": ""
          }
        },
        "example": {
          "properties": {
            "end_date": "2017-02-10T13:30:00.000Z",
            "start_date": "2017-02-12T13:30:00.000Z",
            "timezone": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
          },
          "data": [
            {}
          ]
        }
      },
      "Properties33": {
        "title": "Properties33",
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-10T13:30:00.000Z"
          },
          "start_date": {
            "type": "string",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "filters": {
            "type": "object",
            "description": "Any filters provided as parameters for this report"
          },
          "grouping": {
            "$ref": "#/components/schemas/grouping"
          },
          "summary": {
            "$ref": "#/components/schemas/summary"
          },
          "summary_field": {
            "$ref": "#/components/schemas/summary_field"
          },
          "timezone": {
            "type": "string",
            "example": "The timezone that this report is presented in, this may be passed in as a parameter to the report, or taken from account settings"
          }
        }
      },
      "SummaryReportItem": {
        "title": "SummaryReportItem",
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        }
      },
      "getAsyncReportsResponse": {
        "title": "getAsyncReportsResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncReport"
            },
            "description": "List of asynchronous reports"
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "example": {
          "data": [
            {
              "created_datetime": "2017-02-12T13:30:00.000Z",
              "last_modified_datetime": "2017-02-12T13:30:00.000Z"
            }
          ],
          "pagination": {}
        }
      },
      "asyncreceivedmessagesdetailrequest": {
        "title": "asyncreceivedmessagesdetailrequest",
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-10T13:30:00.000Z"
          },
          "start_date": {
            "type": "string",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "period": {
            "$ref": "#/components/schemas/period"
          },
          "sort_by": {
            "$ref": "#/components/schemas/sort_by"
          },
          "sort_direction": {
            "$ref": "#/components/schemas/sort_direction"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "example": "Australia/Melbourne"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts."
          },
          "destination_address_country": {
            "type": "string",
            "description": "Filter results by destination address country."
          },
          "destination_address": {
            "type": "string",
            "description": "Filter results by destination address."
          },
          "message_format": {
            "$ref": "#/components/schemas/format"
          },
          "metadata_key": {
            "type": "string",
            "description": "Filter results for messages that include a metadata key."
          },
          "metadata_value": {
            "type": "string",
            "description": "Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided."
          },
          "source_address_country": {
            "type": "string",
            "description": "Filter results by source address country."
          },
          "source_address": {
            "type": "string",
            "description": "Filter results by source address."
          },
          "action": {
            "$ref": "#/components/schemas/action"
          },
          "delivery_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryOptionsBody"
            },
            "description": "Delivery options for this asynchronous report."
          }
        },
        "example": {
          "end_date": "2017-02-10T13:30:00.000Z",
          "start_date": "2017-02-12T13:30:00.000Z",
          "period": "TODAY",
          "sort_by": "ACCOUNT",
          "sort_direction": "ASCENDING",
          "timezone": "Australia/Melbourne",
          "accounts": [],
          "delivery_options": [
            {
              "delivery_type": "EMAIL",
              "delivery_addresses": [],
              "delivery_format": "CSV"
            }
          ]
        }
      },
      "asyncsentmessagesdetailrequest": {
        "title": "asyncsentmessagesdetailrequest",
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-10T13:30:00.000Z"
          },
          "start_date": {
            "type": "string",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "period": {
            "$ref": "#/components/schemas/period"
          },
          "sort_by": {
            "$ref": "#/components/schemas/sort_by"
          },
          "sort_direction": {
            "$ref": "#/components/schemas/sort_direction"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "example": "Australia/Melbourne"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts."
          },
          "destination_address_country": {
            "type": "string",
            "description": "Filter results by destination address country."
          },
          "destination_address": {
            "type": "string",
            "description": "Filter results by destination address."
          },
          "message_format": {
            "$ref": "#/components/schemas/format"
          },
          "metadata_key": {
            "type": "string",
            "description": "Filter results for messages that include a metadata key."
          },
          "metadata_value": {
            "type": "string",
            "description": "Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided."
          },
          "source_address_country": {
            "type": "string",
            "description": "Filter results by source address country."
          },
          "source_address": {
            "type": "string",
            "description": "Filter results by source address."
          },
          "status": {
            "$ref": "#/components/schemas/status"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/statuses"
            },
            "description": "Filter results by message statuses. Can't be combined with status."
          },
          "status_code": {
            "type": "string",
            "description": "Filter results by message status code."
          },
          "delivery_report": {
            "type": "boolean",
            "description": "Filter results by delivery report."
          },
          "delivery_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryOptionsBody"
            },
            "description": "Delivery options for this asynchronous report."
          }
        },
        "example": {
          "end_date": "2017-02-10T13:30:00.000Z",
          "start_date": "2017-02-12T13:30:00.000Z",
          "period": "TODAY",
          "sort_by": "DELIVERY_REPORT",
          "sort_direction": "ASCENDING",
          "timezone": "Australia/Melbourne",
          "accounts": [],
          "statuses": [
            "CANCELLED"
          ],
          "delivery_options": [
            {
              "delivery_type": "EMAIL",
              "delivery_addresses": [],
              "delivery_format": "CSV"
            }
          ]
        }
      },
      "asyncreceivedmessagessummaryrequest": {
        "title": "asyncreceivedmessagessummaryrequest",
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-10T13:30:00.000Z"
          },
          "start_date": {
            "type": "string",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "summary_by": {
            "$ref": "#/components/schemas/summary_by"
          },
          "summary_field": {
            "$ref": "#/components/schemas/summary_field"
          },
          "group_by": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/group_by"
            },
            "description": "List of fields to group results set by"
          },
          "period": {
            "$ref": "#/components/schemas/period"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "example": "Australia/Melbourne"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts."
          },
          "destination_address_country": {
            "type": "string",
            "description": "Filter results by destination address country."
          },
          "destination_address": {
            "type": "string",
            "description": "Filter results by destination address."
          },
          "message_format": {
            "$ref": "#/components/schemas/format"
          },
          "metadata_key": {
            "type": "string",
            "description": "Filter results for messages that include a metadata key."
          },
          "metadata_value": {
            "type": "string",
            "description": "Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided."
          },
          "source_address_country": {
            "type": "string",
            "description": "Filter results by source address country."
          },
          "source_address": {
            "type": "string",
            "description": "Filter results by source address."
          },
          "action": {
            "$ref": "#/components/schemas/action"
          },
          "delivery_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryOptionsBody"
            },
            "description": "Delivery options for this asynchronous report."
          }
        },
        "example": {
          "end_date": "2017-02-10T13:30:00.000Z",
          "start_date": "2017-02-12T13:30:00.000Z",
          "summary_by": "COUNT",
          "summary_field": "MESSAGE_ID",
          "group_by": [
            "DAY"
          ],
          "period": "THIS_WEEK",
          "timezone": "Australia/Melbourne",
          "accounts": [],
          "delivery_options": [
            {
              "delivery_type": "EMAIL",
              "delivery_addresses": [],
              "delivery_format": "CSV"
            }
          ]
        }
      },
      "asyncsentmessagesrequest": {
        "title": "asyncsentmessagesrequest",
        "required": [
          "end_date",
          "start_date"
        ],
        "type": "object",
        "properties": {
          "end_date": {
            "type": "string",
            "description": "End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-10T13:30:00.000Z"
          },
          "start_date": {
            "type": "string",
            "description": "Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.",
            "example": "2017-02-12T13:30:00.000Z"
          },
          "summary_by": {
            "$ref": "#/components/schemas/summary_by"
          },
          "summary_field": {
            "$ref": "#/components/schemas/summary_field"
          },
          "group_by": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/group_by"
            },
            "description": "List of fields to group results set by"
          },
          "period": {
            "$ref": "#/components/schemas/period"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone to use for the context of the request. If provided this will be used as the timezone for the start date and end date parameters, and all datetime fields returns in the response. The timezone should be provided as a IANA (Internet Assigned Numbers Authority) time zone database zone name, i.e., 'Australia/Melbourne'.",
            "example": "Australia/Melbourne"
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter results by a specific account. By default results\n\nwill be returned for the account associated with the authentication\n\ncredentials and all sub accounts."
          },
          "destination_address_country": {
            "type": "string",
            "description": "Filter results by destination address country."
          },
          "destination_address": {
            "type": "string",
            "description": "Filter results by destination address."
          },
          "message_format": {
            "$ref": "#/components/schemas/format"
          },
          "metadata_key": {
            "type": "string",
            "description": "Filter results for messages that include a metadata key."
          },
          "metadata_value": {
            "type": "string",
            "description": "Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided."
          },
          "source_address_country": {
            "type": "string",
            "description": "Filter results by source address country."
          },
          "source_address": {
            "type": "string",
            "description": "Filter results by source address."
          },
          "delivery_report": {
            "type": "boolean",
            "description": "Filter results by delivery report."
          },
          "status_code": {
            "type": "string",
            "description": "Filter results by message status code."
          },
          "delivery_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryOptionsBody"
            },
            "description": "Delivery options for this asynchronous report."
          }
        },
        "example": {
          "end_date": "2017-02-10T13:30:00.000Z",
          "start_date": "2017-02-12T13:30:00.000Z",
          "group_by": [
            "DAY"
          ],
          "period": "YESTERDAY",
          "timezone": "Australia/Melbourne",
          "accounts": [],
          "delivery_options": [
            {
              "delivery_type": "EMAIL",
              "delivery_addresses": [],
              "delivery_format": "CSV"
            }
          ]
        }
      },
      "action": {
        "title": "action",
        "enum": [
          "MyAccount001",
          "OPT_OUT",
          "OPT_IN",
          "GLOBAL_OPT_OUT"
        ],
        "type": "string",
        "description": "Action that was invoked for this message if any, OPT_OUT, OPT_IN, GLOBAL_OPT_OUT",
        "example": "MyAccount001"
      },
      "field": {
        "title": "field",
        "enum": [
          "ACCOUNT",
          "DELIVERED_TIMESTAMP",
          "MESSAGE_EXPIRY_TIMESTAMP",
          "DELIVERY_REPORT",
          "DESTINATION_ADDRESS",
          "DESTINATION_ADDRESS_COUNTRY",
          "FORMAT",
          "SOURCE_ADDRESS",
          "SOURCE_ADDRESS_COUNTRY",
          "STATUS",
          "STATUS_CODE",
          "UNITS",
          "TIMESTAMP"
        ],
        "type": "string",
        "description": "The value of the sort_by field provided for this report",
        "example": "ACCOUNT"
      },
      "order": {
        "title": "order",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ],
        "type": "string",
        "description": "The value of the sort_direction field provided for this report",
        "example": "ASCENDING"
      },
      "period": {
        "title": "period",
        "enum": [
          "TODAY",
          "YESTERDAY",
          "THIS_WEEK",
          "LAST_WEEK",
          "THIS_MONTH",
          "LAST_MONTH",
          "LAST_7_DAYS",
          "LAST_30_DAYS"
        ],
        "type": "string",
        "description": "Automatically set a date range based on the period value. Can't be combined with start_date and end_date.",
        "example": "TODAY"
      },
      "report_status": {
        "title": "report_status",
        "enum": [
          "REQUESTED",
          "RUNNING",
          "CANCELLED",
          "DONE"
        ],
        "type": "string",
        "example": "REQUESTED"
      },
      "sort_by": {
        "title": "sort_by",
        "enum": [
          "ACCOUNT",
          "ACTION",
          "DESTINATION_ADDRESS",
          "DESTINATION_ADDRESS_COUNTRY",
          "FORMAT",
          "SOURCE_ADDRESS",
          "SOURCE_ADDRESS_COUNTRY",
          "TIMESTAMP"
        ],
        "type": "string",
        "description": "Field to sort results set by",
        "example": "ACCOUNT"
      },
      "sort_direction": {
        "title": "sort_direction",
        "enum": [
          "ASCENDING",
          "DESCENDING"
        ],
        "type": "string",
        "description": "Order to sort results by.",
        "example": "ASCENDING"
      },
      "status": {
        "title": "status",
        "enum": [
          "CANCELLED",
          "DELIVERED",
          "ENROUTE",
          "EXPIRED",
          "HELD",
          "PROCESSED",
          "PROCESSING",
          "QUEUED",
          "REJECTED",
          "SCHEDULED",
          "SUBMITTED"
        ],
        "type": "string",
        "description": "Filter results by message status. Can't be combined with statuses.",
        "example": "CANCELLED"
      },
      "statuses": {
        "title": "statuses",
        "enum": [
          "CANCELLED",
          "DELIVERED",
          "ENROUTE",
          "EXPIRED",
          "HELD",
          "PROCESSED",
          "PROCESSING",
          "QUEUED",
          "REJECTED",
          "SCHEDULED",
          "SUBMITTED"
        ],
        "type": "string",
        "example": "CANCELLED"
      },
      "summary": {
        "title": "summary",
        "enum": [
          "COUNT",
          "SUM"
        ],
        "type": "string",
        "description": "The value of the summary_by parameter provided for this report",
        "example": "COUNT"
      },
      "summary_by": {
        "title": "summary_by",
        "enum": [
          "COUNT"
        ],
        "type": "string",
        "description": "Function to apply when summarising results",
        "example": "COUNT"
      },
      "summary_field": {
        "title": "summary_field",
        "enum": [
          "UNITS",
          "MESSAGE_ID"
        ],
        "type": "string",
        "description": "The value of the summary_field parameter provided for this report",
        "example": "UNITS"
      },
      "type": {
        "title": "type",
        "enum": [
          "SUMMARY",
          "DETAIL"
        ],
        "type": "string",
        "example": "SUMMARY"
      },
      "View": {
        "title": "View",
        "type": "object",
        "properties": {
          "dt": {
            "type": "string",
            "example": "2018-09-18T01:22:17.071Z"
          },
          "user_agent": {
            "type": "string",
            "example": "Mozilla/5.0 (Windows NT..."
          },
          "ip": {
            "type": "string",
            "example": "127.0.0.1"
          }
        }
      },
      "ShortUrl": {
        "title": "ShortUrl",
        "type": "object",
        "properties": {
          "click_count": {
            "type": "number",
            "example": 3
          },
          "view_count": {
            "type": "number",
            "example": 2
          },
          "message_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "long_url": {
            "type": "string",
            "example": "https://developers.messagemedia.com"
          },
          "short_url": {
            "type": "string",
            "example": "https://nxt.to/abc1234"
          },
          "destination_number": {
            "type": "string",
            "example": 61491570157
          }
        }
      },
      "LogsDetailResult": {
        "title": "LogsDetailResult",
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "long_url": {
            "type": "string",
            "example": "https://developers.messagemedia.com"
          },
          "short_url": {
            "type": "string",
            "example": "https://nxt.to/abc1234"
          },
          "destination_number": {
            "type": "string",
            "example": 61491570157
          },
          "click_count": {
            "type": "number",
            "example": 3
          },
          "view_count": {
            "type": "number",
            "example": 2
          },
          "clicks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Click"
            },
            "description": ""
          },
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/View"
            },
            "description": ""
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "example": {
          "message_id": "00000000-0000-0000-0000-000000000000",
          "long_url": "https://developers.messagemedia.com",
          "short_url": "https://nxt.to/abc1234",
          "destination_number": 61491570157,
          "click_count": 3,
          "view_count": 2,
          "clicks": [
            {
              "dt": "2018-09-18T01:22:17.071Z",
              "user_agent": "Mozilla/5.0 (Windows NT...",
              "ip": "127.0.0.1"
            }
          ],
          "views": [
            {
              "dt": "2018-09-18T01:22:17.071Z",
              "user_agent": "Mozilla/5.0 (Windows NT...",
              "ip": "127.0.0.1"
            }
          ],
          "pagination": {
            "page": 1,
            "page_size": 100,
            "page_count": 3
          }
        }
      },
      "LogSummaryResult": {
        "title": "LogSummaryResult",
        "type": "object",
        "properties": {
          "total_clicks": {
            "type": "number",
            "example": 3
          },
          "unique_clicks": {
            "type": "number",
            "example": 1
          },
          "total_views": {
            "type": "number",
            "example": 2
          },
          "unique_views": {
            "type": "number",
            "example": 1
          },
          "short_urls_generated": {
            "type": "number",
            "example": 1
          },
          "short_urls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShortUrl"
            },
            "description": ""
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "example": {
          "total_clicks": 3,
          "unique_clicks": 1,
          "total_views": 2,
          "unique_views": 1,
          "short_urls_generated": 1,
          "short_urls": [
            {
              "click_count": 3,
              "view_count": 2,
              "message_id": "00000000-0000-0000-0000-000000000000",
              "long_url": "https://developers.messagemedia.com",
              "short_url": "https://nxt.to/abc1234",
              "destination_number": 61491570157
            }
          ],
          "pagination": {
            "page": 1,
            "page_size": 100,
            "page_count": 3
          }
        }
      },
      "Click": {
        "title": "Click",
        "type": "object",
        "properties": {
          "dt": {
            "type": "string",
            "example": "2018-09-18T01:22:17.071Z"
          },
          "user_agent": {
            "type": "string",
            "example": "Mozilla/5.0 (Windows NT..."
          },
          "ip": {
            "type": "string",
            "example": "127.0.0.1"
          }
        }
      },
      "CreateWebhookrequest": {
        "title": "CreateWebhookrequest",
        "required": [
          "url",
          "method",
          "encoding",
          "headers",
          "events",
          "template"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "encoding": {
            "type": "string"
          },
          "headers": {
            "$ref": "#/components/schemas/Headers"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "template": {
            "type": "string"
          }
        },
        "example": {
          "url": "http://webhook.com",
          "method": "POST",
          "encoding": "JSON",
          "headers": {
            "Account": "DeveloperPortal7000"
          },
          "events": [
            "ENROUTE_DR",
            "DELIVERED_DR"
          ],
          "template": "{\"id\":\"$mtId\",\"status\":\"$statusCode\"}"
        }
      },
      "Headers": {
        "title": "Headers",
        "required": [
          "Account"
        ],
        "type": "object",
        "properties": {
          "Account": {
            "type": "string"
          }
        },
        "example": {
          "Account": "DeveloperPortal7000"
        }
      },
      "UpdateWebhookrequest": {
        "title": "UpdateWebhookrequest",
        "required": [
          "url",
          "method",
          "encoding",
          "events",
          "template"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "encoding": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "template": {
            "type": "string"
          }
        },
        "example": {
          "url": "https://myurl.com",
          "method": "POST",
          "encoding": "FORM_ENCODED",
          "events": [
            "ENROUTE_DR"
          ],
          "template": "{\"id\":\"$mtId\", \"status\":\"$statusCode\"}"
        }
      },
      "UpdateWebhook400response": {
        "title": "UpdateWebhook400response",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Something went wrong. Please try again later."
        }
      },
      "Createsignaturekeyrequest": {
        "title": "Createsignaturekeyrequest",
        "required": [
          "digest",
          "cipher"
        ],
        "type": "object",
        "properties": {
          "digest": {
            "type": "string"
          },
          "cipher": {
            "type": "string"
          }
        },
        "example": {
          "digest": "SHA224",
          "cipher": "RSA"
        }
      },
      "Createsignaturekeyresponse": {
        "title": "Createsignaturekeyresponse",
        "required": [
          "key_id",
          "public_key",
          "cipher",
          "digest",
          "created",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "key_id": {
            "type": "string"
          },
          "public_key": {
            "type": "string"
          },
          "cipher": {
            "type": "string"
          },
          "digest": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
          "public_key": "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCTIxtRyT5CuOD74r7UCT+AKzWNxvaAP9myjAqR7+vBnJKEvoPnmbKTnm6uLlxutnMbjKrnCCWnQ9vtBVnnd+ElhwLDPADfMcJoOqwi7mTcxucckeEbBsfsgYRfdacxgSZL8hVD1hLViQr3xwjEIkJcx1w3x8npvwMuTY0uW8+PjwIDAQAB",
          "cipher": "RSA",
          "digest": "SHA224",
          "created": "2018-01-18T10:16:12.364Z",
          "enabled": false
        }
      },
      "Getsignaturekeydetailresponse": {
        "title": "Getsignaturekeydetailresponse",
        "type": "object",
        "properties": {
          "key_id": {
            "type": "string",
            "example": "7ca628a8-08b0-4e42-aeb8-960b37049c31"
          },
          "cipher": {
            "type": "string",
            "example": "RSA"
          },
          "digest": {
            "type": "string",
            "example": "SHA224"
          },
          "created": {
            "type": "string",
            "example": "2018-01-18T10:16:12.364Z"
          },
          "enabled": {
            "type": "boolean",
            "example": false
          }
        },
        "example": {
          "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
          "cipher": "RSA",
          "digest": "SHA224",
          "created": "2018-01-18T10:16:12.364Z",
          "enabled": false
        }
      },
      "Getsignaturekeylistresponse": {
        "title": "Getsignaturekeylistresponse",
        "type": "object",
        "properties": {
          "key_id": {
            "type": "string",
            "example": "7ca628a8-08b0-4e42-aeb8-960b37049c31"
          },
          "cipher": {
            "type": "string",
            "example": "RSA"
          },
          "digest": {
            "type": "string",
            "example": "SHA224"
          },
          "created": {
            "type": "string",
            "example": "2018-01-18T10:16:12.364Z"
          },
          "enabled": {
            "type": "boolean",
            "example": false
          }
        },
        "example": {
          "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
          "cipher": "RSA",
          "digest": "SHA224",
          "created": "2018-01-18T10:16:12.364Z",
          "enabled": true
        }
      },
      "Enablesignaturekeyrequest": {
        "title": "Enablesignaturekeyrequest",
        "required": [
          "key_id"
        ],
        "type": "object",
        "properties": {
          "key_id": {
            "type": "string"
          }
        },
        "example": {
          "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31"
        }
      },
      "Enablesignaturekeyresponse": {
        "title": "Enablesignaturekeyresponse",
        "type": "object",
        "properties": {
          "key_id": {
            "type": "string",
            "example": "7ca628a8-08b0-4e42-aeb8-960b37049c31"
          },
          "cipher": {
            "type": "string",
            "example": "RSA"
          },
          "digest": {
            "type": "string",
            "example": "SHA224"
          },
          "created": {
            "type": "string",
            "example": "2018-01-18T10:16:12.364Z"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          }
        },
        "example": {
          "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
          "cipher": "RSA",
          "digest": "SHA224",
          "created": "2018-01-18T10:16:12.364Z",
          "enabled": true
        }
      },
      "Enablesignaturekey400response": {
        "title": "Enablesignaturekey400response",
        "required": [
          "message",
          "details"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "message": "Bad Request",
          "details": [
            "/key_id: Key id cannot be null"
          ]
        }
      },
      "Getenabledsignaturekeyresponse": {
        "title": "Getenabledsignaturekeyresponse",
        "type": "object",
        "properties": {
          "key_id": {
            "type": "string",
            "example": "7ca628a8-08b0-4e42-aeb8-960b37049c31"
          },
          "cipher": {
            "type": "string",
            "example": "RSA"
          },
          "digest": {
            "type": "string",
            "example": "SHA224"
          },
          "created": {
            "type": "string",
            "example": "2018-01-18T10:16:12.364Z"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          }
        },
        "example": {
          "key_id": "7ca628a8-08b0-4e42-aeb8-960b37049c31",
          "cipher": "RSA",
          "digest": "SHA224",
          "created": "2018-01-18T10:16:12.364Z",
          "enabled": true
        }
      },
      "Disablethecurrentenabledsignaturekey.403response": {
        "title": "Disablethecurrentenabledsignaturekey.403response",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "This feature has not been enabled in your account."
        }
      },
      "Addoneormorenumberstoyourbacklistrequest": {
        "title": "Addoneormorenumberstoyourbacklistrequest",
        "required": [
          "numbers"
        ],
        "type": "object",
        "properties": {
          "numbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of numbers to be added to the blacklist. These should be specified in E.164 international format. For information on E.164, please refer to http://en.wikipedia.org/wiki/E.164."
          }
        },
        "example": {
          "numbers": [
            61491570156,
            61491570157
          ]
        }
      },
      "Addoneormorenumberstoyourbacklistresponse": {
        "title": "Addoneormorenumberstoyourbacklistresponse",
        "required": [
          "uri",
          "numbers"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "type": "string"
          },
          "numbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "uri": "/v1/number_authorisation/mt/blacklist",
          "numbers": [
            61491570156,
            61491570157
          ]
        }
      },
      "Checkifoneorseveralnumbersarecurrentlyblacklistedresponse": {
        "title": "Checkifoneorseveralnumbersarecurrentlyblacklistedresponse",
        "required": [
          "uri",
          "numbers"
        ],
        "type": "object",
        "properties": {
          "uri": {
            "type": "string"
          },
          "numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Number"
            },
            "description": ""
          }
        },
        "example": {
          "uri": "/v1/number_authorisation/is_authorised/+61491570156,+61491570157",
          "numbers": [
            {
              "number": 61491570156,
              "authorised": true
            },
            {
              "number": 61491570157,
              "authorised": false
            }
          ]
        }
      },
      "Number": {
        "title": "Number",
        "required": [
          "number",
          "authorised"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "authorised": {
            "type": "boolean"
          }
        },
        "example": {
          "number": 61491570156,
          "authorised": true
        }
      },
      "service_types": {
        "title": "service_types",
        "enum": [
          "SMS",
          "TTS",
          "MMS"
        ],
        "type": "string",
        "example": "SMS"
      },
      "NumbersListResponse": {
        "title": "NumbersListResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DedicatedNumber"
            },
            "description": ""
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "example": {
          "pagination": {
            "next_token": "0428d673-0f75-4063-9493-e89d75f13438",
            "page_size": 5
          },
          "data": [
            {
              "id": "03cf54ad-a4a3-4cd1-afd5-e0ca2cf158a3",
              "phone_number": 61436489205,
              "country": "AU",
              "type": "MOBILE",
              "classification": "BRONZE",
              "available_after": "2019-08-06T23:56:15.633Z",
              "capabilities": [
                "SMS"
              ]
            }
          ]
        }
      },
      "DedicatedNumber": {
        "title": "Number",
        "type": "object",
        "properties": {
          "available_after": {
            "type": "string",
            "format": "date-time"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Capability"
            },
            "description": ""
          },
          "classification": {
            "$ref": "#/components/schemas/Classification"
          },
          "country": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/Type"
          }
        },
        "example": {
          "id": "be3cb602-7c00-4c87-ae4b-b8defc04f179",
          "phone_number": 614111111111,
          "country": "AU",
          "type": "MOBILE",
          "classification": "SILVER",
          "available_after": "2019-06-21T04:04:31.707Z",
          "capabilities": [
            "SMS",
            "MMS"
          ]
        }
      },
      "Capability": {
        "title": "Capability",
        "enum": [
          "SMS",
          "TTS",
          "MMS"
        ],
        "type": "string",
        "example": "SMS"
      },
      "Classification": {
        "title": "Classification",
        "enum": [
          "BRONZE",
          "SILVER",
          "GOLD"
        ],
        "type": "string",
        "example": "BRONZE"
      },
      "Type": {
        "title": "Type",
        "enum": [
          "MOBILE",
          "LANDLINE",
          "TOLL_FREE",
          "SHORT_CODE"
        ],
        "type": "string",
        "example": "MOBILE"
      },
      "Assignment": {
        "title": "Assignment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "number_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "example": {
          "metadata": {
            "key1": "value1"
          },
          "label": "LabelTest0",
          "id": "be3cb602-7c00-4c87-ae4b-b8defc04f179",
          "number_id": "b9ee3fe8-2c20-47b1-96e9-c5d12d7ed985"
        }
      },
      "createAssignmentrequest": {
        "title": "createAssignmentrequest",
        "required": [
          "label",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "example": {
          "label": "ExampleLabel",
          "metadata": {
            "Key1": "value1",
            "Key2": "value2"
          }
        }
      },
      "Metadata": {
        "title": "Metadata",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "example": {
          "Key1": "value1",
          "Key2": "value2"
        }
      },
      "updateAssignmentrequest": {
        "title": "updateAssignmentrequest",
        "required": [
          "label",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "example": {
          "label": "ExampleLabel",
          "metadata": {
            "Key1": "value1",
            "Key2": "value2"
          }
        }
      },
      "AssignedNumberListResponse": {
        "title": "AssignedNumberListResponse",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignedNumber"
            },
            "description": ""
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "example": {
          "pagination": {
            "next_token": "0428d673-0f75-4063-9493-e89d75f13438",
            "page_size": 5
          },
          "data": [
            {
              "assignment": {
                "metadata": {
                  "key1": "value1"
                },
                "label": "LabelTest0",
                "id": "be3cb602-7c00-4c87-ae4b-b8defc04f179",
                "number_id": "b9ee3fe8-2c20-47b1-96e9-c5d12d7ed985"
              },
              "number": {
                "id": "03cf54ad-a4a3-4cd1-afd5-e0ca2cf158a3",
                "phone_number": 61436489205,
                "country": "AU",
                "type": "MOBILE",
                "classification": "BRONZE",
                "available_after": "2019-08-06T23:56:15.633Z",
                "capabilities": [
                  "SMS"
                ]
              }
            }
          ]
        }
      },
      "AssignedNumber": {
        "title": "AssignedNumber",
        "type": "object",
        "properties": {
          "assignment": {
            "$ref": "#/components/schemas/Assignment"
          },
          "number": {
            "$ref": "#/components/schemas/Number"
          }
        }
      },
      "403response": {
        "title": "403 response",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Invalid authentication credentials"
        }
      },
      "Campaign": {
        "title": "Campaign",
        "required": [
          "template_id",
          "message"
        ],
        "type": "object",
        "properties": {
          "template_id": {
            "type": "string",
            "description": "Template to use for the landing page"
          },
          "parameters": {
            "type": "object",
            "description": "Parameters to use for the landing page and the message content"
          },
          "message": {
            "$ref": "#/components/schemas/MessageTemplate"
          }
        }
      },
      "MessageTemplate": {
        "title": "MessageTemplate",
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The message content.  This supports template placeholders."
          },
          "metadata": {
            "type": "object",
            "description": "Message metadata.  This will be supplied to URL shortener and UG.  Max 10 keys per campaign."
          },
          "rich_link": {
            "$ref": "#/components/schemas/RichLink"
          },
          "delivery_report": {
            "type": "boolean",
            "description": "Request a delivery report for the sent message"
          }
        }
      },
      "RichLink": {
        "title": "RichLink",
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "The image field is used to specify the url of the media file that you want to show in the link preview. Supported file formats include png, jpeg and gif."
          },
          "title": {
            "type": "string",
            "description": "The (optional) title that appears on your unfurled link. Maximum 80  characters."
          },
          "description": {
            "type": "string",
            "description": "An optional description, maximum 150 characters."
          }
        }
      },
      "Recipient": {
        "title": "Recipient",
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "The recipient phone number.  Must be E.164 with a leading '+'"
          },
          "parameters": {
            "type": "object",
            "description": "The recipient scoped template parameters"
          },
          "scheduled": {
            "type": "string",
            "description": "A message can be scheduled for delivery in the future by setting the scheduled property. The scheduled property expects a date time specified in ISO 8601 format. The scheduled time must be provided in UTC and be no more than 31 days in the future."
          }
        }
      },
      "CreateLandingPage": {
        "title": "CreateLandingPage",
        "required": [
          "name",
          "template_id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Landing Page name. Maximum 100 characters."
          },
          "template_id": {
            "type": "string",
            "description": "Template to use for the landing page."
          },
          "parameters": {
            "type": "object",
            "description": "Parameters to use for the landing page and the message content."
          },
          "fields": {
            "type": "object",
            "description": "Define the fields that have been used to the paramters."
          }
        }
      },
      "UpdateLandingPage": {
        "title": "UpdateLandingPage",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Landing Page name. Maximum 100 characters."
          },
          "template_id": {
            "type": "string",
            "description": "Template to use for the landing page."
          },
          "parameters": {
            "type": "object",
            "description": "Parameters to use for the landing page and the message content."
          },
          "fields": {
            "type": "object",
            "description": "Define the fields that have been used to the paramters."
          }
        }
      },
      "CampaignSummary": {
        "title": "CampaignSummary",
        "required": [
          "total_events",
          "unique_engagements",
          "event_summary"
        ],
        "type": "object",
        "properties": {
          "total_events": {
            "type": "number",
            "description": "The total number of events record against this campaign."
          },
          "unique_engagements": {
            "type": "number",
            "description": "The unique number of recipients for which there exists at least one recorded event."
          },
          "event_summary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventSummary"
            },
            "description": "The event summary breakdown."
          }
        }
      },
      "EventSummary": {
        "title": "EventSummary",
        "required": [
          "event",
          "total_events",
          "unique_recipients"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "The event type to which this summary is for.  See [Event Types](#events-types) for a list of available events."
          },
          "source": {
            "type": "string",
            "description": "The event source to which this summary is for, if applicable."
          },
          "total_events": {
            "type": "number",
            "description": "The total number of recorded events of this type and source."
          },
          "unique_recipients": {
            "type": "number",
            "description": "The unique number of recipients for which there exists at least one event of this type and source recorded."
          }
        }
      },
      "ListCampaignEventPage": {
        "title": "ListCampaignEventPage",
        "required": [
          "events",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignEvent"
            },
            "description": "The list of campaign events."
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "CampaignEvent": {
        "title": "CampaignEvent",
        "required": [
          "campaign_id",
          "recipient_id",
          "number",
          "event",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "campaign_id": {
            "type": "string",
            "description": "The campaign ID"
          },
          "recipient_id": {
            "type": "string",
            "description": "The recipient ID to which this event corresponds to"
          },
          "number": {
            "type": "string",
            "description": "The recipient's phone number"
          },
          "event": {
            "type": "string",
            "description": "The event type.  See [Event Types](#events-types) for a list of available events."
          },
          "source": {
            "type": "string",
            "description": "The source identifier.  This identifies the element that produced the event.  This may not be applicable for all events."
          },
          "timestamp": {
            "type": "string",
            "description": "The timestamp of the event, in ISO 8601 format."
          }
        }
      },
      "Pagination1": {
        "title": "Pagination",
        "required": [
          "page",
          "page_size",
          "total_count"
        ],
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "description": "The current page number"
          },
          "page_size": {
            "type": "number",
            "description": "The requested page size"
          },
          "total_count": {
            "type": "number",
            "description": "The total number of items that match the query"
          }
        }
      },
      "BarcodeDisplayValue": {
        "title": "BarcodeDisplayValue",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "BarcodeHeight": {
        "title": "BarcodeHeight",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "BarcodeLineColor": {
        "title": "BarcodeLineColor",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "BarcodeMargin": {
        "title": "BarcodeMargin",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "BarcodeValue": {
        "title": "BarcodeValue",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "BarcodeWidth": {
        "title": "BarcodeWidth",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "BodyText": {
        "title": "BodyText",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "ButtonFontFamily": {
        "title": "ButtonFontFamily",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "CreateaLandingPageresponse": {
        "title": "CreateaLandingPageresponse",
        "required": [
          "id",
          "name",
          "template_id",
          "parameters",
          "fields",
          "created_timestamp",
          "modified_timestamp"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "template_id": {
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters"
          },
          "fields": {
            "$ref": "#/components/schemas/Fields"
          },
          "created_timestamp": {
            "type": "string"
          },
          "modified_timestamp": {
            "type": "string"
          }
        },
        "example": {
          "id": "a94041bb-704b-48fa-ba0b-6f1538fc502f",
          "name": " My Landing Page",
          "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
          "parameters": {
            "title": "This is a ${title}",
            "bodyText": "This is some ${bodyText}",
            "callToAction": "${ctaUrl}"
          },
          "fields": {
            "title": {
              "type": "TEXT"
            },
            "bodyText": {
              "type": "TEXT"
            },
            "ctaUrl": {
              "type": "URL"
            }
          },
          "created_timestamp": "2019-11-03T11:49:02.807Z",
          "modified_timestamp": "2019-11-03T11:49:02.807Z"
        }
      },
      "CreateNewCampaignresponse": {
        "title": "CreateNewCampaignresponse",
        "required": [
          "id",
          "template_id",
          "parameters",
          "message"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "template_id": {
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          }
        },
        "example": {
          "id": "a94041bb-704b-48fa-ba0b-6f1538fc502f",
          "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
          "parameters": {
            "title": "This is a title",
            "bodyText": "This is some body text",
            "callToAction": "http://www.example.com/"
          },
          "message": {
            "content": "This is the message.",
            "metadata": {
              "key": "value"
            }
          }
        }
      },
      "CtaUrl": {
        "title": "CtaUrl",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "URL"
        }
      },
      "Fields": {
        "title": "Fields",
        "required": [
          "title",
          "bodyText",
          "ctaUrl"
        ],
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/components/schemas/Title"
          },
          "bodyText": {
            "$ref": "#/components/schemas/BodyText"
          },
          "ctaUrl": {
            "$ref": "#/components/schemas/CtaUrl"
          }
        },
        "example": {
          "title": {
            "type": "TEXT"
          },
          "bodyText": {
            "type": "TEXT"
          },
          "ctaUrl": {
            "type": "URL"
          }
        }
      },
      "Fields2": {
        "title": "Fields2",
        "required": [
          "fontFamilyURL1",
          "secondaryButtonTextColor",
          "fontFamilyURL3",
          "pageTitle",
          "fontFamilyURL2",
          "pageTextColor",
          "barcodeHeight",
          "imageHeaderUrl",
          "barcodeMargin",
          "logoLink",
          "primaryButtonLink",
          "primaryButtonBackgroundColor",
          "secondaryButtonLink",
          "barcodeWidth",
          "primaryButtonText",
          "headline",
          "headlineColor",
          "pageText",
          "secondaryButtonBackgroundColor",
          "imageLinkPreviewUrl",
          "pageTextFontFamily",
          "secondaryButtonText",
          "headlineFontFamily",
          "barcodeLineColor",
          "barcodeValue",
          "primaryButtonTextColor",
          "imageLogoUrl",
          "barcodeDisplayValue",
          "buttonFontFamily"
        ],
        "type": "object",
        "properties": {
          "fontFamilyURL1": {
            "$ref": "#/components/schemas/FontFamilyURL1"
          },
          "secondaryButtonTextColor": {
            "$ref": "#/components/schemas/SecondaryButtonTextColor"
          },
          "fontFamilyURL3": {
            "$ref": "#/components/schemas/FontFamilyURL1"
          },
          "pageTitle": {
            "$ref": "#/components/schemas/PageTitle"
          },
          "fontFamilyURL2": {
            "$ref": "#/components/schemas/FontFamilyURL1"
          },
          "pageTextColor": {
            "$ref": "#/components/schemas/PageTextColor"
          },
          "barcodeHeight": {
            "$ref": "#/components/schemas/BarcodeHeight"
          },
          "imageHeaderUrl": {
            "$ref": "#/components/schemas/ImageHeaderUrl"
          },
          "barcodeMargin": {
            "$ref": "#/components/schemas/BarcodeMargin"
          },
          "logoLink": {
            "$ref": "#/components/schemas/LogoLink"
          },
          "primaryButtonLink": {
            "$ref": "#/components/schemas/PrimaryButtonLink"
          },
          "primaryButtonBackgroundColor": {
            "$ref": "#/components/schemas/PrimaryButtonBackgroundColor"
          },
          "secondaryButtonLink": {
            "$ref": "#/components/schemas/SecondaryButtonLink"
          },
          "barcodeWidth": {
            "$ref": "#/components/schemas/BarcodeWidth"
          },
          "primaryButtonText": {
            "$ref": "#/components/schemas/PrimaryButtonText"
          },
          "headline": {
            "$ref": "#/components/schemas/Headline"
          },
          "headlineColor": {
            "$ref": "#/components/schemas/HeadlineColor"
          },
          "pageText": {
            "$ref": "#/components/schemas/PageText"
          },
          "secondaryButtonBackgroundColor": {
            "$ref": "#/components/schemas/SecondaryButtonBackgroundColor"
          },
          "imageLinkPreviewUrl": {
            "$ref": "#/components/schemas/ImageLinkPreviewUrl"
          },
          "pageTextFontFamily": {
            "$ref": "#/components/schemas/PageTextFontFamily"
          },
          "secondaryButtonText": {
            "$ref": "#/components/schemas/SecondaryButtonText"
          },
          "headlineFontFamily": {
            "$ref": "#/components/schemas/HeadlineFontFamily"
          },
          "barcodeLineColor": {
            "$ref": "#/components/schemas/BarcodeLineColor"
          },
          "barcodeValue": {
            "$ref": "#/components/schemas/BarcodeValue"
          },
          "primaryButtonTextColor": {
            "$ref": "#/components/schemas/PrimaryButtonTextColor"
          },
          "imageLogoUrl": {
            "$ref": "#/components/schemas/ImageLogoUrl"
          },
          "barcodeDisplayValue": {
            "$ref": "#/components/schemas/BarcodeDisplayValue"
          },
          "buttonFontFamily": {
            "$ref": "#/components/schemas/ButtonFontFamily"
          }
        },
        "example": {
          "fontFamilyURL1": {
            "type": "TEXT"
          },
          "secondaryButtonTextColor": {
            "type": "TEXT"
          },
          "fontFamilyURL3": {
            "type": "TEXT"
          },
          "pageTitle": {
            "type": "TEXT"
          },
          "fontFamilyURL2": {
            "type": "TEXT"
          },
          "pageTextColor": {
            "type": "TEXT"
          },
          "barcodeHeight": {
            "type": "TEXT"
          },
          "imageHeaderUrl": {
            "type": "IMAGE"
          },
          "barcodeMargin": {
            "type": "TEXT"
          },
          "logoLink": {
            "type": "TEXT"
          },
          "primaryButtonLink": {
            "type": "TEXT"
          },
          "primaryButtonBackgroundColor": {
            "type": "TEXT"
          },
          "secondaryButtonLink": {
            "type": "TEXT"
          },
          "barcodeWidth": {
            "type": "TEXT"
          },
          "primaryButtonText": {
            "type": "TEXT"
          },
          "headline": {
            "type": "TEXT"
          },
          "headlineColor": {
            "type": "TEXT"
          },
          "pageText": {
            "type": "TEXT"
          },
          "secondaryButtonBackgroundColor": {
            "type": "TEXT"
          },
          "imageLinkPreviewUrl": {
            "type": "TEXT"
          },
          "pageTextFontFamily": {
            "type": "TEXT"
          },
          "secondaryButtonText": {
            "type": "TEXT"
          },
          "headlineFontFamily": {
            "type": "TEXT"
          },
          "barcodeLineColor": {
            "type": "TEXT"
          },
          "barcodeValue": {
            "type": "TEXT"
          },
          "primaryButtonTextColor": {
            "type": "TEXT"
          },
          "imageLogoUrl": {
            "type": "TEXT"
          },
          "barcodeDisplayValue": {
            "type": "TEXT"
          },
          "buttonFontFamily": {
            "type": "TEXT"
          }
        }
      },
      "FontFamilyURL1": {
        "title": "FontFamilyURL1",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "GetCampaignresponse": {
        "title": "GetCampaignresponse",
        "required": [
          "id",
          "template_id",
          "parameters",
          "message"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "template_id": {
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          }
        },
        "example": {
          "id": "a94041bb-704b-48fa-ba0b-6f1538fc502f",
          "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
          "parameters": {
            "title": "This is a title",
            "bodyText": "This is some body text",
            "callToAction": "http://www.example.com/"
          },
          "message": {
            "content": "This is the message.",
            "metadata": {
              "key": "value"
            }
          }
        }
      },
      "GetTemplatesFieldsDefinationresponse": {
        "title": "GetTemplatesFieldsDefinationresponse",
        "required": [
          "fields"
        ],
        "type": "object",
        "properties": {
          "fields": {
            "$ref": "#/components/schemas/Fields2"
          }
        },
        "example": {
          "fields": {
            "fontFamilyURL1": {
              "type": "TEXT"
            },
            "secondaryButtonTextColor": {
              "type": "TEXT"
            },
            "fontFamilyURL3": {
              "type": "TEXT"
            },
            "pageTitle": {
              "type": "TEXT"
            },
            "fontFamilyURL2": {
              "type": "TEXT"
            },
            "pageTextColor": {
              "type": "TEXT"
            },
            "barcodeHeight": {
              "type": "TEXT"
            },
            "imageHeaderUrl": {
              "type": "IMAGE"
            },
            "barcodeMargin": {
              "type": "TEXT"
            },
            "logoLink": {
              "type": "TEXT"
            },
            "primaryButtonLink": {
              "type": "TEXT"
            },
            "primaryButtonBackgroundColor": {
              "type": "TEXT"
            },
            "secondaryButtonLink": {
              "type": "TEXT"
            },
            "barcodeWidth": {
              "type": "TEXT"
            },
            "primaryButtonText": {
              "type": "TEXT"
            },
            "headline": {
              "type": "TEXT"
            },
            "headlineColor": {
              "type": "TEXT"
            },
            "pageText": {
              "type": "TEXT"
            },
            "secondaryButtonBackgroundColor": {
              "type": "TEXT"
            },
            "imageLinkPreviewUrl": {
              "type": "TEXT"
            },
            "pageTextFontFamily": {
              "type": "TEXT"
            },
            "secondaryButtonText": {
              "type": "TEXT"
            },
            "headlineFontFamily": {
              "type": "TEXT"
            },
            "barcodeLineColor": {
              "type": "TEXT"
            },
            "barcodeValue": {
              "type": "TEXT"
            },
            "primaryButtonTextColor": {
              "type": "TEXT"
            },
            "imageLogoUrl": {
              "type": "TEXT"
            },
            "barcodeDisplayValue": {
              "type": "TEXT"
            },
            "buttonFontFamily": {
              "type": "TEXT"
            }
          }
        }
      },
      "GetTemplatesresponse": {
        "title": "GetTemplatesresponse",
        "required": [
          "templates",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Template"
            },
            "description": ""
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination1"
          }
        },
        "example": {
          "templates": [
            {
              "id": "c9d7ce1d-20c4-4228-9ba1-6da2a3b4e5e0",
              "name": "Header image and 1 or 2 CTA"
            },
            {
              "id": "f56b5806-f732-4693-b87a-90b66a7d7bfc",
              "name": "Header Image and 1 CTA"
            },
            {
              "id": "7614456e-844f-4d83-bdfe-20c17ce0f97c",
              "name": "Background image and 0 or 1 CTA"
            }
          ],
          "pagination": {
            "next_page_token": "qwerty123",
            "page_size": 5
          }
        }
      },
      "Headline": {
        "title": "Headline",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "HeadlineColor": {
        "title": "HeadlineColor",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "HeadlineFontFamily": {
        "title": "HeadlineFontFamily",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "ImageHeaderUrl": {
        "title": "ImageHeaderUrl",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "IMAGE"
        }
      },
      "ImageLinkPreviewUrl": {
        "title": "ImageLinkPreviewUrl",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "ImageLogoUrl": {
        "title": "ImageLogoUrl",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "LogoLink": {
        "title": "LogoLink",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "MessageMLP": {
        "title": "MessageMLP",
        "required": [
          "content",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "example": {
          "content": "This is the message.",
          "metadata": {
            "key": "value"
          }
        }
      },
      "MetadataMLP": {
        "title": "Metadata",
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          }
        },
        "example": {
          "key": "value"
        }
      },
      "PageText": {
        "title": "PageText",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "PageTextColor": {
        "title": "PageTextColor",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "PageTextFontFamily": {
        "title": "PageTextFontFamily",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "PageTitle": {
        "title": "PageTitle",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "PaginationMLP": {
        "title": "PaginationMLP",
        "required": [
          "next_page_token",
          "page_size"
        ],
        "type": "object",
        "properties": {
          "next_page_token": {
            "type": "string"
          },
          "page_size": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "next_page_token": "qwerty123",
          "page_size": 5
        }
      },
      "Parameters": {
        "title": "Parameters",
        "required": [
          "title",
          "bodyText",
          "callToAction"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "bodyText": {
            "type": "string"
          },
          "callToAction": {
            "type": "string"
          }
        },
        "example": {
          "title": "This is a title",
          "bodyText": "This is some body text",
          "callToAction": "http://www.example.com/"
        }
      },
      "Parameters2": {
        "title": "Parameters2",
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "example": {
          "firstName": "John",
          "lastName": "English"
        }
      },
      "Parameters4": {
        "title": "Parameters4",
        "required": [
          "pageTitle",
          "pageText",
          "callToAction"
        ],
        "type": "object",
        "properties": {
          "pageTitle": {
            "type": "string"
          },
          "pageText": {
            "type": "string"
          },
          "callToAction": {
            "type": "string"
          }
        },
        "example": {
          "pageTitle": "The new page title",
          "pageText": "The new body text",
          "callToAction": "${ctaUrl}"
        }
      },
      "PrimaryButtonBackgroundColor": {
        "title": "PrimaryButtonBackgroundColor",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "PrimaryButtonLink": {
        "title": "PrimaryButtonLink",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "PrimaryButtonText": {
        "title": "PrimaryButtonText",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "PrimaryButtonTextColor": {
        "title": "PrimaryButtonTextColor",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "Recipient1": {
        "title": "Recipient1",
        "required": [
          "id",
          "number",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters2"
          }
        },
        "example": {
          "id": "05f81030-95fb-4c17-8736-ac73948e8b82",
          "number": 61491570156,
          "parameters": {
            "firstName": "John",
            "lastName": "English"
          }
        }
      },
      "SecondaryButtonBackgroundColor": {
        "title": "SecondaryButtonBackgroundColor",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "SecondaryButtonLink": {
        "title": "SecondaryButtonLink",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "SecondaryButtonText": {
        "title": "SecondaryButtonText",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "SecondaryButtonTextColor": {
        "title": "SecondaryButtonTextColor",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "SendCampaignToRecipientsrequest": {
        "title": "SendCampaignToRecipientsrequest",
        "required": [
          "recipients"
        ],
        "type": "object",
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            },
            "description": ""
          }
        }
      },
      "SendCampaignToRecipientsresponse": {
        "title": "SendCampaignToRecipientsresponse",
        "required": [
          "recipients"
        ],
        "type": "object",
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient1"
            },
            "description": ""
          }
        },
        "example": {
          "recipients": [
            {
              "id": "05f81030-95fb-4c17-8736-ac73948e8b82",
              "number": 61491570156,
              "parameters": {
                "firstName": "John",
                "lastName": "English"
              }
            },
            {
              "id": "01261663-9428-4a1d-9798-e8a1877cc29d",
              "number": 61491570158,
              "parameters": {
                "firstName": "Mary",
                "lastName": "Example"
              }
            }
          ]
        }
      },
      "Template": {
        "title": "Template",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "c9d7ce1d-20c4-4228-9ba1-6da2a3b4e5e0",
          "name": "Header image and 1 or 2 CTA"
        }
      },
      "Title": {
        "title": "Title",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "example": {
          "type": "TEXT"
        }
      },
      "UpdateaLandingPageresponse": {
        "title": "UpdateaLandingPageresponse",
        "required": [
          "id",
          "name",
          "template_id",
          "parameters",
          "fields",
          "created_timestamp",
          "modified_timestamp"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "template_id": {
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters4"
          },
          "fields": {
            "$ref": "#/components/schemas/Fields"
          },
          "created_timestamp": {
            "type": "string"
          },
          "modified_timestamp": {
            "type": "string"
          }
        },
        "example": {
          "id": "a94041bb-704b-48fa-ba0b-6f1538fc502f",
          "name": " My Landing Page",
          "template_id": "ac895f01-3149-4bf8-a8fe-01d3b8a9ba97",
          "parameters": {
            "pageTitle": "The new page title",
            "pageText": "The new body text",
            "callToAction": "${ctaUrl}"
          },
          "fields": {
            "title": {
              "type": "TEXT"
            },
            "bodyText": {
              "type": "TEXT"
            },
            "ctaUrl": {
              "type": "URL"
            }
          },
          "created_timestamp": "2019-11-03T11:49:02.807Z",
          "modified_timestamp": "2019-11-04T11:49:02.807Z"
        }
      },
      "format": {
        "title": "format",
        "enum": [
          "MMS",
          "SMS",
          "TTS"
        ],
        "type": "string",
        "description": "Format of message, SMS or TTS (Text To Speech)",
        "example": "AU"
      },
      "group_by": {
        "title": "group_by",
        "enum": [
          "DAY",
          "DESTINATION_ADDRESS",
          "DESTINATION_ADDRESS_COUNTRY",
          "FORMAT",
          "HOUR",
          "METADATA_KEY",
          "METADATA_VALUE",
          "MINUTE",
          "MONTH",
          "SOURCE_ADDRESS",
          "SOURCE_ADDRESS_COUNTRY",
          "STATUS",
          "STATUS_CODE",
          "YEAR",
          "ACCOUNT"
        ],
        "type": "string",
        "example": "DAY"
      },
      "grouping": {
        "title": "grouping",
        "enum": [
          "DAY",
          "DELIVERY_REPORT",
          "DESTINATION_ADDRESS",
          "DESTINATION_ADDRESS_COUNTRY",
          "FORMAT",
          "HOUR",
          "METADATA_KEY",
          "METADATA_VALUE",
          "MINUTE",
          "MONTH",
          "SOURCE_ADDRESS",
          "SOURCE_ADDRESS_COUNTRY",
          "STATUS",
          "STATUS_CODE",
          "YEAR",
          "ACCOUNT"
        ],
        "type": "string",
        "description": "The value of the group by parameter provided for this report",
        "example": "DAY"
      },
      "message_type": {
        "title": "message_type",
        "enum": [
          "SENT_MESSAGES",
          "RECEIVED_MESSAGES"
        ],
        "type": "string",
        "example": "SENT_MESSAGES"
      }
    },
    "headers": {
      "ExpiresAfter": {
        "description": "date in UTC when token expires",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "securitySchemes": {
      "basic_auth": {
        "type": "http",
        "scheme": "basic"
      },
      "hmac_auth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}
